{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "safeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)",
            "owned()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {}
            },
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ARXpresale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)",
            "owned()",
            "transferOwnership(address)",
            "ARXpresale()",
            "Setuppresale(uint256,uint256)",
            "setPrice()",
            "fallback()",
            "BuyARXtokens()",
            "beneficiaryMultiSigWithdraw(uint256)",
            "checkGoalandPrice()",
            "refund()",
            "withdrawRemainingTokens(uint256)",
            "updateStatus()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "ARXpresale()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "Setuppresale(uint256,uint256)": {
                "argument": {
                    "_fundingStartBlock": "uint256",
                    "_fundingEndBlock": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "setPrice()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "BuyARXtokens()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "beneficiaryMultiSigWithdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "checkGoalandPrice()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "withdrawRemainingTokens(uint256)": {
                "argument": {
                    "_amountToPull": "uint256"
                },
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "updateStatus()": {
                "argument": {},
                "contract": {
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "fundingMaxCapInWei": "uint256",
                    "fundingRemainingAvailableInEth": "uint256",
                    "currentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                483,
                141
            ],
            "BuyARXtokens()": [
                703,
                229
            ],
            "withdrawRemainingTokens(uint256)": [
                713,
                251
            ],
            "setPrice()": [
                1326,
                493
            ],
            "Setuppresale(uint256,uint256)": [
                1243,
                471
            ],
            "updateStatus()": [
                506,
                163
            ],
            "transferOwnership(address)": [
                1536,
                559
            ],
            "beneficiaryMultiSigWithdraw(uint256)": [
                801,
                295
            ],
            "checkGoalandPrice()": [
                346,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump4831": [
                "beneficiaryWallet.transfer(_amount)",
                "beneficiaryWallet.transfer(_amount)"
            ],
            "block4652": [
                "tokenReward.transfer(msg.sender, _amountToPull)"
            ],
            "jump4652": [
                "tokenReward.transfer(msg.sender, _amountToPull)",
                "tokenReward.transfer(msg.sender, _amountToPull)"
            ],
            "jump3580": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ],
            "jump2062_0": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block2062_1": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block2062_0": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block2062": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "jump2062_1": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "jump2062": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block3580": [
                "msg.sender.transfer(ethRefund)"
            ],
            "block4831": [
                "beneficiaryWallet.transfer(_amount)"
            ]
        }
    }
}