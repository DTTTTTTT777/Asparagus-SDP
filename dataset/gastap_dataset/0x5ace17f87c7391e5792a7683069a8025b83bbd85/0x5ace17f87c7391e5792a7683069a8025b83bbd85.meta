{
    "SafeMath": {
        "function_list": [
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SmartBillions": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "commitDividend(address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "SmartBillions()",
            "hashesLength()",
            "walletBalanceOf(address)",
            "walletPeriodOf(address)",
            "walletBlockOf(address)",
            "betValueOf(address)",
            "betHashOf(address)",
            "betBlockNumberOf(address)",
            "dividendsBlocks()",
            "changeOwner(address)",
            "changeAnimator(address)",
            "setInvestStart(uint256)",
            "setBetMax(uint256)",
            "resetBet()",
            "coldStore(uint256)",
            "hotStore()",
            "houseKeeping()",
            "payWallet()",
            "pay(uint256)",
            "investDirect()",
            "invest(address)",
            "disinvest()",
            "payDividends()",
            "commitDividend(address)",
            "betPrize(SmartBillions.Bet,uint24)",
            "betOf(address)",
            "won()",
            "fallback()",
            "play()",
            "playRandom(address)",
            "playSystem(uint256,address)",
            "addHashes(uint256)",
            "addHashes128()",
            "calcHashes(uint32,uint32)",
            "getHash(uint256)",
            "putHash()",
            "putHashes(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "commitDividend(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "SmartBillions()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "hashesLength()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletPeriodOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "walletBlockOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betValueOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betHashOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betBlockNumberOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "dividendsBlocks()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "changeAnimator(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "setInvestStart(uint256)": {
                "argument": {
                    "_when": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "setBetMax(uint256)": {
                "argument": {
                    "_maxsum": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "resetBet()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "coldStore(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "hotStore()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "houseKeeping()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "payWallet()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "pay(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "investDirect()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "disinvest()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "payDividends()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betPrize(SmartBillions.Bet,uint24)": {
                "argument": {
                    "_hash": "uint24"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "betOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "won()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "play()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "playRandom(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "playSystem(uint256,address)": {
                "argument": {
                    "_hash": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "addHashes(uint256)": {
                "argument": {
                    "_sadd": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "addHashes128()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "calcHashes(uint32,uint32)": {
                "argument": {
                    "_lastb": "uint32",
                    "_delta": "uint32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "getHash(uint256)": {
                "argument": {
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "putHash()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "putHashes(uint256)": {
                "argument": {
                    "_num": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "walletBalance": "uint256",
                    "investStart": "uint256",
                    "investBalance": "uint256",
                    "investBalanceMax": "uint256",
                    "dividendPeriod": "uint256",
                    "dividends": "uint256[]",
                    "maxWin": "uint256",
                    "hashFirst": "uint256",
                    "hashLast": "uint256",
                    "hashNext": "uint256",
                    "hashBetSum": "uint256",
                    "hashBetMax": "uint256",
                    "hashes": "uint256[]",
                    "hashesSize": "uint256",
                    "coldStoreLast": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "coldStore(uint256)": [
                3593,
                1065
            ],
            "won()": [
                1180,
                163
            ],
            "walletBalanceOf(address)": [
                2258,
                559
            ],
            "dividendsBlocks()": [
                1841,
                405
            ],
            "investDirect()": [
                3497,
                999
            ],
            "allowance(address,address)": [
                3704,
                1131
            ],
            "transferFrom(address,address,uint256)": [
                1336,
                251
            ],
            "hotStore()": [
                3444,
                955
            ],
            "setBetMax(uint256)": [
                1058,
                119
            ],
            "approve(address,uint256)": [
                1103,
                141
            ],
            "betHashOf(address)": [
                2887,
                757
            ],
            "invest(address)": [
                860,
                75
            ],
            "changeAnimator(address)": [
                1971,
                449
            ],
            "hashesLength()": [
                2475,
                625
            ],
            "addHashes(uint256)": [
                1776,
                383
            ],
            "changeOwner(address)": [
                3214,
                867
            ],
            "walletPeriodOf(address)": [
                3998,
                1263
            ],
            "play()": [
                2974,
                779
            ],
            "playRandom(address)": [
                1445,
                273
            ],
            "disinvest()": [
                3932,
                1219
            ],
            "putHashes(uint256)": [
                2038,
                471
            ],
            "balanceOf(address)": [
                2388,
                603
            ],
            "payWallet()": [
                3148,
                823
            ],
            "playSystem(uint256,address)": [
                1519,
                295
            ],
            "betOf(address)": [
                2083,
                493
            ],
            "addHashes128()": [
                3358,
                911
            ],
            "setInvestStart(uint256)": [
                4085,
                1285
            ],
            "payDividends()": [
                3866,
                1175
            ],
            "putHash()": [
                1203,
                185
            ],
            "walletBlockOf(address)": [
                2561,
                669
            ],
            "houseKeeping()": [
                3681,
                1109
            ],
            "betValueOf(address)": [
                1884,
                427
            ],
            "resetBet()": [
                2170,
                515
            ],
            "transfer(address,uint256)": [
                3281,
                889
            ],
            "betBlockNumberOf(address)": [
                2800,
                735
            ]
        },
        "block_CALL_mapping": {
            "jump18213_13": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump4276": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block18114_9": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_8": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_7": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_6": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_5": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_4": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_3": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_2": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_1": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_0": [
                "msg.sender.transfer(_amount)"
            ],
            "jump16118": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18213": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18114": [
                "msg.sender.transfer(_amount)"
            ],
            "jump18114": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18213_17": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_16": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_15": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_14": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_13": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_12": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_11": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_10": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18114_10": [
                "msg.sender.transfer(_amount)"
            ],
            "jump4276_2": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump18213_10": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump4276_0": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump4276_1": [
                "msg.sender.transfer(msg.value.sub(investing))",
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump18213_15": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_14": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_17": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_16": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18114_15": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_14": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_17": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_16": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_11": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_10": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_13": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block4276": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "jump18114_1": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_0": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_3": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_2": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_5": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_4": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_7": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_6": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_9": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_8": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18114_13": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_12": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_11": [
                "msg.sender.transfer(_amount)"
            ],
            "jump18114_12": [
                "msg.sender.transfer(_amount)",
                "msg.sender.transfer(_amount)"
            ],
            "block18114_17": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_16": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_15": [
                "msg.sender.transfer(_amount)"
            ],
            "block18114_14": [
                "msg.sender.transfer(_amount)"
            ],
            "block4276_0": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block4276_1": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block4276_2": [
                "msg.sender.transfer(msg.value.sub(investing))"
            ],
            "block18213_3": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_2": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_7": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_0": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_1": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_6": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_3": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_2": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_9": [
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_8": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_9": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_8": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_12": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_5": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_4": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_1": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_6": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_7": [
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_11": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "jump18213_0": [
                "msg.sender.transfer(maxpay)",
                "msg.sender.transfer(maxpay)"
            ],
            "block18213_5": [
                "msg.sender.transfer(maxpay)"
            ],
            "block16118": [
                "msg.sender.transfer(_amount)"
            ],
            "block18213_4": [
                "msg.sender.transfer(maxpay)"
            ]
        }
    }
}