{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                737,
                229
            ],
            "approve(address,uint256)": [
                202,
                75
            ],
            "unpause()": [
                479,
                141
            ],
            "increaseApproval(address,uint256)": [
                948,
                295
            ],
            "balanceOf(address)": [
                650,
                207
            ],
            "allowance(address,address)": [
                1049,
                317
            ],
            "decreaseApproval(address,uint256)": [
                549,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "transferOwnership(address)": [
                1168,
                339
            ],
            "transfer(address,uint256)": [
                847,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "ApplauseCashToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ApplauseCashToken()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "ApplauseCashToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                1017,
                295
            ],
            "approve(address,uint256)": [
                390,
                97
            ],
            "unpause()": [
                759,
                207
            ],
            "increaseApproval(address,uint256)": [
                1372,
                383
            ],
            "balanceOf(address)": [
                930,
                273
            ],
            "decreaseApproval(address,uint256)": [
                829,
                251
            ],
            "transferFrom(address,address,uint256)": [
                534,
                141
            ],
            "allowance(address,address)": [
                1473,
                405
            ],
            "transfer(address,uint256)": [
                1271,
                361
            ],
            "transferOwnership(address)": [
                1592,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "ApplauseCashCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "ApplauseCashCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)",
            "fallback()",
            "buyTokens(address)",
            "transferTokens(address,uint256)",
            "setPreIcoParameters(uint256,uint256,uint256,uint256)",
            "setIcoParameters(uint256,uint256,uint256,uint256)",
            "setWallet(address)",
            "setRate(uint256)",
            "setSoftcap(uint256)",
            "pauseToken()",
            "unpauseToken()",
            "transferTokenOwnership(address)",
            "icoHasEnded()",
            "preIcoHasEnded()",
            "forwardFunds()",
            "getBonusPercent(uint256)",
            "applyBonus(uint256,uint256)",
            "validateWithinPeriods()",
            "validateWithinCaps(uint256,uint256)",
            "claimRefund()",
            "softcapReached()",
            "finaliseCrowdsale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "ApplauseCashCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_preIcoStartTime": "uint256",
                    "_preIcoEndTime": "uint256",
                    "_preIcoHardcap": "uint256",
                    "_icoStartTime": "uint256",
                    "_icoEndTime": "uint256",
                    "_icoHardcap": "uint256",
                    "_softcap": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "transferTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setPreIcoParameters(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_preIcoStartTime": "uint256",
                    "_preIcoEndTime": "uint256",
                    "_preIcoHardcap": "uint256",
                    "_preIcoMinimumWei": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setIcoParameters(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_icoStartTime": "uint256",
                    "_icoEndTime": "uint256",
                    "_icoHardcap": "uint256",
                    "_icoMinimumWei": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "setSoftcap(uint256)": {
                "argument": {
                    "_softcap": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "pauseToken()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "unpauseToken()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "icoHasEnded()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "preIcoHasEnded()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "getBonusPercent(uint256)": {
                "argument": {
                    "currentTime": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "applyBonus(uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "percent": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "validateWithinPeriods()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "validateWithinCaps(uint256,uint256)": {
                "argument": {
                    "tokensAmount": "uint256",
                    "weiAmount": "uint256"
                },
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "softcapReached()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            },
            "finaliseCrowdsale()": {
                "argument": {},
                "contract": {
                    "softcap": "uint256",
                    "preIcoStartTime": "uint256",
                    "preIcoEndTime": "uint256",
                    "icoStartTime": "uint256",
                    "icoEndTime": "uint256",
                    "preIcoHardcap": "uint256",
                    "icoHardcap": "uint256",
                    "rate": "uint256",
                    "tokensInvested": "uint256",
                    "preIcoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "icoBonuses": "ApplauseCashCrowdsale.Bonus[]",
                    "preIcoMinimumWei": "uint256",
                    "icoMinimumWei": "uint256",
                    "defaultPercent": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferTokenOwnership(address)": [
                549,
                119
            ],
            "claimRefund()": [
                1819,
                647
            ],
            "setRate(uint256)": [
                804,
                229
            ],
            "preIcoHasEnded()": [
                1318,
                449
            ],
            "setIcoParameters(uint256,uint256,uint256,uint256)": [
                729,
                207
            ],
            "getBonusPercent(uint256)": [
                1210,
                405
            ],
            "softcapReached()": [
                959,
                295
            ],
            "setPreIcoParameters(uint256,uint256,uint256,uint256)": [
                1049,
                339
            ],
            "transferTokens(address,uint256)": [
                1842,
                669
            ],
            "transferOwnership(address)": [
                2126,
                779
            ],
            "setWallet(address)": [
                1962,
                713
            ],
            "finaliseCrowdsale()": [
                616,
                141
            ],
            "pauseToken()": [
                663,
                163
            ],
            "setSoftcap(uint256)": [
                504,
                97
            ],
            "unpauseToken()": [
                849,
                251
            ],
            "buyTokens(address)": [
                2072,
                757
            ],
            "icoHasEnded()": [
                1614,
                559
            ]
        },
        "block_CALL_mapping": {
            "jump5948": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump3722": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3427": [
                "token.transferOwnership(newOwner)",
                "token.transferOwnership(newOwner)"
            ],
            "block2813_1": [
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "block2813_0": [
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "jump4780": [
                "token.unpause()",
                "token.unpause()"
            ],
            "jump6262": [
                "token.transfer(beneficiary, tokens)",
                "token.transfer(beneficiary, tokens)"
            ],
            "block5948": [
                "vault.refund(msg.sender)"
            ],
            "block6262": [
                "token.transfer(beneficiary, tokens)"
            ],
            "block4197": [
                "token.pause()"
            ],
            "jump4197": [
                "token.pause()",
                "token.pause()"
            ],
            "block3885": [
                "vault.enableRefunds()"
            ],
            "jump2813_1": [
                "token.transfer(beneficiary, bonusedTokens)",
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "jump2813_0": [
                "token.transfer(beneficiary, bonusedTokens)",
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "block4780": [
                "token.unpause()"
            ],
            "jump7547_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump7547_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3427": [
                "token.transferOwnership(newOwner)"
            ],
            "block3722": [
                "vault.close()"
            ],
            "block2813": [
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "jump7547": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3885": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump2813": [
                "token.transfer(beneficiary, bonusedTokens)",
                "token.transfer(beneficiary, bonusedTokens)"
            ],
            "block7547_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7547_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block7547": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ]
        }
    },
    "Deployer": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "deploy()",
            "setOwner()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS_MULTIPLIER": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS_MULTIPLIER": "uint256"
                }
            },
            "deploy()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS_MULTIPLIER": "uint256"
                }
            },
            "setOwner()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS_MULTIPLIER": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKEN_DECIMALS_MULTIPLIER": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}