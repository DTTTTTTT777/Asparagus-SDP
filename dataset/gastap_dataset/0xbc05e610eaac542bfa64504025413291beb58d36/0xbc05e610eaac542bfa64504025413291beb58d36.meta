{
    "Owned": {
        "function_list": [
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {}
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "cancelOwnershipTransfer()": [
                125,
                75
            ],
            "isOwner(address)": [
                172,
                97
            ],
            "completeOwnershipTransfer()": [
                528,
                185
            ],
            "initiateOwnershipTransfer(address)": [
                350,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "OpsManaged": {
        "function_list": [
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "OpsManaged()",
            "isOps(address)",
            "isOwnerOrOps(address)",
            "setOpsAddress(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {}
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "OpsManaged()": {
                "argument": {},
                "contract": {}
            },
            "isOps(address)": {
                "argument": {},
                "contract": {}
            },
            "isOwnerOrOps(address)": {
                "argument": {},
                "contract": {}
            },
            "setOpsAddress(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "cancelOwnershipTransfer()": [
                169,
                75
            ],
            "isOwner(address)": [
                216,
                97
            ],
            "completeOwnershipTransfer()": [
                841,
                251
            ],
            "initiateOwnershipTransfer(address)": [
                663,
                207
            ],
            "isOps(address)": [
                888,
                273
            ],
            "setOpsAddress(address)": [
                307,
                119
            ],
            "isOwnerOrOps(address)": [
                572,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ERC20Token(string,string,uint8,uint256,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            },
            "ERC20Token(string,string,uint8,uint256,address)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "tokenTotalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                302,
                97
            ],
            "symbol()": [
                715,
                207
            ],
            "balanceOf(address)": [
                628,
                185
            ],
            "totalSupply()": [
                403,
                119
            ],
            "name()": [
                158,
                75
            ],
            "transferFrom(address,address,uint256)": [
                446,
                141
            ],
            "allowance(address,address)": [
                960,
                251
            ],
            "transfer(address,uint256)": [
                859,
                229
            ],
            "decimals()": [
                579,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Finalizable": {
        "function_list": [
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "Finalizable()",
            "finalize()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {}
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "Finalizable()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                285,
                119
            ],
            "isOwner(address)": [
                194,
                97
            ],
            "completeOwnershipTransfer()": [
                644,
                229
            ],
            "initiateOwnershipTransfer(address)": [
                466,
                185
            ],
            "cancelOwnershipTransfer()": [
                147,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "FinalizableToken": {
        "function_list": [
            "Finalizable()",
            "finalize()",
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "OpsManaged()",
            "isOps(address)",
            "isOwnerOrOps(address)",
            "setOpsAddress(address)",
            "ERC20Token(string,string,uint8,uint256,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "FinalizableToken(string,string,uint8,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "validateTransfer(address,address)"
        ],
        "initial_state": {
            "Finalizable()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {}
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "OpsManaged()": {
                "argument": {},
                "contract": {}
            },
            "isOps(address)": {
                "argument": {},
                "contract": {}
            },
            "isOwnerOrOps(address)": {
                "argument": {},
                "contract": {}
            },
            "setOpsAddress(address)": {
                "argument": {},
                "contract": {}
            },
            "ERC20Token(string,string,uint8,uint256,address)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            },
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "FinalizableToken(string,string,uint8,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            },
            "validateTransfer(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                434,
                97
            ],
            "cancelOwnershipTransfer()": [
                578,
                141
            ],
            "finalize()": [
                898,
                229
            ],
            "isOwner(address)": [
                758,
                185
            ],
            "completeOwnershipTransfer()": [
                1977,
                493
            ],
            "name()": [
                290,
                75
            ],
            "totalSupply()": [
                535,
                119
            ],
            "isOps(address)": [
                2024,
                515
            ],
            "setOpsAddress(address)": [
                945,
                251
            ],
            "initiateOwnershipTransfer(address)": [
                1680,
                427
            ],
            "balanceOf(address)": [
                1036,
                273
            ],
            "symbol()": [
                1297,
                339
            ],
            "transferFrom(address,address,uint256)": [
                625,
                163
            ],
            "allowance(address,address)": [
                1858,
                471
            ],
            "transfer(address,uint256)": [
                1441,
                361
            ],
            "isOwnerOrOps(address)": [
                1542,
                383
            ],
            "decimals()": [
                849,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "FlexibleTokenSale": {
        "function_list": [
            "OpsManaged()",
            "isOps(address)",
            "isOwnerOrOps(address)",
            "setOpsAddress(address)",
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "Finalizable()",
            "finalize()",
            "FlexibleTokenSale(uint256,uint256,address)",
            "currentTime()",
            "initialize(FinalizableToken)",
            "setWalletAddress(address)",
            "setMaxTokensPerAccount(uint256)",
            "setTokensPerKEther(uint256)",
            "setBonus(uint256)",
            "setSaleWindow(uint256,uint256)",
            "suspend()",
            "resume()",
            "fallback()",
            "buyTokens(address)",
            "buyTokensInternal(address,uint256)",
            "getUserTokenBalance(address)",
            "reclaimTokens()"
        ],
        "initial_state": {
            "OpsManaged()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "isOps(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "isOwnerOrOps(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setOpsAddress(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "Finalizable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "FlexibleTokenSale(uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "currentTime()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "initialize(FinalizableToken)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setWalletAddress(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setMaxTokensPerAccount(uint256)": {
                "argument": {
                    "_maxTokens": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setTokensPerKEther(uint256)": {
                "argument": {
                    "_tokensPerKEther": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setBonus(uint256)": {
                "argument": {
                    "_bonus": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "setSaleWindow(uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "suspend()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "resume()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "buyTokensInternal(address,uint256)": {
                "argument": {
                    "_bonus": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "getUserTokenBalance(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            },
            "reclaimTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensPerKEther": "uint256",
                    "bonus": "uint256",
                    "maxTokensPerAccount": "uint256",
                    "contributionMin": "uint256",
                    "tokenConversionFactor": "uint256",
                    "totalTokensSold": "uint256",
                    "totalEtherCollected": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "cancelOwnershipTransfer()": [
                636,
                141
            ],
            "reclaimTokens()": [
                817,
                207
            ],
            "currentTime()": [
                2231,
                691
            ],
            "setSaleWindow(uint256,uint256)": [
                997,
                295
            ],
            "setOpsAddress(address)": [
                1210,
                361
            ],
            "isOwnerOrOps(address)": [
                1738,
                537
            ],
            "isOwner(address)": [
                683,
                163
            ],
            "initiateOwnershipTransfer(address)": [
                1919,
                603
            ],
            "setTokensPerKEther(uint256)": [
                567,
                119
            ],
            "setMaxTokensPerAccount(uint256)": [
                2533,
                801
            ],
            "setBonus(uint256)": [
                498,
                97
            ],
            "suspend()": [
                2274,
                713
            ],
            "setWalletAddress(address)": [
                1647,
                515
            ],
            "resume()": [
                451,
                75
            ],
            "finalize()": [
                864,
                229
            ],
            "completeOwnershipTransfer()": [
                2321,
                735
            ],
            "buyTokens(address)": [
                2368,
                757
            ],
            "isOps(address)": [
                2442,
                779
            ]
        },
        "block_CALL_mapping": {
            "jump8999_0": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "jump8999_1": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "jump8999": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "jump9079_0": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump9079_1": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump9610_1": [
                "token.balanceOf(_beneficiary)",
                "token.balanceOf(_beneficiary)"
            ],
            "jump6568": [
                "_token.decimals()",
                "_token.decimals()"
            ],
            "block4177": [
                "token.transfer(tokenOwner, tokens)"
            ],
            "jump4177": [
                "token.transfer(tokenOwner, tokens)",
                "token.transfer(tokenOwner, tokens)"
            ],
            "jump8641_0": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "block9079": [
                "msg.sender.transfer(refund)"
            ],
            "block9610_0": [
                "token.balanceOf(_beneficiary)"
            ],
            "jump8228": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block8228": [
                "token.balanceOf(address(this))"
            ],
            "block8999": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "block9610_1": [
                "token.balanceOf(_beneficiary)"
            ],
            "jump3859": [
                "token.owner()",
                "token.owner()"
            ],
            "jump9079": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump8228_1": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump8228_0": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block9610": [
                "token.balanceOf(_beneficiary)"
            ],
            "block8641_0": [
                "walletAddress.transfer(contribution)"
            ],
            "block8641_1": [
                "walletAddress.transfer(contribution)"
            ],
            "jump3646": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block9079_0": [
                "msg.sender.transfer(refund)"
            ],
            "block3646": [
                "token.balanceOf(address(this))"
            ],
            "block8228_1": [
                "token.balanceOf(address(this))"
            ],
            "block8228_0": [
                "token.balanceOf(address(this))"
            ],
            "block9079_1": [
                "msg.sender.transfer(refund)"
            ],
            "block3859": [
                "token.owner()"
            ],
            "jump8641_1": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "block8641": [
                "walletAddress.transfer(contribution)"
            ],
            "block8999_0": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "block8999_1": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "block6568": [
                "_token.decimals()"
            ],
            "jump9610": [
                "token.balanceOf(_beneficiary)",
                "token.balanceOf(_beneficiary)"
            ],
            "jump8641": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "jump9610_0": [
                "token.balanceOf(_beneficiary)",
                "token.balanceOf(_beneficiary)"
            ]
        }
    },
    "BluzelleTokenConfig": {
        "function_list": [
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKEN_SYMBOL": "string",
                    "TOKEN_NAME": "string",
                    "TOKEN_DECIMALS": "uint8",
                    "DECIMALSFACTOR": "uint256",
                    "TOKEN_TOTALSUPPLY": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BluzelleTokenSaleConfig": {
        "function_list": [
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "INITIAL_STARTTIME": "uint256",
                    "INITIAL_ENDTIME": "uint256",
                    "INITIAL_STAGE": "uint256",
                    "CONTRIBUTION_MIN": "uint256",
                    "TOKENS_PER_KETHER": "uint256",
                    "BONUS": "uint256",
                    "TOKENS_ACCOUNT_MAX": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BluzelleToken": {
        "function_list": [
            "FinalizableToken(string,string,uint8,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "validateTransfer(address,address)",
            "Finalizable()",
            "finalize()",
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "OpsManaged()",
            "isOps(address)",
            "isOwnerOrOps(address)",
            "setOpsAddress(address)",
            "ERC20Token(string,string,uint8,uint256,address)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "BluzelleToken()",
            "reclaimTokens()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "FinalizableToken(string,string,uint8,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "validateTransfer(address,address)": {
                "argument": {},
                "contract": {}
            },
            "Finalizable()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {}
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {}
            },
            "OpsManaged()": {
                "argument": {},
                "contract": {}
            },
            "isOps(address)": {
                "argument": {},
                "contract": {}
            },
            "isOwnerOrOps(address)": {
                "argument": {},
                "contract": {}
            },
            "setOpsAddress(address)": {
                "argument": {},
                "contract": {}
            },
            "ERC20Token(string,string,uint8,uint256,address)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8",
                    "_totalSupply": "uint256"
                },
                "contract": {}
            },
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "BluzelleToken()": {
                "argument": {},
                "contract": {}
            },
            "reclaimTokens()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "cancelOwnershipTransfer()": [
                788,
                163
            ],
            "reclaimTokens()": [
                1252,
                273
            ],
            "name()": [
                356,
                75
            ],
            "totalSupply()": [
                601,
                119
            ],
            "setOpsAddress(address)": [
                1395,
                339
            ],
            "allowance(address,address)": [
                2394,
                603
            ],
            "transferFrom(address,address,uint256)": [
                835,
                185
            ],
            "isOwnerOrOps(address)": [
                2078,
                515
            ],
            "approve(address,uint256)": [
                500,
                97
            ],
            "isOwner(address)": [
                1112,
                229
            ],
            "initiateOwnershipTransfer(address)": [
                2216,
                559
            ],
            "symbol()": [
                1833,
                471
            ],
            "balanceOf(address)": [
                1486,
                361
            ],
            "finalize()": [
                1299,
                295
            ],
            "completeOwnershipTransfer()": [
                2513,
                625
            ],
            "isOps(address)": [
                2560,
                647
            ],
            "transfer(address,uint256)": [
                1977,
                493
            ],
            "decimals()": [
                1203,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "BluzelleTokenSale": {
        "function_list": [
            "FlexibleTokenSale(uint256,uint256,address)",
            "currentTime()",
            "initialize(FinalizableToken)",
            "setWalletAddress(address)",
            "setMaxTokensPerAccount(uint256)",
            "setTokensPerKEther(uint256)",
            "setBonus(uint256)",
            "setSaleWindow(uint256,uint256)",
            "suspend()",
            "resume()",
            "fallback()",
            "buyTokens(address)",
            "buyTokensInternal(address,uint256)",
            "getUserTokenBalance(address)",
            "reclaimTokens()",
            "OpsManaged()",
            "isOps(address)",
            "isOwnerOrOps(address)",
            "setOpsAddress(address)",
            "Owned()",
            "isOwner(address)",
            "initiateOwnershipTransfer(address)",
            "cancelOwnershipTransfer()",
            "completeOwnershipTransfer()",
            "Finalizable()",
            "finalize()",
            "BluzelleTokenSale(address)",
            "setCurrentStage(uint256)",
            "setStageBonus(uint256,uint256)",
            "setWhitelistedStatus(address,uint256)",
            "setWhitelistedStatusInternal(address,uint256)",
            "setWhitelistedBatch(address[],uint256)",
            "buyTokensInternal(address,uint256)",
            "getUserTokenBalance(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "FlexibleTokenSale(uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "currentTime()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "initialize(FinalizableToken)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setWalletAddress(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setMaxTokensPerAccount(uint256)": {
                "argument": {
                    "_maxTokens": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setTokensPerKEther(uint256)": {
                "argument": {
                    "_tokensPerKEther": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setBonus(uint256)": {
                "argument": {
                    "_bonus": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setSaleWindow(uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "suspend()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "resume()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "buyTokensInternal(address,uint256)": {
                "argument": {
                    "_bonus": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "getUserTokenBalance(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "reclaimTokens()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "OpsManaged()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "isOps(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "isOwnerOrOps(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setOpsAddress(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "isOwner(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "initiateOwnershipTransfer(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "cancelOwnershipTransfer()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "completeOwnershipTransfer()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "Finalizable()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "BluzelleTokenSale(address)": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setCurrentStage(uint256)": {
                "argument": {
                    "_stage": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setStageBonus(uint256,uint256)": {
                "argument": {
                    "_stage": "uint256",
                    "_bonus": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setWhitelistedStatus(address,uint256)": {
                "argument": {
                    "_stage": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setWhitelistedStatusInternal(address,uint256)": {
                "argument": {
                    "_stage": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "setWhitelistedBatch(address[],uint256)": {
                "argument": {
                    "_addresses": "address[]",
                    "_stage": "uint256"
                },
                "contract": {
                    "currentStage": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "currentStage": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setCurrentStage(uint256)": [
                1433,
                295
            ],
            "cancelOwnershipTransfer()": [
                1065,
                185
            ],
            "reclaimTokens()": [
                1502,
                317
            ],
            "currentTime()": [
                3712,
                1087
            ],
            "setSaleWindow(uint256,uint256)": [
                2039,
                537
            ],
            "setOpsAddress(address)": [
                2252,
                603
            ],
            "isOwnerOrOps(address)": [
                3054,
                867
            ],
            "isOwner(address)": [
                1256,
                229
            ],
            "initiateOwnershipTransfer(address)": [
                3357,
                977
            ],
            "setTokensPerKEther(uint256)": [
                787,
                119
            ],
            "setWalletAddress(address)": [
                2963,
                845
            ],
            "setMaxTokensPerAccount(uint256)": [
                4101,
                1219
            ],
            "setBonus(uint256)": [
                718,
                97
            ],
            "suspend()": [
                3842,
                1131
            ],
            "setWhitelistedStatus(address,uint256)": [
                2862,
                823
            ],
            "resume()": [
                671,
                75
            ],
            "finalize()": [
                1592,
                361
            ],
            "completeOwnershipTransfer()": [
                3889,
                1153
            ],
            "buyTokens(address)": [
                3936,
                1175
            ],
            "isOps(address)": [
                4010,
                1197
            ],
            "setWhitelistedBatch(address[],uint256)": [
                1639,
                383
            ],
            "setStageBonus(uint256,uint256)": [
                3145,
                889
            ]
        },
        "block_CALL_mapping": {
            "jump12349": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "jump6069": [
                "token.transfer(tokenOwner, tokens)",
                "token.transfer(tokenOwner, tokens)"
            ],
            "block12349_1": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "jump12429": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump5538": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block12349": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "block11991_1": [
                "walletAddress.transfer(contribution)"
            ],
            "block11991_0": [
                "walletAddress.transfer(contribution)"
            ],
            "jump5751": [
                "token.owner()",
                "token.owner()"
            ],
            "block8919": [
                "_token.decimals()"
            ],
            "jump12349_1": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "block12349_0": [
                "token.transfer(_beneficiary, tokens)"
            ],
            "block5538": [
                "token.balanceOf(address(this))"
            ],
            "jump11578": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump12349_0": [
                "token.transfer(_beneficiary, tokens)",
                "token.transfer(_beneficiary, tokens)"
            ],
            "block12429_0": [
                "msg.sender.transfer(refund)"
            ],
            "block12429_1": [
                "msg.sender.transfer(refund)"
            ],
            "block12429": [
                "msg.sender.transfer(refund)"
            ],
            "block11578_0": [
                "token.balanceOf(address(this))"
            ],
            "block11578_1": [
                "token.balanceOf(address(this))"
            ],
            "jump11991_1": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "jump11991_0": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "jump11991": [
                "walletAddress.transfer(contribution)",
                "walletAddress.transfer(contribution)"
            ],
            "jump8919": [
                "_token.decimals()",
                "_token.decimals()"
            ],
            "jump11578_0": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump11578_1": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump12429_0": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "jump12429_1": [
                "msg.sender.transfer(refund)",
                "msg.sender.transfer(refund)"
            ],
            "block11991": [
                "walletAddress.transfer(contribution)"
            ],
            "block5751": [
                "token.owner()"
            ],
            "block6069": [
                "token.transfer(tokenOwner, tokens)"
            ],
            "block11578": [
                "token.balanceOf(address(this))"
            ]
        }
    }
}