{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "EventfulMarket": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SimpleMarket": {
        "function_list": [
            "assert(bool)",
            "next_id()",
            "isActive(uint256)",
            "getOwner(uint256)",
            "getOffer(uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "trade(address,uint256,ERC20,address,uint256,ERC20)",
            "make(ERC20,ERC20,uint128,uint128)",
            "take(bytes32,uint128)",
            "kill(bytes32)",
            "offer(uint256,ERC20,uint256,ERC20)",
            "buy(uint256,uint256)",
            "cancel(uint256)"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "next_id()": {
                "argument": {},
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "isActive(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "getOffer(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "trade(address,uint256,ERC20,address,uint256,ERC20)": {
                "argument": {
                    "sell_how_much": "uint256",
                    "buy_how_much": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "make(ERC20,ERC20,uint128,uint128)": {
                "argument": {
                    "haveAmount": "uint128",
                    "wantAmount": "uint128"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "take(bytes32,uint128)": {
                "argument": {
                    "id": "bytes32",
                    "maxTakeAmount": "uint128"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "kill(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "offer(uint256,ERC20,uint256,ERC20)": {
                "argument": {
                    "sell_how_much": "uint256",
                    "buy_how_much": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "buy(uint256,uint256)": {
                "argument": {
                    "id": "uint256",
                    "quantity": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            },
            "cancel(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "last_offer_id": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buy(uint256,uint256)": [
                1189,
                273
            ],
            "kill(bytes32)": [
                1031,
                229
            ],
            "getOffer(uint256)": [
                475,
                141
            ],
            "getOwner(uint256)": [
                1080,
                251
            ],
            "isActive(uint256)": [
                726,
                185
            ],
            "cancel(uint256)": [
                406,
                119
            ],
            "take(bytes32,uint128)": [
                649,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump7661_2": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7661_1": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7661_0": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7661": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block2307": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "block7661_1": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block6538_0": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "block7661": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block7661_2": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7428_0": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump7428_1": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump7428_2": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump6538_0": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )",
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "block6538": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "jump2307": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )",
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "jump2307_0": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )",
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "jump7428": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7428_2": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7661_0": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block7428_0": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7428_1": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump6538": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )",
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "block7428": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block2307_0": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ]
        }
    },
    "ExpiringMarket": {
        "function_list": [
            "assert(bool)",
            "next_id()",
            "isActive(uint256)",
            "getOwner(uint256)",
            "getOffer(uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "trade(address,uint256,ERC20,address,uint256,ERC20)",
            "make(ERC20,ERC20,uint128,uint128)",
            "take(bytes32,uint128)",
            "kill(bytes32)",
            "offer(uint256,ERC20,uint256,ERC20)",
            "buy(uint256,uint256)",
            "cancel(uint256)",
            "ExpiringMarket(uint256)",
            "getTime()",
            "isClosed()"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "next_id()": {
                "argument": {},
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "isActive(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "getOffer(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "trade(address,uint256,ERC20,address,uint256,ERC20)": {
                "argument": {
                    "sell_how_much": "uint256",
                    "buy_how_much": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "make(ERC20,ERC20,uint128,uint128)": {
                "argument": {
                    "haveAmount": "uint128",
                    "wantAmount": "uint128"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "take(bytes32,uint128)": {
                "argument": {
                    "id": "bytes32",
                    "maxTakeAmount": "uint128"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "kill(bytes32)": {
                "argument": {
                    "id": "bytes32"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "offer(uint256,ERC20,uint256,ERC20)": {
                "argument": {
                    "sell_how_much": "uint256",
                    "buy_how_much": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "buy(uint256,uint256)": {
                "argument": {
                    "id": "uint256",
                    "quantity": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "cancel(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "ExpiringMarket(uint256)": {
                "argument": {
                    "lifetime_": "uint256"
                },
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "getTime()": {
                "argument": {},
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            },
            "isClosed()": {
                "argument": {},
                "contract": {
                    "lifetime": "uint256",
                    "close_time": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buy(uint256,uint256)": [
                1409,
                361
            ],
            "kill(bytes32)": [
                1204,
                295
            ],
            "isClosed()": [
                1253,
                317
            ],
            "getOffer(uint256)": [
                519,
                141
            ],
            "getOwner(uint256)": [
                1300,
                339
            ],
            "getTime()": [
                770,
                185
            ],
            "isActive(uint256)": [
                899,
                251
            ],
            "cancel(uint256)": [
                450,
                119
            ],
            "take(bytes32,uint128)": [
                693,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2542": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )",
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "jump7969": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block7736_0": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7736_1": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7736_2": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "block7969": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump6846_0": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )",
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "jump7736_2": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump7736_0": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump7736_1": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump2542_0": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )",
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "block6846_0": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "block7969_2": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block7969_0": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block7969_1": [
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block2542_0": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ],
            "block6846": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "block7736": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump6846": [
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )",
                "sell_which_token.transferFrom( msg.sender, this, sell_how_much )"
            ],
            "jump7736": [
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )",
                "buy_which_token.transferFrom( buyer, seller, buy_how_much )"
            ],
            "jump7969_0": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7969_1": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "jump7969_2": [
                "sell_which_token.transfer( buyer, sell_how_much )",
                "sell_which_token.transfer( buyer, sell_how_much )"
            ],
            "block2542": [
                "offer.sell_which_token.transfer( offer.owner , offer.sell_how_much )"
            ]
        }
    }
}