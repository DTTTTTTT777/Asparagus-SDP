{
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "EasyMineToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "EasyMineToken(address,address,address,address)",
            "burn(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "EasyMineToken(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "burn(uint256)": [
                639,
                185
            ],
            "balanceOf(address)": [
                708,
                207
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1040,
                273
            ],
            "transfer(address,uint256)": [
                939,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "EasyMineTokenWallet": {
        "function_list": [
            "EasyMineTokenWallet()",
            "setup(address,address)",
            "withdraw(uint256)",
            "maxPossibleWithdrawal()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "EasyMineTokenWallet()": {
                "argument": {},
                "contract": {
                    "VESTING_PERIOD": "uint256",
                    "DAILY_FUNDS_RELEASE": "uint256",
                    "startTime": "uint256",
                    "totalWithdrawn": "uint256"
                }
            },
            "setup(address,address)": {
                "argument": {},
                "contract": {
                    "VESTING_PERIOD": "uint256",
                    "DAILY_FUNDS_RELEASE": "uint256",
                    "startTime": "uint256",
                    "totalWithdrawn": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "requestedAmount": "uint256"
                },
                "contract": {
                    "VESTING_PERIOD": "uint256",
                    "DAILY_FUNDS_RELEASE": "uint256",
                    "startTime": "uint256",
                    "totalWithdrawn": "uint256"
                }
            },
            "maxPossibleWithdrawal()": {
                "argument": {},
                "contract": {
                    "VESTING_PERIOD": "uint256",
                    "DAILY_FUNDS_RELEASE": "uint256",
                    "startTime": "uint256",
                    "totalWithdrawn": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VESTING_PERIOD": "uint256",
                    "DAILY_FUNDS_RELEASE": "uint256",
                    "startTime": "uint256",
                    "totalWithdrawn": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "maxPossibleWithdrawal()": [
                462,
                185
            ],
            "withdraw(uint256)": [
                354,
                141
            ],
            "setup(address,address)": [
                255,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "easyMineToken.transfer(withdrawalAddress, withdrawalAmount)",
                "easyMineToken.transfer(withdrawalAddress, withdrawalAmount)"
            ],
            "block1499": [
                "easyMineToken.transfer(withdrawalAddress, withdrawalAmount)"
            ]
        }
    },
    "EasyMineIco": {
        "function_list": [
            "EasyMineIco(address)",
            "fallback()",
            "setup(address,address,address,uint256,uint256)",
            "maxTokensSold()",
            "totalTokensSold()",
            "scheduleStart(uint256)",
            "updateStage()",
            "buyTokens()",
            "reserveTokens(uint256)",
            "cleanup()",
            "finalize()"
        ],
        "initial_state": {
            "EasyMineIco(address)": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "setup(address,address,address,uint256,uint256)": {
                "argument": {
                    "_minStartDelay": "uint256",
                    "_maxDuration": "uint256"
                },
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "maxTokensSold()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "totalTokensSold()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "scheduleStart(uint256)": {
                "argument": {
                    "_startBlock": "uint256"
                },
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "updateStage()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "reserveTokens(uint256)": {
                "argument": {
                    "tokenCount": "uint256"
                },
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "cleanup()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "maxDuration": "uint256",
                    "minStartDelay": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "scheduleStart(uint256)": [
                813,
                207
            ],
            "totalTokensSold()": [
                988,
                273
            ],
            "setup(address,address,address,uint256,uint256)": [
                1449,
                427
            ],
            "reserveTokens(uint256)": [
                1600,
                449
            ],
            "buyTokens()": [
                1645,
                471
            ],
            "updateStage()": [
                1392,
                405
            ],
            "maxTokensSold()": [
                538,
                97
            ],
            "cleanup()": [
                747,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump1882_10": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump2088_8": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump1882_9": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump2088_1": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump5576": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump2088_3": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "block1882": [
                "easyMineToken.balanceOf(this)"
            ],
            "jump2088_5": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2088_4": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2088_7": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2088_6": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "block2088_10": [
                "easyMineToken.burn(balance)"
            ],
            "jump6410": [
                "easyMineToken.transfer(reservationAddress, tokensReserved)",
                "easyMineToken.transfer(reservationAddress, tokensReserved)"
            ],
            "jump3783": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block2826": [
                "wallet.send(msg.value - amountRemaining)"
            ],
            "jump2765": [
                "msg.sender.send(amountRemaining)",
                "msg.sender.send(amountRemaining)"
            ],
            "jump1882_2": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_3": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_0": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_1": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_6": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_7": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_4": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882_5": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "block2088_7": [
                "easyMineToken.burn(balance)"
            ],
            "block2088_4": [
                "easyMineToken.burn(balance)"
            ],
            "jump1882_8": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "block5576": [
                "easyMineToken.balanceOf(this)"
            ],
            "block2088_3": [
                "easyMineToken.burn(balance)"
            ],
            "block2088_2": [
                "easyMineToken.burn(balance)"
            ],
            "block2088_1": [
                "easyMineToken.burn(balance)"
            ],
            "block2088_0": [
                "easyMineToken.burn(balance)"
            ],
            "jump3120_1": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)",
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "jump3120_0": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)",
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "jump2826": [
                "wallet.send(msg.value - amountRemaining)",
                "wallet.send(msg.value - amountRemaining)"
            ],
            "jump2088_0": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2088_9": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "block3783": [
                "owner.send(this.balance)"
            ],
            "jump2088_10": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2088_2": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "jump2826_0": [
                "wallet.send(msg.value - amountRemaining)",
                "wallet.send(msg.value - amountRemaining)"
            ],
            "block2088": [
                "easyMineToken.burn(balance)"
            ],
            "jump3120": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)",
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "jump2765_0": [
                "msg.sender.send(amountRemaining)",
                "msg.sender.send(amountRemaining)"
            ],
            "block6410": [
                "easyMineToken.transfer(reservationAddress, tokensReserved)"
            ],
            "block1882_10": [
                "easyMineToken.balanceOf(this)"
            ],
            "jump1882": [
                "easyMineToken.balanceOf(this)",
                "easyMineToken.balanceOf(this)"
            ],
            "block2765": [
                "msg.sender.send(amountRemaining)"
            ],
            "block2826_1": [
                "wallet.send(msg.value - amountRemaining)"
            ],
            "block2826_0": [
                "wallet.send(msg.value - amountRemaining)"
            ],
            "block2088_6": [
                "easyMineToken.burn(balance)"
            ],
            "jump2765_1": [
                "msg.sender.send(amountRemaining)",
                "msg.sender.send(amountRemaining)"
            ],
            "block2088_9": [
                "easyMineToken.burn(balance)"
            ],
            "jump2826_1": [
                "wallet.send(msg.value - amountRemaining)",
                "wallet.send(msg.value - amountRemaining)"
            ],
            "block2088_8": [
                "easyMineToken.burn(balance)"
            ],
            "jump2088": [
                "easyMineToken.burn(balance)",
                "easyMineToken.burn(balance)"
            ],
            "block1882_0": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_1": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_2": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_3": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_4": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_5": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_6": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_7": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_8": [
                "easyMineToken.balanceOf(this)"
            ],
            "block1882_9": [
                "easyMineToken.balanceOf(this)"
            ],
            "block3120_1": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "block3120_0": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "block3120": [
                "easyMineToken.transfer(msg.sender, tokensToReceive)"
            ],
            "block2088_5": [
                "easyMineToken.burn(balance)"
            ],
            "block2765_1": [
                "msg.sender.send(amountRemaining)"
            ],
            "block2765_0": [
                "msg.sender.send(amountRemaining)"
            ]
        }
    }
}