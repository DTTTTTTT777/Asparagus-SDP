{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                500,
                163
            ],
            "isToken()": [
                720,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "transferOwnership(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "EmeraldToken": {
        "function_list": [
            "transferOwnership(address)",
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "EmeraldToken(string,string,uint256)",
            "setProducer(address,bool)",
            "produceEmeralds(address,uint256)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "isToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "EmeraldToken(string,string,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setProducer(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "produceEmeralds(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                390,
                97
            ],
            "releaseTokenTransfer()": [
                878,
                229
            ],
            "transfer(address,uint256)": [
                1266,
                339
            ],
            "setProducer(address,bool)": [
                1367,
                361
            ],
            "balanceOf(address)": [
                901,
                251
            ],
            "transferFrom(address,address,uint256)": [
                611,
                163
            ],
            "isToken()": [
                1565,
                405
            ],
            "allowance(address,address)": [
                1446,
                383
            ],
            "produceEmeralds(address,uint256)": [
                491,
                119
            ],
            "transferOwnership(address)": [
                1612,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "transferOwnership(address)",
            "halt()",
            "unhalt()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenDistribution": {
        "function_list": [
            "halt()",
            "unhalt()",
            "transferOwnership(address)",
            "TokenDistribution(EmeraldToken,address,uint256,uint256,uint256,uint256,uint256,uint256)",
            "fallback()",
            "buy()",
            "preallocate(address,uint256)",
            "loadRefund()",
            "setDates(uint256,uint256,uint256)",
            "contributeInternal(address,uint256,uint256)",
            "refund()",
            "getState()",
            "getTokenAmount(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "TokenDistribution(EmeraldToken,address,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_presaleStart": "uint256",
                    "_start": "uint256",
                    "_end": "uint256",
                    "_ethPresaleMaxNoDecimals": "uint256",
                    "_ethGoalNoDecimals": "uint256",
                    "_maxTokenCapNoDecimals": "uint256"
                },
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "preallocate(address,uint256)": {
                "argument": {
                    "_tokenAmountNoDecimals": "uint256"
                },
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "setDates(uint256,uint256,uint256)": {
                "argument": {
                    "_presaleStart": "uint256",
                    "_start": "uint256",
                    "_end": "uint256"
                },
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "contributeInternal(address,uint256,uint256)": {
                "argument": {
                    "_weiAmount": "uint256",
                    "_tokenAmount": "uint256"
                },
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            },
            "getTokenAmount(uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "presaleStart": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "weiGoal": "uint256",
                    "weiPresaleMax": "uint256",
                    "contributorsCount": "uint256",
                    "weiTotal": "uint256",
                    "weiDistributed": "uint256",
                    "maxCap": "uint256",
                    "tokensSold": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buy()": [
                1135,
                405
            ],
            "setDates(uint256,uint256,uint256)": [
                361,
                75
            ],
            "refund()": [
                820,
                229
            ],
            "halt()": [
                886,
                273
            ],
            "getState()": [
                426,
                97
            ],
            "unhalt()": [
                1278,
                493
            ],
            "preallocate(address,uint256)": [
                613,
                163
            ],
            "loadRefund()": [
                995,
                339
            ],
            "transferOwnership(address)": [
                1560,
                625
            ]
        },
        "block_CALL_mapping": {
            "block5454_2": [
                "wallet.transfer(_weiAmount)"
            ],
            "block2984": [
                "token.released()"
            ],
            "block4852": [
                "token.decimals()"
            ],
            "block5454_1": [
                "wallet.transfer(_weiAmount)"
            ],
            "jump4852_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump4852_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump5454": [
                "wallet.transfer(_weiAmount)",
                "wallet.transfer(_weiAmount)"
            ],
            "block5420_1": [
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "block5420_2": [
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump5454_2": [
                "wallet.transfer(_weiAmount)",
                "wallet.transfer(_weiAmount)"
            ],
            "jump4852": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block4852_0": [
                "token.decimals()"
            ],
            "jump3482": [
                "msg.sender.transfer(weiValue)",
                "msg.sender.transfer(weiValue)"
            ],
            "block5137_0": [
                "token.totalSupply()"
            ],
            "block5454": [
                "wallet.transfer(_weiAmount)"
            ],
            "block3190": [
                "token.decimals()"
            ],
            "block3482": [
                "msg.sender.transfer(weiValue)"
            ],
            "jump2984": [
                "token.released()",
                "token.released()"
            ],
            "jump5420": [
                "token.produceEmeralds(_receiver, _tokenAmount)",
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "block5420": [
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump5420_2": [
                "token.produceEmeralds(_receiver, _tokenAmount)",
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump5420_0": [
                "token.produceEmeralds(_receiver, _tokenAmount)",
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump5420_1": [
                "token.produceEmeralds(_receiver, _tokenAmount)",
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump5137": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5454_0": [
                "wallet.transfer(_weiAmount)"
            ],
            "jump5454_1": [
                "wallet.transfer(_weiAmount)",
                "wallet.transfer(_weiAmount)"
            ],
            "jump5454_0": [
                "wallet.transfer(_weiAmount)",
                "wallet.transfer(_weiAmount)"
            ],
            "block5137_1": [
                "token.totalSupply()"
            ],
            "block4852_1": [
                "token.decimals()"
            ],
            "block5137": [
                "token.totalSupply()"
            ],
            "block5137_2": [
                "token.totalSupply()"
            ],
            "jump5137_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5137_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5137_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5420_0": [
                "token.produceEmeralds(_receiver, _tokenAmount)"
            ],
            "jump3190": [
                "token.decimals()",
                "token.decimals()"
            ]
        }
    }
}