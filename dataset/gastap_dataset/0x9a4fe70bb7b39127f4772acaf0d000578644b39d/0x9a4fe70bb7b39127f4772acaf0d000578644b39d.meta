{
    "usingOraclize": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            }
        },
        "function_block_mapping": {
            "__callback(bytes32,string,bytes)": [
                200,
                97
            ],
            "__callback(bytes32,string)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "X": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "owned()",
            "transferOwnership(address)",
            "X()",
            "fallback()",
            "donationCount()",
            "crowdSaleDonate()",
            "getCurrentTokenCost()",
            "distributeDonationTokens()",
            "changeOraclizeGasPrice(uint256)",
            "withdrawFunds()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "__callback(bytes32,string)",
            "giveBlockReward()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "X()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "donationCount()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "crowdSaleDonate()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "getCurrentTokenCost()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "distributeDonationTokens()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "changeOraclizeGasPrice(uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "withdrawFunds()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "giveBlockReward()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_donations": "X.donation[]",
                    "regularDonations": "X.donation[]",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256",
                    "_totalDonationSupply": "uint256",
                    "_totalDonations": "uint256",
                    "_regularDonationsTotal": "uint256",
                    "_crowdSaleSupply": "uint256",
                    "_donationSupply": "uint256",
                    "_foundationSupply": "uint256",
                    "_AIExchangeSupply": "uint256",
                    "_lotterySupply": "uint256",
                    "_mineableSupply": "uint256",
                    "_presalePrice": "uint256",
                    "_julPrice": "uint256",
                    "_augPrice": "uint256",
                    "_sepPrice": "uint256",
                    "_octPrice": "uint256",
                    "_novPrice": "uint256",
                    "_decPrice": "uint256",
                    "_aug17": "uint256",
                    "_sep17": "uint256",
                    "_oct17": "uint256",
                    "_nov17": "uint256",
                    "_dec17": "uint256",
                    "_jan18": "uint256",
                    "oraclizeGasPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                1820,
                141
            ],
            "giveBlockReward()": [
                3898,
                757
            ],
            "withdrawFunds()": [
                2159,
                273
            ],
            "allowance(address,address)": [
                3669,
                691
            ],
            "transferFrom(address,address,uint256)": [
                2026,
                251
            ],
            "approve(address,uint256)": [
                1676,
                97
            ],
            "crowdSaleDonate()": [
                1906,
                185
            ],
            "distributeDonationTokens()": [
                3293,
                581
            ],
            "__callback(bytes32,string,bytes)": [
                2498,
                383
            ],
            "transferOwnership(address)": [
                3788,
                713
            ],
            "getCurrentTokenCost()": [
                2687,
                405
            ],
            "balanceOf(address)": [
                2859,
                493
            ],
            "changeOraclizeGasPrice(uint256)": [
                3557,
                647
            ],
            "__callback(bytes32,string)": [
                2206,
                295
            ],
            "donationCount()": [
                2412,
                339
            ],
            "transfer(address,uint256)": [
                3456,
                625
            ]
        },
        "block_CALL_mapping": {
            "jump10063": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block10528": [
                "oraclize.query_withGasLimit.value(price)(0, datasource, arg, gaslimit)"
            ],
            "block8307": [
                "OAR.getAddress()"
            ],
            "jump9686": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block5480": [
                "owner.call.gas(200000).value(this.balance)()"
            ],
            "jump8564": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump10528": [
                "oraclize.query_withGasLimit.value(price)(0, datasource, arg, gaslimit)",
                "oraclize.query_withGasLimit.value(price)(0, datasource, arg, gaslimit)"
            ],
            "block9686": [
                "OAR.getAddress()"
            ],
            "block8564": [
                "oraclize.cbAddress()"
            ],
            "jump8307": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block10063": [
                "oraclize.getPrice(datasource, gaslimit)"
            ]
        }
    }
}