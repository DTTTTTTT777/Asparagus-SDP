{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "StyrasToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "StyrasToken(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "burn(uint256)",
            "mint(address,uint256)",
            "mintPartners(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "StyrasToken(address,uint256)": {
                "argument": {
                    "reserved": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            },
            "mintPartners(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "reservedSupply": "uint256",
                    "publicLockEnd": "uint256",
                    "partnersLockEnd": "uint256",
                    "partnersMintLockEnd": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1922,
                515
            ],
            "decreaseApproval(address,uint256)": [
                1055,
                295
            ],
            "transferFrom(address,address,uint256)": [
                690,
                185
            ],
            "approve(address,uint256)": [
                503,
                119
            ],
            "increaseApproval(address,uint256)": [
                1821,
                493
            ],
            "mintPartners(uint256)": [
                1564,
                427
            ],
            "finishMinting()": [
                1243,
                339
            ],
            "balanceOf(address)": [
                1156,
                317
            ],
            "transferOwnership(address)": [
                2041,
                537
            ],
            "mint(address,uint256)": [
                866,
                229
            ],
            "burn(uint256)": [
                967,
                251
            ],
            "transfer(address,uint256)": [
                1633,
                449
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2173": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2173": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "Withdrawable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Withdrawable(address)",
            "enableWithdraw()",
            "withdraw(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Withdrawable(address)": {
                "argument": {},
                "contract": {}
            },
            "enableWithdraw()": {
                "argument": {},
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "withdraw(uint256)": [
                172,
                97
            ],
            "enableWithdraw()": [
                304,
                141
            ],
            "transferOwnership(address)": [
                414,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump656": [
                "wallet.transfer(weiAmount)",
                "wallet.transfer(weiAmount)"
            ],
            "block656": [
                "wallet.transfer(weiAmount)"
            ]
        }
    },
    "StyrasVault": {
        "function_list": [
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)",
            "Ownable()",
            "transferOwnership(address)",
            "Withdrawable(address)",
            "enableWithdraw()",
            "withdraw(uint256)",
            "StyrasVault(address)",
            "balanceOf(address)",
            "enableWithdraw()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Withdrawable(address)": {
                "argument": {},
                "contract": {}
            },
            "enableWithdraw()": {
                "argument": {},
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {}
            },
            "StyrasVault(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                514,
                207
            ],
            "withdraw(uint256)": [
                249,
                97
            ],
            "balanceOf(address)": [
                427,
                185
            ],
            "refund(address)": [
                889,
                339
            ],
            "enableWithdraw()": [
                404,
                163
            ],
            "close()": [
                294,
                119
            ],
            "deposit(address)": [
                835,
                317
            ],
            "transferOwnership(address)": [
                768,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump1131": [
                "wallet.transfer(weiAmount)",
                "wallet.transfer(weiAmount)"
            ],
            "block3003": [
                "investor.transfer(depositedValue)"
            ],
            "jump3003": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block1468": [
                "wallet.transfer(this.balance)"
            ],
            "block1131": [
                "wallet.transfer(weiAmount)"
            ],
            "jump1468": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ]
        }
    },
    "StyrasCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "StyrasCrowdsale(address,address)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hardCap()",
            "goalReached()",
            "hasEnded()",
            "claimRefund()",
            "enableWithdraw()",
            "withdraw(uint256)",
            "finalizePresale()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "StyrasCrowdsale(address,address)": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hardCap()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "enableWithdraw()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_weiAmountToWithdraw": "uint256"
                },
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "finalizePresale()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "minInvest": "uint256",
                    "presaleDeadline": "uint256",
                    "presaleRate": "uint256",
                    "presaleCap": "uint256",
                    "pubsaleDeadline": "uint256",
                    "pubsaleRate": "uint256",
                    "pubsaleCap": "uint256",
                    "reservedSupply": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1564,
                625
            ],
            "finalizePresale()": [
                1320,
                515
            ],
            "claimRefund()": [
                1430,
                559
            ],
            "enableWithdraw()": [
                3335,
                886
            ],
            "goalReached()": [
                1056,
                427
            ],
            "withdraw(uint256)": [
                2770,
                914
            ],
            "hardCap()": [
                1721,
                691
            ],
            "transferOwnership(address)": [
                1654,
                669
            ],
            "finalize()": [
                838,
                295
            ],
            "buyTokens(address)": [
                1510,
                603
            ]
        },
        "block_CALL_mapping": {
            "block6184": [
                "vault.enableRefunds()"
            ],
            "jump3335": [
                "vault.enableWithdraw()",
                "vault.enableWithdraw()"
            ],
            "jump2321_1": [
                "token.mint(beneficiary, tokenAmount)",
                "token.mint(beneficiary, tokenAmount)"
            ],
            "jump2321_0": [
                "token.mint(beneficiary, tokenAmount)",
                "token.mint(beneficiary, tokenAmount)"
            ],
            "jump5570": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump6677": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump6431": [
                "vault.transferOwnership(owner)",
                "vault.transferOwnership(owner)"
            ],
            "jump6184": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block6677": [
                "token.transferOwnership(owner)"
            ],
            "jump5570_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump5199_1": [
                "vault.balanceOf(msg.sender)",
                "vault.balanceOf(msg.sender)"
            ],
            "jump5199_0": [
                "vault.balanceOf(msg.sender)",
                "vault.balanceOf(msg.sender)"
            ],
            "block2321": [
                "token.mint(beneficiary, tokenAmount)"
            ],
            "block5570": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block5199_1": [
                "vault.balanceOf(msg.sender)"
            ],
            "jump5814": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3784": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5199_0": [
                "vault.balanceOf(msg.sender)"
            ],
            "block3784": [
                "token.totalSupply()"
            ],
            "block4430": [
                "vault.refund(msg.sender)"
            ],
            "block6431": [
                "vault.transferOwnership(owner)"
            ],
            "block5985": [
                "token.mintPartners(reservedSupply)"
            ],
            "jump2321": [
                "token.mint(beneficiary, tokenAmount)",
                "token.mint(beneficiary, tokenAmount)"
            ],
            "jump2770": [
                "vault.withdraw(_weiAmountToWithdraw)",
                "vault.withdraw(_weiAmountToWithdraw)"
            ],
            "jump5570_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block5199": [
                "vault.balanceOf(msg.sender)"
            ],
            "jump4430": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block5570_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block5570_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump5199": [
                "vault.balanceOf(msg.sender)",
                "vault.balanceOf(msg.sender)"
            ],
            "jump5985": [
                "token.mintPartners(reservedSupply)",
                "token.mintPartners(reservedSupply)"
            ],
            "block2321_1": [
                "token.mint(beneficiary, tokenAmount)"
            ],
            "block2321_0": [
                "token.mint(beneficiary, tokenAmount)"
            ],
            "block3335": [
                "vault.enableWithdraw()"
            ],
            "block5814": [
                "vault.close()"
            ],
            "block2770": [
                "vault.withdraw(_weiAmountToWithdraw)"
            ]
        }
    }
}