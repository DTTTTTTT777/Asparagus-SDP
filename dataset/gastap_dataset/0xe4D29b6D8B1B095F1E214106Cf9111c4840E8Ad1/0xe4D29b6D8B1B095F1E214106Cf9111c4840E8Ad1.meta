{
    "KeberuntunganAcak": {
        "function_list": [
            "KeberuntunganAcak()",
            "fallback()",
            "init()",
            "join()",
            "rand(uint256)",
            "changeOwner(address)",
            "changeMultiplier(uint256)",
            "changeFee(uint256)",
            "multiplierFactor()",
            "currentFee()",
            "totalEntries()",
            "userStats(address)",
            "entryDetails(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "KeberuntunganAcak()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "init()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "join()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "rand(uint256)": {
                "argument": {
                    "max": "uint256"
                },
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "changeMultiplier(uint256)": {
                "argument": {
                    "multi": "uint256"
                },
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "changeFee(uint256)": {
                "argument": {
                    "newFee": "uint256"
                },
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "multiplierFactor()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "currentFee()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "totalEntries()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "userStats(address)": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "entryDetails(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "balance": "uint256",
                    "fee": "uint256",
                    "multiplier": "uint256",
                    "entries": "KeberuntunganAcak.Entry[]",
                    "unpaidEntries": "uint256[]",
                    "FACTOR": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "currentFee()": [
                657,
                163
            ],
            "totalEntries()": [
                294,
                97
            ],
            "entryDetails(uint256)": [
                808,
                185
            ],
            "userStats(address)": [
                445,
                119
            ],
            "join()": [
                647,
                141
            ],
            "multiplierFactor()": [
                143,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump2722_0": [
                "theEntry.entryAddress.send(payout)",
                "theEntry.entryAddress.send(payout)"
            ],
            "block2722": [
                "theEntry.entryAddress.send(payout)"
            ],
            "block1701_0": [
                "msg.sender.send(msg.value - 50 finney)"
            ],
            "block1701_1": [
                "msg.sender.send(msg.value - 50 finney)"
            ],
            "block1701": [
                "msg.sender.send(msg.value - 50 finney)"
            ],
            "block1059_0": [
                "msg.sender.send(msg.value)"
            ],
            "block2722_0": [
                "theEntry.entryAddress.send(payout)"
            ],
            "jump2722_1": [
                "theEntry.entryAddress.send(payout)",
                "theEntry.entryAddress.send(payout)"
            ],
            "jump2722": [
                "theEntry.entryAddress.send(payout)",
                "theEntry.entryAddress.send(payout)"
            ],
            "block3124": [
                "owner.send(fees)"
            ],
            "block2722_1": [
                "theEntry.entryAddress.send(payout)"
            ],
            "block3124_0": [
                "owner.send(fees)"
            ],
            "block3124_1": [
                "owner.send(fees)"
            ],
            "block1059": [
                "msg.sender.send(msg.value)"
            ]
        }
    }
}