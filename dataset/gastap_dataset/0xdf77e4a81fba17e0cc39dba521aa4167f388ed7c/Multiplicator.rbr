block0(g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block87())

jump0(s(1), s(0), g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block13(g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize))

block13(g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 449443597
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block89(s(0), l(l0), address, adr, balance, calldatasize, callvalue, returndatasize))

jump13(s(2), s(1), s(0), g(Owner), l(l1), l(l0), address, adr, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block65(s(0),g(Owner), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump65(s(2), s(1), s(0), g(Owner), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block143(s(0),g(Owner), l(l0), address, balance, caller, returndatasize))

jump65(s(2), s(1), s(0), g(Owner), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block76(s(0),g(Owner), l(l1), l(l0), callvalue))

block65(s(0), g(Owner), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1020253707
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(Owner), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(Owner), l(l1), l(l0), callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3031013966
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(Owner), l(l1), l(l0), callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(Owner), l(l1), l(l0), callvalue)=>
	eq(s(2), s(1))
	call(block153(s(0),g(Owner), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(Owner), l(l1), l(l0), callvalue)=>
	neq(s(2), s(1))
	call(block87_0(s(0)))

block87()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block89(s(0), l(l0), address, adr, balance, calldatasize, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 141
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = adr
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 240
	nop(PUSH2)
	call(block240(s(2),s(1),s(0), l(l0), address, balance, callvalue, returndatasize))
	nop(JUMP)

block141(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block143(s(0), g(Owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 151
	nop(PUSH2)
	s(2) = 372
	nop(PUSH2)
	call(block372(s(1),s(0),g(Owner), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block151(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump153(s(2), s(1), s(0), g(Owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block165(s(1), s(0),g(Owner), l(l1), l(l0)))

jump153(s(2), s(1), s(0), g(Owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block161(s(1), s(0)))

block153(s(0), g(Owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump153(s(2),s(1),s(0),g(Owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block161(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block165(s(1), s(0), g(Owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 174
	nop(PUSH2)
	s(2) = 592
	nop(PUSH2)
	call(block592(s(1),s(0),g(Owner), l(l1), l(l0)))
	nop(JUMP)

block174(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block240(s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = callvalue
	nop(CALLVALUE)
	call(jump240(s(4),s(3),s(2),s(1),s(0), l(l0), address, balance, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump240(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	lt(s(4), s(3))
	call(block369(s(2), s(1), s(0)))

jump240(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	geq(s(4), s(3))
	call(block273(s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize))

block273(s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump273(s(4),s(3),s(2),s(1),s(0), l(l0), address, balance, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump273(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	eq(s(4), 0)
	call(block367(s(3), s(2), s(1), s(0)))

jump273(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, callvalue, returndatasize)=>
	neq(s(4), 0)
	call(block358(s(3), s(2), s(1), s(0), returndatasize))

block358(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block367(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block369(s(2),s(1),s(0)))

block369(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block141(s(0)))
	nop(JUMP)

jump372(s(3), s(2), s(1), s(0), g(Owner), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), s(2))
	call(block463(s(1), s(0),g(Owner), l(l0), address, balance, returndatasize))

jump372(s(3), s(2), s(1), s(0), g(Owner), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), s(2))
	call(block459(s(1), s(0)))

block372(s(1), s(0), g(Owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(Owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump372(s(3),s(2),s(1),s(0),g(Owner), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block459(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block463(s(1), s(0), g(Owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(Owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump463(s(3),s(2),s(1),s(0),g(Owner), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump463(s(3), s(2), s(1), s(0), g(Owner), l(l0), address, balance, returndatasize)=>
	eq(s(3), 0)
	call(block589(s(2), s(1), s(0)))

jump463(s(3), s(2), s(1), s(0), g(Owner), l(l0), address, balance, returndatasize)=>
	neq(s(3), 0)
	call(block580(s(2), s(1), s(0), returndatasize))

block580(s(2), s(1), s(0), returndatasize)=>
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	nop(REVERT)

block589(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block151(s(0)))
	nop(JUMP)

block592(s(1), s(0), g(Owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(Owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block174(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block87_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

