{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                638,
                207
            ],
            "approve(address,uint256)": [
                180,
                75
            ],
            "unpause()": [
                457,
                141
            ],
            "balanceOf(address)": [
                551,
                185
            ],
            "allowance(address,address)": [
                873,
                273
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "transferOwnership(address)": [
                992,
                295
            ],
            "transfer(address,uint256)": [
                772,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "jump1972": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block1972": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "PallyCoin": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PallyCoin()",
            "setCrowdsaleAddress(address)",
            "distributePresaleTokens(address,uint256)",
            "distributeICOTokens(address,uint256)",
            "refundTokens(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "PallyCoin()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "setCrowdsaleAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "distributePresaleTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "distributeICOTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "refundTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                1239,
                339
            ],
            "approve(address,uint256)": [
                511,
                119
            ],
            "balanceOf(address)": [
                1152,
                317
            ],
            "distributePresaleTokens(address,uint256)": [
                290,
                75
            ],
            "unpause()": [
                981,
                251
            ],
            "setCrowdsaleAddress(address)": [
                732,
                185
            ],
            "distributeICOTokens(address,uint256)": [
                612,
                141
            ],
            "refundTokens(address,uint256)": [
                1028,
                273
            ],
            "transferFrom(address,address,uint256)": [
                799,
                207
            ],
            "allowance(address,address)": [
                1748,
                471
            ],
            "transfer(address,uint256)": [
                1647,
                449
            ],
            "transferOwnership(address)": [
                1910,
                515
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,address,uint256,uint256)",
            "fallback()",
            "buyTokens()",
            "forwardFunds(uint256)",
            "calculateExcessBalance()",
            "setTierRates(uint256,uint256,uint256,uint256)",
            "setEndDate(uint256)",
            "checkCompletedCrowdsale()",
            "claimRefund()",
            "calculateExcessTokens(uint256,uint256,uint256,uint256)",
            "calculateTokensTier(uint256,uint256)",
            "validPurchase()",
            "goalReached()",
            "hasEnded()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "Crowdsale(address,address,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amountPaid": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateExcessBalance()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "setTierRates(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tier1": "uint256",
                    "tier2": "uint256",
                    "tier3": "uint256",
                    "tier4": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "setEndDate(uint256)": {
                "argument": {
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "checkCompletedCrowdsale()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "tokensThisTier": "uint256",
                    "tierSelected": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "calculateTokensTier(uint256,uint256)": {
                "argument": {
                    "weiPaid": "uint256",
                    "tierSelected": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "limitTier1": "uint256",
                    "limitTier2": "uint256",
                    "limitTier3": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256",
                    "numberOfTransactions": "uint256",
                    "limitGasPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": [
                1324,
                449
            ],
            "hasEnded()": [
                2060,
                779
            ],
            "claimRefund()": [
                1898,
                669
            ],
            "checkCompletedCrowdsale()": [
                1211,
                383
            ],
            "pause()": [
                1509,
                515
            ],
            "unpause()": [
                991,
                295
            ],
            "goalReached()": [
                1462,
                493
            ],
            "transferOwnership(address)": [
                2107,
                801
            ],
            "buyTokens()": [
                2007,
                735
            ],
            "setEndDate(uint256)": [
                946,
                273
            ],
            "setTierRates(uint256,uint256,uint256,uint256)": [
                1643,
                559
            ]
        },
        "block_CALL_mapping": {
            "block4716_3": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_2": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7254": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block4716_0": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_7": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_6": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_5": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])",
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block4716_8": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4347_2": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_1": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_0": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4716_4": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7254": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4347": [
                "vault.close()",
                "vault.close()"
            ],
            "jump7460_1": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_2": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4073": [
                "vault.enableRefunds()"
            ],
            "block5639": [
                "vault.refund(msg.sender)"
            ],
            "block4716_4": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5639": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump7173": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump4716_1": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_0": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347_0": [
                "vault.close()"
            ],
            "block4073_0": [
                "vault.enableRefunds()"
            ],
            "jump4716_5": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347": [
                "vault.close()"
            ],
            "jump4716_7": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_6": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073_1": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump4716_3": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "jump4073_0": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7460_0": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "block4716_1": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_1": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4716": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_0": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4347_1": [
                "vault.close()"
            ],
            "jump7758": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7173_1": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4347_2": [
                "vault.close()"
            ],
            "jump3048": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7460_1": [
                "wallet.transfer(amountPaid)"
            ],
            "block7173": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7460": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_8": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7254_0": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7173_0": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4073_2": [
                "vault.enableRefunds()"
            ],
            "block4073_1": [
                "vault.enableRefunds()"
            ],
            "block3048": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block4716": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7460": [
                "wallet.transfer(amountPaid)"
            ],
            "jump4073_2": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block7254_1": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7460_0": [
                "wallet.transfer(amountPaid)"
            ],
            "jump3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump7173_1": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7173_0": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7758": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ]
        }
    }
}