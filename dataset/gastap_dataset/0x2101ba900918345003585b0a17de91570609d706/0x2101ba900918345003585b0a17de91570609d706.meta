{
    "ERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "totalSupply()": [
                237,
                97
            ],
            "allowance(address,address)": [
                668,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                567,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                9249,
                26
            ],
            "totalSupply()": [
                924,
                141
            ],
            "allowance(address,address)": [
                2678,
                515
            ],
            "transferFrom(address,address,uint256)": [
                967,
                163
            ],
            "approve(address,uint256)": [
                780,
                97
            ],
            "totalSupplyAt(uint256)": [
                9249,
                26
            ],
            "enableTransfers(bool)": [
                2884,
                559
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1457,
                273
            ],
            "changeController(address)": [
                6212,
                889
            ],
            "balanceOf(address)": [
                1731,
                295
            ],
            "generateTokens(address,uint256)": [
                1905,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2406,
                471
            ],
            "destroyTokens(address,uint256)": [
                2577,
                493
            ],
            "transfer(address,uint256)": [
                2215,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump5134_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7731": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block7193": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5996": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5134_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7193_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8873_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3712": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7193": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5996": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5134_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8873": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump3712": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5134_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block553": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block3712_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5134_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8873_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump6212": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7731": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump553_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump3712_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5134": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6212": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block7193_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8873": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump553": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block553_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ]
        }
    },
    "ClitCoinToken": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "Controlled()",
            "changeController(address)",
            "ClitCoinToken()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {}
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "ClitCoinToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                9249,
                26
            ],
            "totalSupply()": [
                924,
                141
            ],
            "allowance(address,address)": [
                2678,
                515
            ],
            "transferFrom(address,address,uint256)": [
                967,
                163
            ],
            "approve(address,uint256)": [
                780,
                97
            ],
            "totalSupplyAt(uint256)": [
                9249,
                26
            ],
            "enableTransfers(bool)": [
                2884,
                559
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1457,
                273
            ],
            "changeController(address)": [
                6212,
                889
            ],
            "balanceOf(address)": [
                1731,
                295
            ],
            "generateTokens(address,uint256)": [
                1905,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2406,
                471
            ],
            "destroyTokens(address,uint256)": [
                2577,
                493
            ],
            "transfer(address,uint256)": [
                2215,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump5134_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7731": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block7193": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5996": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5134_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7193_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8873_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3712": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7193": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5996": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump5134_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8873": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump3712": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5134_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block553": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block3712_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5134_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5134": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5134_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8873_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump6212": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7731": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump553_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump3712_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5134": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6212": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block7193_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8873": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump553": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block553_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ClitCrowdFunder": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "Controlled()",
            "changeController(address)",
            "ClitCrowdFunder(address,uint256,ClitCoinToken)",
            "freezeAccount(address,bool)",
            "getCurrentExchangeRate(uint256)",
            "investment()",
            "checkIfFundingCompleteOrExpired()",
            "payOut()",
            "getRefund()",
            "removeContract()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "ClitCrowdFunder(address,uint256,ClitCoinToken)": {
                "argument": {
                    "_delayStartHours": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "freezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "getCurrentExchangeRate(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "investment()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "checkIfFundingCompleteOrExpired()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "payOut()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "getRefund()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "removeContract()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "totalRaised": "uint256",
                    "currentBalance": "uint256",
                    "issuedTokenBalance": "uint256",
                    "totalTokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "eolBlockNumber": "uint256",
                    "firstExchangeRatePeriod": "uint256",
                    "secondExchangeRatePeriod": "uint256",
                    "thirdExchangeRatePeriod": "uint256",
                    "fourthExchangeRatePeriod": "uint256",
                    "firstTokenExchangeRate": "uint256",
                    "secondTokenExchangeRate": "uint256",
                    "thirdTokenExchangeRate": "uint256",
                    "fourthTokenExchangeRate": "uint256",
                    "finalTokenExchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "payOut()": [
                1329,
                493
            ],
            "removeContract()": [
                1867,
                713
            ],
            "getRefund()": [
                1163,
                405
            ],
            "changeController(address)": [
                5849,
                1020
            ],
            "checkIfFundingCompleteOrExpired()": [
                967,
                317
            ],
            "investment()": [
                722,
                185
            ],
            "freezeAccount(address,bool)": [
                1701,
                669
            ],
            "getCurrentExchangeRate(uint256)": [
                590,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump5603_1": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "block5849_2": [
                "exchangeToken.changeController(controller)"
            ],
            "block4822_5": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4822_4": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4822_7": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4822_6": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4822_1": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4460_5": [
                "fundRecipient.transfer(amount)"
            ],
            "block4822_3": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4822_2": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump5849_1": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "block5849_0": [
                "exchangeToken.changeController(controller)"
            ],
            "block5603_3": [
                "exchangeToken.enableTransfers(true)"
            ],
            "jump5849_0": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump5849_3": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "block4460_3": [
                "fundRecipient.transfer(amount)"
            ],
            "block4460_2": [
                "fundRecipient.transfer(amount)"
            ],
            "block4460_1": [
                "fundRecipient.transfer(amount)"
            ],
            "block4460_0": [
                "fundRecipient.transfer(amount)"
            ],
            "block4460_7": [
                "fundRecipient.transfer(amount)"
            ],
            "block4460_6": [
                "fundRecipient.transfer(amount)"
            ],
            "jump4460": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block4460_4": [
                "fundRecipient.transfer(amount)"
            ],
            "block5603_2": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block4822": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_3": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_2": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_1": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_0": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_7": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_6": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_5": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "jump4822_4": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block5849": [
                "exchangeToken.changeController(controller)"
            ],
            "jump4822": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)",
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block5849_1": [
                "exchangeToken.changeController(controller)"
            ],
            "jump4460_5": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block4027": [
                "msg.sender.transfer(amountToRefund)"
            ],
            "jump2500_0": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump2500_1": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "block5603_1": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block5603_0": [
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4460_7": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump5603": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "block5603": [
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4027": [
                "msg.sender.transfer(amountToRefund)",
                "msg.sender.transfer(amountToRefund)"
            ],
            "jump4460_6": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump5849_2": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump5849": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "block4822_0": [
                "exchangeToken.generateTokens(fundRecipient, tokenCount)"
            ],
            "block4460": [
                "fundRecipient.transfer(amount)"
            ],
            "jump5603_0": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump5603_3": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump5603_2": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "block5849_3": [
                "exchangeToken.changeController(controller)"
            ],
            "block2500": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump2500": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump4460_4": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block2500_0": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "block2500_1": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump4460_1": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump4460_0": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump4460_3": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump4460_2": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ]
        }
    }
}