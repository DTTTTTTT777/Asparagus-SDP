{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ENJ": {
        "function_list": [
            "set_token(address)",
            "personal_withdraw(uint256)",
            "withdraw_token(address)",
            "withdraw_refund()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "set_token(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "personal_withdraw(uint256)": {
                "argument": {
                    "transfer_amount": "uint256"
                },
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "withdraw_token(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "withdraw_refund()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "set_token(address)": [
                1670,
                383
            ],
            "personal_withdraw(uint256)": [
                1248,
                207
            ],
            "withdraw_token(address)": [
                1383,
                273
            ],
            "withdraw_refund()": [
                1091,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump3145": [
                "myToken.balanceOf(address(this))",
                "myToken.balanceOf(address(this))"
            ],
            "block2056": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block541_0": [
                "sale.call.value(contract_eth_value)()"
            ],
            "jump541_0": [
                "sale.call.value(contract_eth_value)()",
                "sale.call.value(contract_eth_value)()"
            ],
            "block3145": [
                "myToken.balanceOf(address(this))"
            ],
            "block3660": [
                "myToken.transfer(developer, fee)"
            ],
            "jump3660": [
                "myToken.transfer(developer, fee)",
                "myToken.transfer(developer, fee)"
            ],
            "jump2056": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block541": [
                "sale.call.value(contract_eth_value)()"
            ],
            "jump2446": [
                "developer.transfer(transfer_amount)",
                "developer.transfer(transfer_amount)"
            ],
            "block3895": [
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "block2446": [
                "developer.transfer(transfer_amount)"
            ],
            "jump2782": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump3895": [
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)",
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump541": [
                "sale.call.value(contract_eth_value)()",
                "sale.call.value(contract_eth_value)()"
            ],
            "block2782": [
                "msg.sender.transfer(eth_to_withdraw)"
            ]
        }
    }
}