{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "roundIco": "uint256",
                    "endIco": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                245,
                97
            ],
            "balanceOf(address)": [
                522,
                163
            ],
            "totalSupply()": [
                346,
                119
            ],
            "allowance(address,address)": [
                710,
                207
            ],
            "transferFrom(address,address,uint256)": [
                389,
                141
            ],
            "transfer(address,uint256)": [
                609,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "RobotTradingToken": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "RobotTradingToken(address)",
            "burnTokens(address,uint256)",
            "emitTokens(address,uint256)",
            "getOwner(uint256)",
            "getOwnerCount()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "roundIco": "uint256",
                    "endIco": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "RobotTradingToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwnerCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getOwnerCount()": [
                1528,
                361
            ],
            "approve(address,uint256)": [
                477,
                119
            ],
            "getOwner(uint256)": [
                1206,
                295
            ],
            "emitTokens(address,uint256)": [
                1571,
                383
            ],
            "totalSupply()": [
                655,
                163
            ],
            "burnTokens(address,uint256)": [
                578,
                141
            ],
            "balanceOf(address)": [
                874,
                229
            ],
            "transferFrom(address,address,uint256)": [
                698,
                185
            ],
            "allowance(address,address)": [
                1409,
                339
            ],
            "transfer(address,uint256)": [
                1105,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "RobotTradingIco": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "RobotTradingIco(address)",
            "init(address,address,address,address)",
            "setState(RobotTradingIco.State)",
            "setNewIco(uint256,uint256,uint256,uint256,uint256)",
            "setManager(address)",
            "buyTokens(address)",
            "fallback()",
            "burnTokens(address,uint256)",
            "withdrawEther(uint256)",
            "withdrawAllEther()",
            "sendTokensToPartner()",
            "sendLimitTokensToPartner(uint256)",
            "sendTokensToCompany()",
            "sendLimitTokensToCompany(uint256)",
            "sendAllTokensToFounder(uint256)",
            "sendLimitTokensToFounder(uint256,uint256)",
            "incSupply(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "roundIco": "uint256",
                    "endIco": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "RobotTradingIco(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "init(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setState(RobotTradingIco.State)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setNewIco(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_round": "uint256",
                    "_price": "uint256",
                    "_startDate": "uint256",
                    "_endDate": "uint256",
                    "_newAmount": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "setManager(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "withdrawAllEther()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendTokensToPartner()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendLimitTokensToPartner(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendTokensToCompany()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendLimitTokensToCompany(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendAllTokensToFounder(uint256)": {
                "argument": {
                    "_round": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "sendLimitTokensToFounder(uint256,uint256)": {
                "argument": {
                    "_round": "uint256",
                    "_value": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "incSupply(uint256)": {
                "argument": {
                    "_percent": "uint256"
                },
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "BASE": "uint256",
                    "name": "string",
                    "supplyLimit": "uint256",
                    "roundICO": "uint256",
                    "roundData": "RobotTradingIco.RoundStruct[]",
                    "tokensToFunder": "uint256",
                    "tokensToPartner": "uint256",
                    "tokensToCompany": "uint256",
                    "etherRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setNewIco(uint256,uint256,uint256,uint256,uint256)": [
                1746,
                537
            ],
            "init(address,address,address,address)": [
                514,
                97
            ],
            "sendLimitTokensToPartner(uint256)": [
                2449,
                757
            ],
            "burnTokens(address,uint256)": [
                4284,
                946
            ],
            "incSupply(uint256)": [
                469,
                75
            ],
            "setManager(address)": [
                2295,
                713
            ],
            "sendTokensToCompany()": [
                1568,
                449
            ],
            "withdrawEther(uint256)": [
                1281,
                317
            ],
            "sendLimitTokensToFounder(uint256,uint256)": [
                1513,
                427
            ],
            "sendAllTokensToFounder(uint256)": [
                1701,
                515
            ],
            "withdrawAllEther()": [
                1258,
                295
            ],
            "sendLimitTokensToCompany(uint256)": [
                1373,
                361
            ],
            "sendTokensToPartner()": [
                1591,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump5431": [
                "robottradingToken.emitTokens(accCompany, companyValue)",
                "robottradingToken.emitTokens(accCompany, companyValue)"
            ],
            "block4284": [
                "robottradingToken.burnTokens(_from, _value)"
            ],
            "jump3114": [
                "robottradingToken.emitTokens(_buyer, tokensToEmit)",
                "robottradingToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block3114_0": [
                "robottradingToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block4531": [
                "accRecive.transfer(this.balance)"
            ],
            "block4803": [
                "accRecive.transfer(_value * 10000000000000000)"
            ],
            "jump7453": [
                "robottradingToken.emitTokens(accPartner, partnerTokens)",
                "robottradingToken.emitTokens(accPartner, partnerTokens)"
            ],
            "block5431": [
                "robottradingToken.emitTokens(accCompany, companyValue)"
            ],
            "block7453": [
                "robottradingToken.emitTokens(accPartner, partnerTokens)"
            ],
            "block3114": [
                "robottradingToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block6881": [
                "robottradingToken.emitTokens(accCompany, companyReward)"
            ],
            "jump4803": [
                "accRecive.transfer(_value * 10000000000000000)",
                "accRecive.transfer(_value * 10000000000000000)"
            ],
            "jump3114_0": [
                "robottradingToken.emitTokens(_buyer, tokensToEmit)",
                "robottradingToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump8193": [
                "robottradingToken.emitTokens(accFounder, founderValue)",
                "robottradingToken.emitTokens(accFounder, founderValue)"
            ],
            "block9779": [
                "robottradingToken.emitTokens(accPartner, partnerValue)"
            ],
            "jump6379": [
                "robottradingToken.emitTokens(accFounder, founderValue)",
                "robottradingToken.emitTokens(accFounder, founderValue)"
            ],
            "jump4531": [
                "accRecive.transfer(this.balance)",
                "accRecive.transfer(this.balance)"
            ],
            "jump6881": [
                "robottradingToken.emitTokens(accCompany, companyReward)",
                "robottradingToken.emitTokens(accCompany, companyReward)"
            ],
            "jump9779": [
                "robottradingToken.emitTokens(accPartner, partnerValue)",
                "robottradingToken.emitTokens(accPartner, partnerValue)"
            ],
            "jump4284": [
                "robottradingToken.burnTokens(_from, _value)",
                "robottradingToken.burnTokens(_from, _value)"
            ],
            "block8193": [
                "robottradingToken.emitTokens(accFounder, founderValue)"
            ],
            "block6379": [
                "robottradingToken.emitTokens(accFounder, founderValue)"
            ]
        }
    }
}