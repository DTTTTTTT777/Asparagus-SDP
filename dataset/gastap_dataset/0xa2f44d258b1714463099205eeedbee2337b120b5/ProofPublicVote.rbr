block0(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	lt(s(1), s(0))
	call(block582(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump0(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	geq(s(1), s(0))
	call(block13(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump13(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1518(s(0),g(votingDeadline), l(l3), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block65(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block13(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1561(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block76(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block65(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1670(s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block87(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block87(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1814(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block98(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block98(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1891(s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump98(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block109(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block109(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1914(s(0),g(numberOfVotes), l(l3), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block120(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump120(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1957(s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block131(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block120(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2000(s(0),g(yea), l(l3), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block142(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block142(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2043(s(0),g(totalSupply), l(l3), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block153(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump153(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2086(s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))

jump153(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block164(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block153(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2136(s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block175(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block164(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2179(s(0),g(collectedUSD), l(l3), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block186(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block175(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump186(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2222(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump186(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block197(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block186(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2331(s(0),g(weiReqFund), l(l3), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block208(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block197(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2374(s(0),g(decimals), l(l3), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block219(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block219(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2423(s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump219(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block230(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump230(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2468(s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess))

jump230(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block241(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block230(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1039966893
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1162544648
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2569(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))

jump241(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block252(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block252(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2614(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))

jump252(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block263(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block263(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2659(s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump263(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block274(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump274(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2726(s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))

jump274(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block285(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block274(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2870(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump285(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block296(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block296(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump296(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2989(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block307(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump307(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3083(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump307(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block318(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block307(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3170(s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))

jump318(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block329(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block318(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3237(s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))

jump329(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block340(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump340(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3280(s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block351(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block340(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3323(s(0),g(migrationAgent), l(l3), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block362(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block351(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3410(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump362(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block373(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block362(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2215540989
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3633(s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block384(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block384(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3720(s(0),g(owner), l(l3), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block395(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block395(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3807(s(0),g(totalMigrated), l(l3), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block406(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump406(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3850(s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block417(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block406(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3994(s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block428(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block428(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4037(s(0),g(etherPrice), l(l3), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block439(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

jump439(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4080(s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp))

jump439(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block450(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block439(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2749180734
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4282(s(0),g(owner), calldatasize, caller, callvalue, owner))

jump450(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block461(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))

block461(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4349(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump461(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block472(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo, votesToProcess))

jump472(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo, votesToProcess)=>
	eq(s(2), s(1))
	call(block4426(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump472(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo, votesToProcess)=>
	neq(s(2), s(1))
	call(block483(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo))

block472(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block483(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3014322224
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo)=>
	eq(s(2), s(1))
	call(block4495(s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo))

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, timestamp, urlInfo)=>
	neq(s(2), s(1))
	call(block494(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, returndatasize, spender, timestamp))

block494(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3078441078
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4610(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block505(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inSupport, owner, projectOwner, returndatasize, spender, timestamp))

block505(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3171163213
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inSupport, owner, projectOwner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4687(s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp))

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, inSupport, owner, projectOwner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block516(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block516(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4786(s(0),g(state), l(l3), l(l0), callvalue))

jump516(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block527(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block527(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4843(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump527(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block538(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4945(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump538(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block549(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block538(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5064(s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))

jump549(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block560(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block549(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5107(s(0),g(nay), l(l3), l(l0), callvalue))

jump560(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block571(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

jump571(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5150(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump571(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block582_0(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block571(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump582(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block603(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block602(s(5), s(4), s(3), s(2), s(1), s(0)))

block602(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block603(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump603(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump603(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block630(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump603(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block629(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block629(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block630(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 679
	nop(PUSH2)
	call(jump630(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

jump630(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 1 )
	call(block679(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump630(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 1 )
	call(block637(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block637(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump637(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block650(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump637(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block649(s(5), s(4), s(3), s(2), s(1), s(0)))

block649(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block650(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump650(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump650(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block677(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump650(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block676(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block676(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block677(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block679(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block679(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump679(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump679(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block690(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump679(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block686(s(4), s(3), s(2), s(1), s(0)))

block686(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block690(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump690(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump690(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block707(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump690(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block706(s(5), s(4), s(3), s(2), s(1), s(0)))

block706(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block707(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump707(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump707(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block734(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump707(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block733(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block733(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block749(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block741(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block741(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 125
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 851
	nop(PUSH2)
	call(block851(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block749(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump749(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump749(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block762(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump749(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block761(s(5), s(4), s(3), s(2), s(1), s(0)))

block761(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block789(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block762(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump762(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump789(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block850(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block796(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block819(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block811(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block796(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(5) = 86400
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump796(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block811(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 115
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 849
	nop(PUSH2)
	call(block849(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block819(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 604800
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump819(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump819(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block843(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump819(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block835(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block835(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 110
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 848
	nop(PUSH2)
	call(block848(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block843(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 100
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	call(block848(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block848(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block849(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block849(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block850(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block850(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block851(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block851(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	nop(DUP6)
	call(jump851(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block1511(s(4), s(3), s(2), s(1), s(0)))

jump851(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block861(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block861(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump861(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump861(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block886(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump861(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block885(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block885(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block886(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump886(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump886(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block1025(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump886(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block904(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump904(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block935(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump904(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block934(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block904(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 7
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(5) = g(etherPrice)
	nop(SLOAD)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump904(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block934(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump935(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(6), 0)
	call(block1010(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump935(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(6), 0)
	call(block1001(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block935(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(1)
	nop(DUP6)
	s(8) = callvalue
	nop(CALLVALUE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump935(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1001(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block1010(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1042
	nop(PUSH2)
	call(block1042(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block1025(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(collectedUSD)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1042(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1042(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1189(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1042(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1185(s(4), s(3), s(2), s(1), s(0)))

block1042(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(0)
	nop(DUP6)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump1042(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1185(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1189(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	call(jump1189(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1189(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1204(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1189(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1200(s(4), s(3), s(2), s(1), s(0)))

block1200(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1204(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump1204(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1204(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(6), s(5))
	call(block1381(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1204(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(6), s(5))
	call(block1283(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1283(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(5) = caller
	nop(CALLER)
	s(6) = 12
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1381(s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1381(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1511(s(4),s(3),s(2),s(1),s(0)))

block1511(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

jump1518(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1530(s(1), s(0),g(votingDeadline), l(l3), l(l0)))

jump1518(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1526(s(1), s(0)))

block1518(s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1518(s(2),s(1),s(0),g(votingDeadline), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1526(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1530(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1539
	nop(PUSH2)
	s(2) = 5259
	nop(PUSH2)
	call(block5259(s(1),s(0),g(votingDeadline), l(l3), l(l0)))
	nop(JUMP)

block1539(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1561(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1573(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump1561(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1569(s(1), s(0)))

block1561(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1561(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1569(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1573(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1604
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5265
	nop(PUSH2)
	call(block5265(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1604(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1670(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1682(s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

jump1670(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1678(s(1), s(0)))

block1670(s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1670(s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1678(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1682(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1691
	nop(PUSH2)
	s(2) = 5316
	nop(PUSH2)
	call(block5316(s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1691(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1728(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block1728(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1728(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1728(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block1755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1728(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block1737(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block1737(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1728
	nop(PUSH2)
	call(block1728(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block1755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1755(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1755(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1800(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1755(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1775(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1775(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1800(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1800(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1814(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1826(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value))

jump1814(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1822(s(1), s(0)))

block1814(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1814(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1822(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1826(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1889
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5474
	nop(PUSH2)
	call(block5474(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block1889(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1891(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block1903(s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump1891(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block1899(s(1), s(0)))

block1891(s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1891(s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1899(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1903(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1912
	nop(PUSH2)
	s(2) = 5760
	nop(PUSH2)
	call(block5760(s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block1912(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1914(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1926(s(1), s(0),g(numberOfVotes), l(l3), l(l0)))

jump1914(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1922(s(1), s(0)))

block1914(s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1914(s(2),s(1),s(0),g(numberOfVotes), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1922(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1926(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1935
	nop(PUSH2)
	s(2) = 6096
	nop(PUSH2)
	call(block6096(s(1),s(0),g(numberOfVotes), l(l3), l(l0)))
	nop(JUMP)

block1935(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1957(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1969(s(1), s(0),g(minimalSuccessUSD), l(l3), l(l0)))

jump1957(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1965(s(1), s(0)))

block1957(s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1957(s(2),s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1965(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1969(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1978
	nop(PUSH2)
	s(2) = 6102
	nop(PUSH2)
	call(block6102(s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0)))
	nop(JUMP)

block1978(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2000(s(0), g(yea), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2000(s(2),s(1),s(0),g(yea), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2000(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2012(s(1), s(0),g(yea), l(l3), l(l0)))

jump2000(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2008(s(1), s(0)))

block2008(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2012(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2021
	nop(PUSH2)
	s(2) = 6108
	nop(PUSH2)
	call(block6108(s(1),s(0),g(yea), l(l3), l(l0)))
	nop(JUMP)

block2021(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2043(s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2043(s(2),s(1),s(0),g(totalSupply), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2043(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2055(s(1), s(0),g(totalSupply), l(l3), l(l0)))

jump2043(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2051(s(1), s(0)))

block2051(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2055(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2064
	nop(PUSH2)
	s(2) = 6114
	nop(PUSH2)
	call(block6114(s(1),s(0),g(totalSupply), l(l3), l(l0)))
	nop(JUMP)

block2064(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2086(s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2086(s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2086(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2098(s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump2086(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2094(s(1), s(0)))

block2094(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2098(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2107
	nop(PUSH2)
	s(2) = 6120
	nop(PUSH2)
	call(block6120(s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMP)

block2107(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2136(s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2136(s(2),s(1),s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2136(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2148(s(1), s(0),g(numberOfInvestors), l(l3), l(l0)))

jump2136(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2144(s(1), s(0)))

block2144(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2148(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2157
	nop(PUSH2)
	s(2) = 6259
	nop(PUSH2)
	call(block6259(s(1),s(0),g(numberOfInvestors), l(l3), l(l0)))
	nop(JUMP)

block2157(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2179(s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2179(s(2),s(1),s(0),g(collectedUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2179(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2191(s(1), s(0),g(collectedUSD), l(l3), l(l0)))

jump2179(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2187(s(1), s(0)))

block2187(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2191(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2200
	nop(PUSH2)
	s(2) = 6265
	nop(PUSH2)
	call(block6265(s(1),s(0),g(collectedUSD), l(l3), l(l0)))
	nop(JUMP)

block2200(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2222(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2222(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2222(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block2234(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value))

jump2222(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block2230(s(1), s(0)))

block2230(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2234(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2329
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6271
	nop(PUSH2)
	call(block6271(s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2329(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2331(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2343(s(1), s(0),g(weiReqFund), l(l3), l(l0)))

jump2331(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2339(s(1), s(0)))

block2331(s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2331(s(2),s(1),s(0),g(weiReqFund), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2339(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2343(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2352
	nop(PUSH2)
	s(2) = 7081
	nop(PUSH2)
	call(block7081(s(1),s(0),g(weiReqFund), l(l3), l(l0)))
	nop(JUMP)

block2352(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2374(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2386(s(1), s(0),g(decimals), l(l3), l(l0)))

jump2374(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2382(s(1), s(0)))

block2374(s(0), g(decimals), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2374(s(2),s(1),s(0),g(decimals), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2382(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2386(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2395
	nop(PUSH2)
	s(2) = 7087
	nop(PUSH2)
	call(block7087(s(1),s(0),g(decimals), l(l3), l(l0)))
	nop(JUMP)

block2395(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2423(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block2435(s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump2423(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block2431(s(1), s(0)))

block2423(s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2423(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2431(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2435(s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2466
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7106
	nop(PUSH2)
	call(block7106(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2466(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2468(s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block2480(s(1), s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, projectOwner, timestamp, votesToProcess))

jump2468(s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block2476(s(1), s(0)))

block2468(s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2468(s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2476(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2480(s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, projectOwner, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2543
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = votesToProcess
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 7449
	nop(PUSH2)
	call(block7449(s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block2543(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2569(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2569(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2569(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	eq(s(2), 0)
	call(block2581(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value))

jump2569(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	neq(s(2), 0)
	call(block2577(s(1), s(0)))

block2577(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2581(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2612
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8938
	nop(PUSH2)
	call(block8938(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2612(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2614(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2614(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2614(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2626(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp))

jump2614(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2622(s(1), s(0)))

block2622(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2626(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2657
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9623
	nop(PUSH2)
	call(block9623(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block2657(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2659(s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2659(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2659(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2671(s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2659(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2667(s(1), s(0)))

block2667(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2671(s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2704
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11148
	nop(PUSH2)
	call(block11148(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2704(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2726(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2738(s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

jump2726(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2734(s(1), s(0)))

block2726(s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2726(s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2734(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2738(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2747
	nop(PUSH2)
	s(2) = 11789
	nop(PUSH2)
	call(block11789(s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2747(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2784(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump2784(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block2811(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2784(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block2793(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block2784(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2784(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2793(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2784
	nop(PUSH2)
	call(block2784(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump2811(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2856(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2811(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2831(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2811(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2811(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2831(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2856(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2856(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2870(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2870(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2870(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2882(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2870(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2878(s(1), s(0)))

block2878(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2882(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2967
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 11947
	nop(PUSH2)
	call(block11947(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2967(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2989(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2989(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2989(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3001(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2989(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2997(s(1), s(0)))

block2997(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3001(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3054
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11984
	nop(PUSH2)
	call(block11984(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3054(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3083(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3083(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3083(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3095(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3083(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3091(s(1), s(0)))

block3091(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3095(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3148
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12020
	nop(PUSH2)
	call(block12020(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3148(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3170(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3182(s(1), s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller))

jump3170(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3178(s(1), s(0)))

block3170(s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3170(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3178(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3182(s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3235
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12044
	nop(PUSH2)
	call(block12044(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(JUMP)

block3235(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3237(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block3249(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump3237(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block3245(s(1), s(0)))

block3237(s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3237(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3245(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3249(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3258
	nop(PUSH2)
	s(2) = 12310
	nop(PUSH2)
	call(block12310(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMP)

block3258(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3280(s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3280(s(2),s(1),s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3280(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3292(s(1), s(0),g(totalLimitUSD), l(l3), l(l0)))

jump3280(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3288(s(1), s(0)))

block3288(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3292(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3301
	nop(PUSH2)
	s(2) = 12442
	nop(PUSH2)
	call(block12442(s(1),s(0),g(totalLimitUSD), l(l3), l(l0)))
	nop(JUMP)

block3301(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3323(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3335(s(1), s(0),g(migrationAgent), l(l3), l(l0)))

jump3323(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3331(s(1), s(0)))

block3323(s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3323(s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3331(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3335(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3344
	nop(PUSH2)
	s(2) = 12448
	nop(PUSH2)
	call(block12448(s(1),s(0),g(migrationAgent), l(l3), l(l0)))
	nop(JUMP)

block3344(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3410(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3422(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3410(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3418(s(1), s(0)))

block3410(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3410(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3418(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3422(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3475
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12486
	nop(PUSH2)
	call(block12486(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3475(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(4)
	nop(DUP7)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	nop(DUP3)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(13) = l(l3)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l3)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 0
	nop(PUSH1)
	call(block3542(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block3542(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump3542(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3542(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(18), s(17))
	call(block3569(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3542(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(18), s(17))
	call(block3551(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block3551(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(17) = l(l4)
	nop(MLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)+s(18)
	nop(ADD)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 3542
	nop(PUSH2)
	call(block3542(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block3569(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(11)
	nop(DUP1)
	call(jump3569(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3569(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(12), 0)
	call(block3614(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3569(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(12), 0)
	call(block3589(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3589(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block3614(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3614(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(2)
	s(2) = s(10)
	s(10) = s(11)
	nop(SWAP8)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3633(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3645(s(1), s(0),g(crowdsaleOwner), l(l3), l(l0)))

jump3633(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3641(s(1), s(0)))

block3633(s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3633(s(2),s(1),s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3641(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3645(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3654
	nop(PUSH2)
	s(2) = 12698
	nop(PUSH2)
	call(block12698(s(1),s(0),g(crowdsaleOwner), l(l3), l(l0)))
	nop(JUMP)

block3654(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3720(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3732(s(1), s(0),g(owner), l(l3), l(l0)))

jump3720(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3728(s(1), s(0)))

block3720(s(0), g(owner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3720(s(2),s(1),s(0),g(owner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3728(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3732(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3741
	nop(PUSH2)
	s(2) = 12736
	nop(PUSH2)
	call(block12736(s(1),s(0),g(owner), l(l3), l(l0)))
	nop(JUMP)

block3741(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3807(s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3807(s(2),s(1),s(0),g(totalMigrated), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3807(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3819(s(1), s(0),g(totalMigrated), l(l3), l(l0)))

jump3807(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3815(s(1), s(0)))

block3815(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3819(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3828
	nop(PUSH2)
	s(2) = 12773
	nop(PUSH2)
	call(block12773(s(1),s(0),g(totalMigrated), l(l3), l(l0)))
	nop(JUMP)

block3828(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3850(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3862(s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

jump3850(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3858(s(1), s(0)))

block3850(s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3850(s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3858(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3862(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3871
	nop(PUSH2)
	s(2) = 12779
	nop(PUSH2)
	call(block12779(s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3871(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3908(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block3908(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3908(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3908(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block3935(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3908(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block3917(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block3917(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3908
	nop(PUSH2)
	call(block3908(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump3935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3980(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3955(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3935(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3935(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3955(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3980(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3980(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3994(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4006(s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0)))

jump3994(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4002(s(1), s(0)))

block3994(s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3994(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4002(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4006(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4015
	nop(PUSH2)
	s(2) = 12937
	nop(PUSH2)
	call(block12937(s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0)))
	nop(JUMP)

block4015(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4037(s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4037(s(2),s(1),s(0),g(etherPrice), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4037(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4049(s(1), s(0),g(etherPrice), l(l3), l(l0)))

jump4037(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4045(s(1), s(0)))

block4045(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4049(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4058
	nop(PUSH2)
	s(2) = 12943
	nop(PUSH2)
	call(block12943(s(1),s(0),g(etherPrice), l(l3), l(l0)))
	nop(JUMP)

block4058(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4080(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	eq(s(2), 0)
	call(block4092(s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, projectOwner, timestamp))

jump4080(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	neq(s(2), 0)
	call(block4088(s(1), s(0)))

block4080(s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4080(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4088(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4092(s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, projectOwner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4145
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12949
	nop(PUSH2)
	call(block12949(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block4145(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	nop(DUP3)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 0
	nop(PUSH1)
	call(block4194(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block4194(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	call(jump4194(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4194(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(14), s(13))
	call(block4221(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4194(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(14), s(13))
	call(block4203(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block4203(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l4)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)+s(14)
	nop(ADD)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = 4194
	nop(PUSH2)
	call(block4194(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump4221(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(8), 0)
	call(block4266(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4221(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(8), 0)
	call(block4241(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block4221(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(7)
	nop(DUP1)
	call(jump4221(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4241(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(8)
	nop(DUP1)
	ll = s(9)
	s(9) = fresh(0)
	nop(MLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block4266(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block4266(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4282(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block4294(s(1), s(0),g(owner), calldatasize, caller, owner))

jump4282(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block4290(s(1), s(0)))

block4282(s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4282(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4290(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4294(s(1), s(0), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4347
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13507
	nop(PUSH2)
	call(block13507(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block4347(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4349(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4349(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4349(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4361(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value))

jump4349(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4357(s(1), s(0)))

block4357(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4361(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4424
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13703
	nop(PUSH2)
	call(block13703(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block4424(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4426(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4426(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4426(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block4438(s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump4426(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block4434(s(1), s(0)))

block4434(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4438(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4469
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14235
	nop(PUSH2)
	call(block14235(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block4469(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4495(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	eq(s(2), 0)
	call(block4507(s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, proofReqFund, timestamp, urlInfo))

jump4495(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	neq(s(2), 0)
	call(block4503(s(1), s(0)))

block4495(s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4495(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4503(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4507(s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, proofReqFund, timestamp, urlInfo)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4608
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = proofReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = urlInfo
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	s(7) = urlInfo
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 31
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15293
	nop(PUSH2)
	call(block15293(s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block4608(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4610(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4610(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4610(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	eq(s(2), 0)
	call(block4622(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp))

jump4610(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	neq(s(2), 0)
	call(block4618(s(1), s(0)))

block4618(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4622(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4685
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = etherPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16149
	nop(PUSH2)
	call(block16149(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(JUMP)

block4685(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4687(s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4687(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4687(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	eq(s(2), 0)
	call(block4699(s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, projectOwner, timestamp))

jump4687(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	neq(s(2), 0)
	call(block4695(s(1), s(0)))

block4695(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4699(s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, projectOwner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4764
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = inSupport
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16707
	nop(PUSH2)
	call(block16707(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block4764(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4786(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4798(s(1), s(0),g(state), l(l3), l(l0)))

jump4786(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4794(s(1), s(0)))

block4786(s(0), g(state), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4786(s(2),s(1),s(0),g(state), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4794(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4798(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4807
	nop(PUSH2)
	s(2) = 17469
	nop(PUSH2)
	call(block17469(s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block4807(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4807(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4807(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block4823(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump4807(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block4822(s(5), s(4), s(3), s(2), s(1), s(0)))

block4822(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4823(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4843(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4843(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4843(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4855(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump4843(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4851(s(1), s(0)))

block4851(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4855(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4908
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 17488
	nop(PUSH2)
	call(block17488(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4908(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4945(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4957(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender))

jump4945(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4953(s(1), s(0)))

block4945(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4945(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4953(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4957(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5042
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 17550
	nop(PUSH2)
	call(block17550(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5042(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block5064(s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5064(s(2),s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5064(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5076(s(1), s(0),g(crowdsaleStartTime), l(l3), l(l0)))

jump5064(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5072(s(1), s(0)))

block5072(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5076(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5085
	nop(PUSH2)
	s(2) = 17737
	nop(PUSH2)
	call(block17737(s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0)))
	nop(JUMP)

block5085(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5107(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5119(s(1), s(0),g(nay), l(l3), l(l0)))

jump5107(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5115(s(1), s(0)))

block5107(s(0), g(nay), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5107(s(2),s(1),s(0),g(nay), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5115(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5119(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5128
	nop(PUSH2)
	s(2) = 17743
	nop(PUSH2)
	call(block17743(s(1),s(0),g(nay), l(l3), l(l0)))
	nop(JUMP)

block5128(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5150(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block5162(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump5150(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block5158(s(1), s(0)))

block5150(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5150(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5158(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5162(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5193
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 17749
	nop(PUSH2)
	call(block17749(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5193(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block5259(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1539(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5265(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1604(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump5316(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5466(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump5316(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

block5316(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(name)
	s(7) = g(name)
	call(jump5316(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5396(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump5396(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5423(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump5396(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l0)))

block5404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5466
	nop(PUSH2)
	call(block5466(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block5423(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5437(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump5437(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block5437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump5437(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block5457(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block5437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5437(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block5457(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5466(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block5466(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1691(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block5474(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5474(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5474(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5487(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump5474(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5486(s(4), s(3), s(2), s(1), s(0)))

block5486(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5487(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5487(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5514(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5487(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5513(s(5), s(4), s(3), s(2), s(1), s(0)))

block5513(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5514(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5526(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5514(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5522(s(3), s(2), s(1), s(0)))

block5514(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5514(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5522(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5526(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1889(s(0)))
	nop(JUMP)

block5760(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5760(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5760(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block5774(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump5760(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block5773(s(3), s(2), s(1), s(0)))

block5773(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5774(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block5801(s(4), s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump5774(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block5800(s(4), s(3), s(2), s(1), s(0)))

block5774(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5774(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5800(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5801(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 1 )
	call(block5850(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5801(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 1 )
	call(block5808(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

block5801(s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5850
	nop(PUSH2)
	call(jump5801(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMPI)

block5808(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5808(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5808(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block5821(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump5808(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block5820(s(3), s(2), s(1), s(0)))

block5820(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5821(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5821(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5821(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block5848(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5821(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block5847(s(4), s(3), s(2), s(1), s(0)))

block5847(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5848(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block5850(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5850(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block5861(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5850(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block5857(s(2), s(1), s(0)))

block5850(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump5850(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5857(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5861(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump5861(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5861(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(4), s(3))
	call(block6093(s(2), s(1), s(0)))

jump5861(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(4), s(3))
	call(block5940(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

block5940(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump5940(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5940(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block6091(s(3), s(2), s(1), s(0)))

jump5940(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block6082(s(3), s(2), s(1), s(0), returndatasize))

block6082(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block6091(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block6093(s(2),s(1),s(0)))

block6093(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1912(s(0)))
	nop(JUMP)

block6096(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1935(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6102(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1978(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6108(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2021(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6114(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2064(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6120(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6120(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6120(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6136(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6120(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6135(s(4), s(3), s(2), s(1), s(0)))

block6135(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6136(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6136(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6136(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block6163(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6136(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block6162(s(5), s(4), s(3), s(2), s(1), s(0)))

block6162(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6163(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block6211(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6163(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block6170(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

block6163(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 6211
	nop(PUSH2)
	call(jump6163(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMPI)

block6170(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6170(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6170(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6182(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6170(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6181(s(4), s(3), s(2), s(1), s(0)))

block6181(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6182(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block6209(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6182(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block6208(s(5), s(4), s(3), s(2), s(1), s(0)))

block6182(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6182(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6208(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6209(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block6211(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6211(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block6222(s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6211(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block6218(s(3), s(2), s(1), s(0)))

block6211(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump6211(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6218(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6222(s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump6222(s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6222(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block6247(s(3), s(2), s(1), s(0),g(votingDeadline), l(l4), l(l3), l(l0), timestamp))

jump6222(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block6239(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block6239(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 6255
	nop(PUSH2)
	call(block6255(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block6247(s(3), s(2), s(1), s(0), g(votingDeadline), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block6255(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block6255(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	call(block2107(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block6259(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2157(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6265(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2200(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6271(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6271(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6271(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block6284(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump6271(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block6283(s(5), s(4), s(3), s(2), s(1), s(0)))

block6283(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6284(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block6311(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6284(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block6310(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6284(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6284(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6310(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6311(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block6323(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6311(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block6319(s(4), s(3), s(2), s(1), s(0)))

block6311(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6311(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6319(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump6323(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block6401(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6323(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block6397(s(4), s(3), s(2), s(1), s(0)))

block6323(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump6323(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6397(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6401(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump6401(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6401(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block6544(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6401(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block6540(s(4), s(3), s(2), s(1), s(0)))

block6540(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump6544(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block6683(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6544(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block6679(s(4), s(3), s(2), s(1), s(0)))

block6544(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump6544(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6679(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6683(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2329(s(0)))
	nop(JUMP)

block7081(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2352(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7087(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2395(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump7106(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7119(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7106(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7118(s(3), s(2), s(1), s(0)))

block7106(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7106(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7118(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7119(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7146(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7119(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7145(s(4), s(3), s(2), s(1), s(0)))

block7119(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7119(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7145(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7146(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7194
	nop(PUSH2)
	call(jump7146(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump7146(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block7194(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7146(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block7153(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7153(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7165(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7153(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7164(s(3), s(2), s(1), s(0)))

block7153(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7153(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7164(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7165(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7165(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7165(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7192(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7165(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7191(s(4), s(3), s(2), s(1), s(0)))

block7191(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7192(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block7194(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

block7194(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7194(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7194(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block7205(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7194(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block7201(s(2), s(1), s(0)))

block7201(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7205(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block7296(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump7205(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block7292(s(2), s(1), s(0)))

block7205(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7205(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7292(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump7296(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block7314(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump7296(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block7309(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7296(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump7296(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7309(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block7314(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7314(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	call(jump7314(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7314(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block7349(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump7314(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block7321(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7321(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block7349(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

block7349(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump7349(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7349(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block7360(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump7349(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block7356(s(2), s(1), s(0)))

block7356(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7360(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 21
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(weiReqFund) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 604800
	nop(PUSH3)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 22
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(votingDeadline) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 24
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(yea) = s(3)
	nop(SSTORE)
	s(3) = 25
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(nay) = s(3)
	nop(SSTORE)
	s(3) = 93720157658062424846682753225579638167677070772725695825547635469129033712185
	nop(PUSH32)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block2466(s(0)))
	nop(JUMP)

block7449(s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 7462
	nop(PUSH2)
	s(8) = 17800
	nop(PUSH2)
	call(block17800(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

jump7462(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block7478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7462(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block7477(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7462(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 4
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump7462(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7477(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 8
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump7478(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7478(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block7505(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7478(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block7504(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7504(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7505(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 1 )
	call(block7553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7505(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 1 )
	call(block7512(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

block7505(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 7553
	nop(PUSH2)
	call(jump7505(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

jump7512(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block7524(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7512(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block7523(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7512(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(10)
	nop(DUP2)
	call(jump7512(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7523(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block7551(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block7550(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7524(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 8
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump7524(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7550(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7551(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	call(block7553(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block7564(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block7560(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump7553(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7560(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7564(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 28
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump7564(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7564(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block7648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7564(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block7644(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7644(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump7648(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block7735(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7648(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block7663(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block7648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump7648(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7663(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block7735(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7735(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block7746(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7735(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block7742(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7735(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump7735(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7742(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7746(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block7747(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block7747(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(11) = s(10)
	nop(DUP1)
	call(jump7747(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7747(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block7767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7747(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block7758(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block7758(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	call(block7767(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8275(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump7767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block7773(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block7767(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump7767(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7773(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = s(5)
	nop(DUP5)
	s(11) = 7
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 6
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 64
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 64
	nop(PUSH1)
	l(l0) = s(12)
	nop(MSTORE)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(4)
	nop(SLOAD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l5)
	nop(MLOAD)
	call(jump7773(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7773(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8076(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump7773(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8054(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8054(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 8095
	nop(PUSH2)
	call(block8095(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block8076(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 5
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block8095(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8095(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 7
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 6
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 255
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 1
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 255
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(3)
	s(3) = s(10)
	s(10) = s(11)
	nop(SWAP7)
	nop(POP)
	s(10) = 7747
	nop(PUSH2)
	call(block7747(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

jump8275(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block8297(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8275(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block8289(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block8275(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump8275(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8289(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(4)
	s(4) = s(10)
	s(10) = s(11)
	nop(SWAP6)
	nop(POP)
	s(10) = 8927
	nop(PUSH2)
	call(block8927(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block8297(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 5
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(11) = s(4)
	s(4) = s(10)
	s(10) = s(11)
	nop(SWAP6)
	nop(POP)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 28
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = 8405
	nop(PUSH2)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 17830
	nop(PUSH2)
	call(block17830(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

jump8405(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8844(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump8405(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8446(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

block8405(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 4
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	call(jump8405(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8446(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	geq(s(11), s(10))
	call(block8588(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8446(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	lt(s(11), s(10))
	call(block8584(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8446(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(2)
	nop(DUP12)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump8446(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8584(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block8588(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l5) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	call(block8844(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block8844(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 43914847731435872452144301988971020425315410636401833309475128477242234799342
	nop(PUSH32)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(16) = s(14)
	nop(DUP2)
	l(l5) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG2)
	call(block8927(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block8927(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2543(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block8938(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump8938(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8938(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block8950(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump8938(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block8949(s(3), s(2), s(1), s(0)))

block8949(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8950(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block8977(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump8950(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block8976(s(4), s(3), s(2), s(1), s(0)))

block8950(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8950(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8976(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8977(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block8989(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump8977(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block8985(s(2), s(1), s(0)))

block8977(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump8977(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8985(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block8989(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump8989(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8989(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block9061(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump8989(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block9057(s(2), s(1), s(0)))

block9057(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump9061(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block9077(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9061(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block9073(s(2), s(1), s(0)))

block9061(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump9061(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9073(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9077(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	call(jump9077(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9077(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(4), s(3))
	call(block9155(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9077(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(4), s(3))
	call(block9151(s(2), s(1), s(0)))

block9151(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump9155(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block9461(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))

jump9155(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block9457(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9155(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 20
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump9155(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9457(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

jump9461(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block9481(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller))

jump9461(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block9472(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block9461(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump9461(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9472(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block9481(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block2612(s(0)))
	nop(JUMP)

block9623(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 9633
	nop(PUSH2)
	s(5) = 17902
	nop(PUSH2)
	call(block17902(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block9633(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9633(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9633(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block9646(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9633(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block9645(s(5), s(4), s(3), s(2), s(1), s(0)))

block9645(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9646(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump9646(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9646(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block9673(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9646(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block9672(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9672(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9673(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 9722
	nop(PUSH2)
	call(jump9673(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump9673(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block9722(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9673(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block9680(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block9693(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block9692(s(5), s(4), s(3), s(2), s(1), s(0)))

block9680(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9680(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9692(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9693(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block9720(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9693(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block9719(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9693(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump9693(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9719(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9720(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block9722(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9722(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(5), 0)
	call(block9733(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump9722(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(5), 0)
	call(block9729(s(4), s(3), s(2), s(1), s(0)))

block9722(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump9722(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9729(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump9733(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block9753(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump9733(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block9745(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block9733(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(5) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 9753
	nop(PUSH2)
	call(jump9733(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

block9745(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block9753(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block9753(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump9753(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9753(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block9764(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump9753(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block9760(s(4), s(3), s(2), s(1), s(0)))

block9760(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block9764(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	call(jump9764(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9764(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	geq(s(6), s(5))
	call(block10279(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump9764(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	lt(s(6), s(5))
	call(block9777(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block9777(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump9777(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9777(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block9795(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

jump9777(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block9788(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block9788(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block9795(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

jump9795(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block10134(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))

jump9795(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block9801(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block9795(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump9795(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9801(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfInvestors) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(3)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(4)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 9777
	nop(PUSH2)
	call(block9777(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump10134(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	leq(s(6), s(5))
	call(block10150(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10134(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	gt(s(6), s(5))
	call(block10146(s(4), s(3), s(2), s(1), s(0)))

block10134(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump10134(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10146(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 11143
	nop(PUSH2)
	call(block11143(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block10150(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10150(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(7), s(6))
	call(block10163(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(7), s(6))
	call(block10162(s(5), s(4), s(3), s(2), s(1), s(0)))

block10162(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10163(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10163(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10163(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(8), s(7))
	call(block10190(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10163(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(8), s(7))
	call(block10189(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10189(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(jump10190(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	neq(s(6), s(5))
	call(block10237(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	eq(s(6), s(5))
	call(block10197(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block10227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block10226(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10197(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump10197(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10226(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10227(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 10274
	nop(PUSH2)
	call(block10274(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

block10237(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump10237(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10237(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block10268(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10237(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block10267(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10267(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10268(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block10274(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block10274(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 11058
	nop(PUSH2)
	call(block11058(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

block10279(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block10280(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block10298(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block10291(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block10280(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump10280(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10291(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block10298(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10298(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block10523(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10298(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block10304(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block10298(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump10298(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10304(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(numberOfInvestors) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 10280
	nop(PUSH2)
	call(block10280(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

jump10523(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(6), s(5))
	call(block10539(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10523(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(6), s(5))
	call(block10535(s(4), s(3), s(2), s(1), s(0)))

block10523(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump10523(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10535(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 11143
	nop(PUSH2)
	call(block11143(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block10539(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10539(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10539(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block10552(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10539(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block10551(s(5), s(4), s(3), s(2), s(1), s(0)))

block10551(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10552(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block10579(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10552(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block10578(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10552(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10552(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10578(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump10579(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), s(5))
	call(block10747(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump10579(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), s(5))
	call(block10586(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))

jump10586(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block10706(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10586(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block10702(s(4), s(3), s(2), s(1), s(0)))

block10586(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump10586(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10702(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump10706(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block10737(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10706(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block10736(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10706(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump10706(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10736(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10737(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 11057
	nop(PUSH2)
	call(block11057(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

jump10747(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block10831(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump10747(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block10830(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10747(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = 1500000000000000000000000
	nop(PUSH11)
	s(9) = s(7)
	nop(DUP2)
	call(jump10747(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10830(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10831(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump10831(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10831(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block10869(s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump10831(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block10865(s(4), s(3), s(2), s(1), s(0)))

block10865(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block10869(s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump10869(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block10886(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump10869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block10885(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10885(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10886(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump10886(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10886(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block11004(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), l(l5), l(l0)))

jump10886(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block11003(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11003(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11004(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 4
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11004(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11004(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11051(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump11004(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11050(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11050(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11051(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block11057(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block11057(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block11058(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block11058(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11058(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11058(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11123(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump11058(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11122(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11122(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11123(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	call(block11143(s(4),s(3),s(2),s(1),s(0)))

block11143(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2657(s(0)))
	nop(JUMP)

jump11148(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block11228(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11148(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block11224(s(3), s(2), s(1), s(0)))

block11148(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump11148(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11224(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block11228(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11228(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11228(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block11241(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11228(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block11240(s(4), s(3), s(2), s(1), s(0)))

block11240(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11241(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump11241(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11241(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block11268(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11241(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block11267(s(5), s(4), s(3), s(2), s(1), s(0)))

block11267(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11268(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 11316
	nop(PUSH2)
	call(jump11268(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMPI)

jump11268(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), 1 )
	call(block11316(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11268(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), 1 )
	call(block11275(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11275(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block11287(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11275(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block11286(s(4), s(3), s(2), s(1), s(0)))

block11275(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump11275(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11286(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11287(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump11287(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block11314(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block11313(s(5), s(4), s(3), s(2), s(1), s(0)))

block11313(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11314(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block11316(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11316(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(4), 0)
	call(block11327(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11316(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(4), 0)
	call(block11323(s(3), s(2), s(1), s(0)))

block11316(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump11316(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11323(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump11327(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block11426(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11327(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block11422(s(3), s(2), s(1), s(0)))

block11327(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(jump11327(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11422(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump11426(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block11442(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump11426(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block11438(s(3), s(2), s(1), s(0)))

block11426(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump11426(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11438(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block11442(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 23
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	nop(POP)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l4)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2704(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump11789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump11789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block11869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

block11789(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(standard)
	s(7) = g(standard)
	call(jump11789(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11869(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump11869(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l0)))

block11869(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump11869(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block11877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 11939
	nop(PUSH2)
	call(block11939(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block11896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block11910(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump11910(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block11910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump11910(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block11930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block11910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump11910(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block11930(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block11939(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block11939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2747(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block11947(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 18
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2967(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block11984(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block3054(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12020(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3148(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12044(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12044(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12044(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	eq(s(4), s(3))
	call(block12135(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump12044(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	neq(s(4), s(3))
	call(block12131(s(2), s(1), s(0)))

block12131(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12135(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12135(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12135(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	eq(s(4), s(3))
	call(block12206(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump12135(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	neq(s(4), s(3))
	call(block12202(s(2), s(1), s(0)))

block12202(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12206(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	leq(s(9), s(8))
	call(block12302(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump12206(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	gt(s(9), s(8))
	call(block12301(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12206(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgent)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgent) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump12206(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12301(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12302(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(state) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3235(s(0)))
	nop(JUMP)

jump12310(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block12325(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump12310(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block12324(s(3), s(2), s(1), s(0)))

block12310(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump12310(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12324(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12352(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump12325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12351(s(4), s(3), s(2), s(1), s(0)))

block12325(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12325(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12351(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12352(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block12401(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump12352(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block12359(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

block12352(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 12401
	nop(PUSH2)
	call(jump12352(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump12359(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block12372(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump12359(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block12371(s(3), s(2), s(1), s(0)))

block12359(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump12359(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12371(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12372(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12399(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump12372(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12398(s(4), s(3), s(2), s(1), s(0)))

block12372(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12372(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12398(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12399(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block12401(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

block12401(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump12401(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12401(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block12412(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump12401(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block12408(s(2), s(1), s(0)))

block12408(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12412(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block12431(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump12412(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block12423(s(2), s(1), s(0), l(l3), l(l0)))

block12412(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump12412(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12423(s(2), s(1), s(0), l(l3), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 12439
	nop(PUSH2)
	call(block12439(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12431(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 10
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block12439(s(2),s(1),s(0), l(l3), l(l0)))

block12439(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3258(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12442(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3301(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12448(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3344(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump12486(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block12664(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12486(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block12594(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

block12486(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(4)
	nop(DUP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(9)
	nop(DUP1)
	call(jump12486(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12594(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block12621(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump12594(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block12602(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block12594(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = 31
	nop(PUSH1)
	call(jump12594(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block12602(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(10) = 256
	nop(PUSH2)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(7)
	nop(DUP4)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 12664
	nop(PUSH2)
	call(block12664(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12621(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block12635(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump12635(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(11), s(10))
	call(block12635(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12635(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(11), s(10))
	call(block12655(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block12635(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	call(jump12635(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block12655(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 31
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	call(block12664(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block12664(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(2)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(1)
	nop(DUP7)
	call(block3475(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12698(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3654(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12736(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3741(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12773(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3828(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12779(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(symbol)
	s(7) = g(symbol)
	call(jump12779(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12779(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block12929(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12779(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block12859(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

block12859(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump12859(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump12859(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block12886(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump12859(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block12867(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l0)))

block12867(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 12929
	nop(PUSH2)
	call(block12929(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12886(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block12900(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump12900(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block12900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12900(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block12920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block12900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump12900(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block12920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block12929(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block12929(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3871(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12937(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4015(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12943(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4058(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12949(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 96
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump12949(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(8), s(7))
	call(block12968(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump12949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(8), s(7))
	call(block12967(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12967(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12968(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block12995(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump12968(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block12994(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12968(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump12968(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12994(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12995(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 13043
	nop(PUSH2)
	call(jump12995(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump12995(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 1 )
	call(block13043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump12995(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 1 )
	call(block13002(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13002(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	nop(DUP2)
	call(jump13002(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(8), s(7))
	call(block13014(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(8), s(7))
	call(block13013(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13013(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13014(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block13041(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13014(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block13040(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13014(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump13014(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13040(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13041(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block13043(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump13043(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(6), 0)
	call(block13054(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13043(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(6), 0)
	call(block13050(s(5), s(4), s(3), s(2), s(1), s(0)))

block13050(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump13054(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(12), 0)
	call(block13337(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13054(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(12), 0)
	call(block13267(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13054(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(10)
	nop(DUP1)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(11)
	nop(DUP1)
	call(jump13054(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13267(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = 31
	nop(PUSH1)
	call(jump13267(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13267(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	lt(s(13), s(12))
	call(block13294(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13267(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	geq(s(13), s(12))
	call(block13275(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13275(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = 256
	nop(PUSH2)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(9)
	nop(DUP4)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = 13337
	nop(PUSH2)
	call(block13337(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block13294(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 0
	nop(PUSH1)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block13308(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13308(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block13308(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13308(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block13328(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13308(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	call(jump13308(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block13328(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	call(block13337(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block13337(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = 28
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump13337(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13337(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block13428(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump13337(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block13420(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block13420(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 13500
	nop(PUSH2)
	call(block13500(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block13428(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = 28
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block13500(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block13500(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	call(block4145(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump13507(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block13598(s(2), s(1), s(0),g(owner)))

jump13507(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block13594(s(2), s(1), s(0)))

block13507(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13507(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13594(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump13598(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block13636(s(2), s(1), s(0),g(owner)))

jump13598(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block13632(s(2), s(1), s(0)))

block13598(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13598(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13632(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13636(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4347(s(0)))
	nop(JUMP)

jump13703(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block13716(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump13703(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block13715(s(4), s(3), s(2), s(1), s(0)))

block13703(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13703(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13715(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13716(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block13743(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump13716(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block13742(s(5), s(4), s(3), s(2), s(1), s(0)))

block13716(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump13716(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13742(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13743(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump13743(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13743(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block13755(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump13743(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block13751(s(3), s(2), s(1), s(0)))

block13751(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13755(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block13833(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump13755(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block13829(s(3), s(2), s(1), s(0)))

block13755(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump13755(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13829(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13833(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block13976(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump13833(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block13972(s(3), s(2), s(1), s(0)))

block13833(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump13833(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13972(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13976(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4424(s(0)))
	nop(JUMP)

block14235(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 14246
	nop(PUSH2)
	s(6) = 17800
	nop(PUSH2)
	call(block17800_0(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block14246(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14246(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14246(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block14262(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14246(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block14261(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14261(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14262(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14262(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14262(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block14289(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14262(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block14288(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14288(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14289(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), 1 )
	call(block14337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14289(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), 1 )
	call(block14296(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block14289(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 14337
	nop(PUSH2)
	call(jump14289(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump14296(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block14308(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14296(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block14307(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14296(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14296(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14307(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14308(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump14308(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14308(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block14335(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14308(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block14334(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14334(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14335(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block14337(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block14337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump14337(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block14348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump14337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block14344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14344(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump14348(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block14365(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump14348(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block14361(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14348(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump14348(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14361(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14365(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block14366(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump14366(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block14384(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump14366(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block14377(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block14366(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump14366(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14377(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block14384(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block14384(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump14384(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14384(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14876(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump14384(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump14390(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block14685(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump14390(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block14390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 64
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l5)
	nop(MLOAD)
	call(jump14390(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 24
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 14702
	nop(PUSH2)
	call(block14702(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block14685(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block14702(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block14702(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 14366
	nop(PUSH2)
	call(block14366(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

jump14876(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block14896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump14876(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block14888(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block14876(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump14876(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14888(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 15284
	nop(PUSH2)
	call(block15284(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block14896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 25
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump14896(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14896(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15224(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump14896(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block14935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump14935(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block15101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l5), l(l0), address, balance))

jump14935(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block15000(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l5), l(l0)))

block14935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 19
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(migrationAgent)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump14935(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15000(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	neq(s(8), 0)
	call(block15096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump15000(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	eq(s(8), 0)
	call(block15092(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15000(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump15000(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l5), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15092(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block15096(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 15223
	nop(PUSH2)
	call(block15223(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block15101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 19
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump15101(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15101(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block15222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump15101(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block15222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block15223(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block15223(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block15224(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block15224(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block15284(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block15284(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4469(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block15293(s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump15293(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15293(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block15372(s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15293(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block15368(s(3), s(2), s(1), s(0)))

block15368(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15372(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(6), s(5))
	call(block15385(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15372(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(6), s(5))
	call(block15384(s(4), s(3), s(2), s(1), s(0)))

block15372(s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump15372(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15384(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15385(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15385(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15385(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(7), s(6))
	call(block15412(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15385(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(7), s(6))
	call(block15411(s(5), s(4), s(3), s(2), s(1), s(0)))

block15411(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15412(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), 1 )
	call(block15460(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15412(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), 1 )
	call(block15419(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

block15412(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 15460
	nop(PUSH2)
	call(jump15412(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMPI)

jump15419(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(6), s(5))
	call(block15431(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15419(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(6), s(5))
	call(block15430(s(4), s(3), s(2), s(1), s(0)))

block15419(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump15419(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15430(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15431(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump15431(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(7), s(6))
	call(block15458(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(7), s(6))
	call(block15457(s(5), s(4), s(3), s(2), s(1), s(0)))

block15457(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15458(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block15460(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15460(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(4), 0)
	call(block15471(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump15460(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(4), 0)
	call(block15467(s(3), s(2), s(1), s(0)))

block15460(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump15460(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15467(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15471(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump15471(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15471(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), 0)
	call(block15550(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump15471(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), 0)
	call(block15482(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

block15482(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block15550(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump15550(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(4), 0)
	call(block15561(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump15550(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(4), 0)
	call(block15557(s(3), s(2), s(1), s(0)))

block15550(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump15550(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15557(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15561(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block15643(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump15561(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block15639(s(3), s(2), s(1), s(0)))

block15561(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1000
	nop(PUSH2)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(2)
	nop(DUP3)
	call(jump15561(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15639(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump15643(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block15724(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump15643(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block15720(s(3), s(2), s(1), s(0)))

block15643(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump15643(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15720(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15724(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 15881
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 17928
	nop(PUSH2)
	call(block17928(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block15881(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 604800
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 108887088492223194580205863093065607007830925866203196929080134293453516956571
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	nop(DUP3)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(13) = l(l3)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l3)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 0
	nop(PUSH1)
	call(block16059(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump16059(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(18), s(17))
	call(block16086(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump16059(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(18), s(17))
	call(block16068(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block16059(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump16059(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16068(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(17) = l(l4)
	nop(MLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)+s(18)
	nop(ADD)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 16059
	nop(PUSH2)
	call(block16059(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block16086(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(11)
	nop(DUP1)
	call(jump16086(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16086(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(12), 0)
	call(block16131(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump16086(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(12), 0)
	call(block16106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block16106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block16131(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block16131(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	call(block4608(s(0)))
	nop(JUMP)

block16149(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16149(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16149(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block16240(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16149(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block16236(s(3), s(2), s(1), s(0)))

block16236(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16240(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16240(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16240(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block16253(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16240(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block16252(s(4), s(3), s(2), s(1), s(0)))

block16252(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16253(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16253(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16253(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block16280(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16253(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block16279(s(5), s(4), s(3), s(2), s(1), s(0)))

block16279(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block16329(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block16287(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

block16280(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 16329
	nop(PUSH2)
	call(jump16280(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump16287(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block16300(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16287(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block16299(s(4), s(3), s(2), s(1), s(0)))

block16287(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16287(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16299(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16300(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block16327(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16300(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block16326(s(5), s(4), s(3), s(2), s(1), s(0)))

block16300(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16300(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16326(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16327(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block16329(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16329(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block16340(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump16329(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block16336(s(3), s(2), s(1), s(0)))

block16329(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump16329(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16336(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16340(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block16444(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump16340(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block16443(s(4), s(3), s(2), s(1), s(0)))

block16340(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 9
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleOwner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(etherPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(numberOfInvestors) = s(4)
	nop(SSTORE)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16340(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16443(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16444(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16444(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16444(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block16471(s(5), s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump16444(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block16470(s(5), s(4), s(3), s(2), s(1), s(0)))

block16470(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16471(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	neq(s(5), s(4))
	call(block16550(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump16471(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	eq(s(5), s(4))
	call(block16478(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

block16471(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump16471(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block16520(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump16478(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block16519(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16478(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	s(4) = 1209600
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump16478(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16519(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16520(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 16619
	nop(PUSH2)
	call(block16619(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block16550(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 2592000
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump16550(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16550(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block16593(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump16550(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block16592(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16592(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16593(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5200000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3600000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block16619(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

jump16619(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(10), s(9))
	call(block16684(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump16619(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(10), s(9))
	call(block16683(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16619(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump16619(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16683(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16684(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block4685(s(0)))
	nop(JUMP)

jump16707(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block16789(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16707(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block16785(s(5), s(4), s(3), s(2), s(1), s(0)))

block16707(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump16707(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16785(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block16789(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump16789(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(8), s(7))
	call(block16802(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16789(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(8), s(7))
	call(block16801(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16801(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16802(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(9), s(8))
	call(block16829(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16802(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(9), s(8))
	call(block16828(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16802(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump16802(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16828(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16829(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), 1 )
	call(block16877(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16829(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), 1 )
	call(block16836(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block16829(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 16877
	nop(PUSH2)
	call(jump16829(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMPI)

jump16836(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(8), s(7))
	call(block16848(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16836(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(8), s(7))
	call(block16847(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16836(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	nop(DUP2)
	call(jump16836(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16847(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16848(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump16848(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16848(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(9), s(8))
	call(block16875(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16848(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(9), s(8))
	call(block16874(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16874(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16875(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block16877(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block16877(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump16877(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16877(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block16888(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16877(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block16884(s(5), s(4), s(3), s(2), s(1), s(0)))

block16884(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump16888(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block16972(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16888(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block16968(s(5), s(4), s(3), s(2), s(1), s(0)))

block16888(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump16888(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16968(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block16972(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 6
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump16972(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block17073(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block17069(s(5), s(4), s(3), s(2), s(1), s(0)))

block17069(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump17073(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block17091(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump17073(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block17087(s(5), s(4), s(3), s(2), s(1), s(0)))

block17073(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump17073(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17087(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block17091(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 7
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(3)
	nop(DUP5)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 6
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l4)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(3)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 108608132442831941486207068684578916062758046186561762425641249979049254353392
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4764(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block17469(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4807(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block17488(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 26
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block4908(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump17550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block17565(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0)))

jump17550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block17564(s(5), s(4), s(3), s(2), s(1), s(0)))

block17550(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17550(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17564(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17565(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block17592(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump17565(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block17591(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17565(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump17565(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17591(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17592(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump17592(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17592(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block17604(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump17592(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block17600(s(4), s(3), s(2), s(1), s(0)))

block17600(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block17604(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5042(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block17737(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5085(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block17743(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5128(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block17749(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 27
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block5193(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block17800(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 64
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block7462(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block17830(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	s(14) = s(13)
	nop(DUP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 1
	nop(PUSH1)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 2
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 31
	nop(PUSH1)
	call(jump17830(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump17830(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	lt(s(16), s(15))
	call(block17868(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump17830(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	geq(s(16), s(15))
	call(block17863(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

block17863(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(14) = 17899
	nop(PUSH2)
	call(block17899(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block17868(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(15) = 31
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 17898
	nop(PUSH2)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 18056
	nop(PUSH2)
	call(block18056(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block17898(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block17899(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))

block17899(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	call(block8405(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block17902(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block9633(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

jump17928(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	lt(s(11), s(10))
	call(block17993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17928(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	geq(s(11), s(10))
	call(block17977(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block17928(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 31
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 31
	nop(PUSH1)
	call(jump17928(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block17977(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = 255
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(5)
	nop(DUP6)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 18039
	nop(PUSH2)
	call(block18039(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

jump17993(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(10), 0)
	call(block18039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17993(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(10), 0)
	call(block18008(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block17993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(10)
	nop(DUP1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(5)
	nop(DUP6)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	nop(DUP3)
	call(jump17993(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18008(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block18011(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump18011(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(11), s(10))
	call(block18038(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump18011(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(11), s(10))
	call(block18020(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block18011(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump18011(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18020(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 18011
	nop(PUSH2)
	call(block18011(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18038(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(block18039(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block18039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 18052
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 18056
	nop(PUSH2)
	call(block18056_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18052(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block15881(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18056(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(16) = 18090
	nop(PUSH2)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	call(block18062(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))

jump18062(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	leq(s(18), s(17))
	call(block18086(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump18062(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	gt(s(18), s(17))
	call(block18071(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

block18062(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	call(jump18062(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18071(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	gs(1) = s(19)
	gs(2) = s(18)
	nop(SSTORE)
	nop(POP)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 18062
	nop(PUSH2)
	call(block18062(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block18086(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	call(block18090(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block18090(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block17898(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block1001_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block1010_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 7
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1042
	nop(PUSH2)
	call(block1042_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block1025_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedUSD)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1042_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1042_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump1042_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1042_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1189_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1042_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1185_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1185_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1189_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1204_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1189_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1200_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1189_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump1189_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1200_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1204_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 11
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump1204_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1204_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(7), s(6))
	call(block1381_0(s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1204_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(7), s(6))
	call(block1283_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1283_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfInvestors)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1381_0(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1381_0(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1511_0(s(5),s(4),s(3),s(2),s(1),s(0)))

block1511_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block17800_0(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block14246(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block18056_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(9) = 18090
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block18062_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block18062_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump18062_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18062_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(11), s(10))
	call(block18086_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump18062_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(11), s(10))
	call(block18071_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block18071_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 18062
	nop(PUSH2)
	call(block18062_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18086_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block18090_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18090_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block18052(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block582_0(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump582_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump582_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block603_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump582_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block602_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block602_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block603_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump603_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump603_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block630_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump603_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block629_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block629_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump630_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), 1 )
	call(block679_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump630_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), 1 )
	call(block637_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block630_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 679
	nop(PUSH2)
	call(jump630_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

jump637_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block650_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump637_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block649_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block637_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump637_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block649_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump650_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block677_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump650_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block676_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block650_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump650_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block676_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block677_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block679_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block679_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump679_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump679_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block690_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump679_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block686_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block686_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block690_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump690_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump690_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block707_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump690_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block706_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block706_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump707_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump707_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block733_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block707_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump707_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block733_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block749_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block741_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block741_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 125
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 851
	nop(PUSH2)
	call(block851_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block749_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump749_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump749_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block762_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump749_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block761_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block761_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block762_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump762_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump762_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump762_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block788_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block788_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump789_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block850_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block796_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block796_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(6) = 86400
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump796_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump796_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block819_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump796_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block811_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block811_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 115
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 849
	nop(PUSH2)
	call(block849_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump819_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block843_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump819_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block835_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block819_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 604800
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump819_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block835_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 110
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 848
	nop(PUSH2)
	call(block848_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block843_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 100
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	call(block848_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block848_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block849_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block849_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block850_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block850_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block851_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block851_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	nop(DUP6)
	call(jump851_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block1511_0(s(5), s(4), s(3), s(2), s(1), s(0)))

jump851_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block861_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block861_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump861_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump861_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block886_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump861_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block885_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block885_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block886_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump886_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump886_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block1025_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump886_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block904_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block904_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(7) = 5
	nop(PUSH1)
	s(7) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = 1000000000000000000
	nop(PUSH8)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump904_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump904_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block935_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump904_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block934_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block934_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block935_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump935_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump935_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block1010_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump935_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block1001_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

