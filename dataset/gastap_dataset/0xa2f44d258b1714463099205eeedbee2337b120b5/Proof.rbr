block0(g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	lt(s(1), s(0))
	call(block637(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump0(s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	geq(s(1), s(0))
	call(block13(g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump13(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1573(s(0),g(votingDeadline), l(l3), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block65(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block13(g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1616(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block76(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block65(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1725(s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block87(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block87(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1869(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block98(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block98(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1946(s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump98(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block109(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block109(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1969(s(0),g(numberOfVotes), l(l3), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block120(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump120(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2012(s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block131(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block120(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2055(s(0),g(yea), l(l3), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block142(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block142(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2098(s(0),g(totalSupply), l(l3), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block153(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump153(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2141(s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))

jump153(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block164(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block153(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2191(s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block175(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block164(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2234(s(0),g(collectedUSD), l(l3), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block186(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

jump186(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2277(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump186(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block197(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block186(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2386(s(0),g(weiReqFund), l(l3), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block208(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block197(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2429(s(0),g(decimals), l(l3), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block219(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))

block219(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2478(s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump219(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block230(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump230(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2523(s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess))

jump230(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block241(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block230(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1039966893
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1162544648
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2624(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))

jump241(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block252(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block252(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1184324506
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2669(s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, callvalue, number, timestamp))

jump252(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l9), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, number, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block263(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block263(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2720(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))

jump263(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, investorsToProcess, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block274(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump274(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2765(s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump274(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block285(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block274(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2832(s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block296(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump296(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2976(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block307(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block296(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1536051423
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3078(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump307(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block318(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block307(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3197(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump318(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block329(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block318(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3291(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump329(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block340(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump340(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3378(s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))

jump340(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block351(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block340(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3445(s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))

jump351(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block362(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block351(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3488(s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block373(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block362(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3531(s(0),g(migrationAgent), l(l3), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block384(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block373(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block384(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2215540989
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3618(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump384(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block395(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block395(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3841(s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block406(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump406(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3928(s(0),g(owner), l(l3), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block417(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block406(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2444752365
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4015(s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens))

jump417(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, priceInTokens, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block428(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block428(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4060(s(0),g(totalMigrated), l(l3), l(l0), callvalue))

jump428(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block439(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump439(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4103(s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))

jump439(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block450(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block439(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4247(s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block461(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block461(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4290(s(0),g(etherPrice), l(l3), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block472(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

jump472(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4333(s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump472(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block483(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block472(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2731987842
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4475(s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp))

jump483(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block494(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block483(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2749180734
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4677(s(0),g(owner), calldatasize, caller, callvalue, owner))

jump494(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block505(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))

block505(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block4744(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump505(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, to, urlInfo, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block516(s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo, votesToProcess))

block516(s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo, votesToProcess)=>
	eq(s(2), s(1))
	call(block4821(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump516(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo, votesToProcess)=>
	neq(s(2), s(1))
	call(block527(s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo))

block527(s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3014322224
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump527(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo)=>
	eq(s(2), s(1))
	call(block4890(s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo))

jump527(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, proofReqFund, returndatasize, spender, swype, timestamp, urlInfo)=>
	neq(s(2), s(1))
	call(block538(s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp))

jump538(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	eq(s(2), s(1))
	call(block5005(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))

jump538(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	neq(s(2), s(1))
	call(block549(s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp))

block538(s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3078441078
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	eq(s(2), s(1))
	call(block5082(s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp))

jump549(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	neq(s(2), s(1))
	call(block560(s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp))

block549(s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3171163213
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, inSupport, owner, projectOwner, returndatasize, spender, swype, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	eq(s(2), s(1))
	call(block5181(s(0),g(state), l(l3), l(l0), callvalue))

jump560(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	neq(s(2), s(1))
	call(block571(s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp))

jump571(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	eq(s(2), s(1))
	call(block5238(s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, hash, swype, timestamp))

jump571(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	neq(s(2), s(1))
	call(block582(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block571(s(0), g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3278152285
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldataload, calldatasize, caller, callvalue, hash, owner, returndatasize, spender, swype, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block5301(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump582(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block593(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block593(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block5403(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump593(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block604(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block604(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5522(s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))

jump604(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block615(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

jump615(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5565(s(0),g(nay), l(l3), l(l0), callvalue))

jump615(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block626(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block615(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block5608(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump626(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block637_0(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block626(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump637(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block658(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump637(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block657(s(5), s(4), s(3), s(2), s(1), s(0)))

block657(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block658(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump658(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump658(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block685(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump658(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block684(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block684(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block685(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 734
	nop(PUSH2)
	call(jump685(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

jump685(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 1 )
	call(block734(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump685(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 1 )
	call(block692(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block692(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump692(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block705(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block704(s(5), s(4), s(3), s(2), s(1), s(0)))

block704(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block705(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump705(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block732(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump705(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block731(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block731(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block732(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block734(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block734(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump734(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block745(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump734(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block741(s(4), s(3), s(2), s(1), s(0)))

block741(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block745(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump745(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump745(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block762(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump745(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block761(s(5), s(4), s(3), s(2), s(1), s(0)))

block761(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block789(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump762(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block762(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump762(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block788(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump789(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block804(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump789(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block796(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block796(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 125
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 906
	nop(PUSH2)
	call(block906(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block804(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump804(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump804(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block817(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump804(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block816(s(5), s(4), s(3), s(2), s(1), s(0)))

block816(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block817(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump817(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump817(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block844(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump817(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block843(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block843(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump844(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block905(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump844(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block851(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block844(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump844(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block851(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(5) = 86400
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump851(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block874(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump851(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block866(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block866(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 115
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 904
	nop(PUSH2)
	call(block904(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump874(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block898(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump874(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block890(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block874(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 604800
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump874(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block890(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 110
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 903
	nop(PUSH2)
	call(block903(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block898(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 100
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	call(block903(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block903(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block904(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block904(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block905(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block905(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block906(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block1566(s(4), s(3), s(2), s(1), s(0)))

jump906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block916(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block906(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	nop(DUP6)
	call(jump906(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block916(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump916(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block941(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block940(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block940(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump941(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block1080(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump941(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block959(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block941(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump941(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block959(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 7
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(5) = g(etherPrice)
	nop(SLOAD)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump959(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump959(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block990(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump959(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block989(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block989(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block990(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(1)
	nop(DUP6)
	s(8) = callvalue
	nop(CALLVALUE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump990(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump990(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(6), 0)
	call(block1065(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump990(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(6), 0)
	call(block1056(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block1056(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block1065(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1097
	nop(PUSH2)
	call(block1097(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block1080(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(collectedUSD)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1097(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1097(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1244(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1097(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1240(s(4), s(3), s(2), s(1), s(0)))

block1097(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(0)
	nop(DUP6)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump1097(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1240(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1244(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	call(jump1244(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1244(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1259(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1244(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1255(s(4), s(3), s(2), s(1), s(0)))

block1255(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1259(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump1259(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1259(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(6), s(5))
	call(block1436(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1259(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(6), s(5))
	call(block1338(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1338(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(5) = caller
	nop(CALLER)
	s(6) = 12
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1436(s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1436(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1566(s(4),s(3),s(2),s(1),s(0)))

block1566(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block1573(s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1573(s(2),s(1),s(0),g(votingDeadline), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1573(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1585(s(1), s(0),g(votingDeadline), l(l3), l(l0)))

jump1573(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1581(s(1), s(0)))

block1581(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1585(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1594
	nop(PUSH2)
	s(2) = 5717
	nop(PUSH2)
	call(block5717(s(1),s(0),g(votingDeadline), l(l3), l(l0)))
	nop(JUMP)

block1594(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1616(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1616(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1616(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1628(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump1616(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1624(s(1), s(0)))

block1624(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1628(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1659
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5723
	nop(PUSH2)
	call(block5723(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1659(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1725(s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1725(s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1725(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1737(s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

jump1725(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1733(s(1), s(0)))

block1733(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1737(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1746
	nop(PUSH2)
	s(2) = 5774
	nop(PUSH2)
	call(block5774(s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1746(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1783(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump1783(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block1810(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1783(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block1792(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block1783(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1783(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1792(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1783
	nop(PUSH2)
	call(block1783(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump1810(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1855(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1810(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1830(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1810(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1810(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1830(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1855(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1855(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1869(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1881(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value))

jump1869(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1877(s(1), s(0)))

block1869(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1869(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1877(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1881(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1944
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5932
	nop(PUSH2)
	call(block5932(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block1944(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1946(s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1946(s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1946(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block1958(s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump1946(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block1954(s(1), s(0)))

block1954(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1958(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1967
	nop(PUSH2)
	s(2) = 6218
	nop(PUSH2)
	call(block6218(s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block1967(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1969(s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1969(s(2),s(1),s(0),g(numberOfVotes), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1969(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1981(s(1), s(0),g(numberOfVotes), l(l3), l(l0)))

jump1969(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1977(s(1), s(0)))

block1977(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1981(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1990
	nop(PUSH2)
	s(2) = 6554
	nop(PUSH2)
	call(block6554(s(1),s(0),g(numberOfVotes), l(l3), l(l0)))
	nop(JUMP)

block1990(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2012(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2024(s(1), s(0),g(minimalSuccessUSD), l(l3), l(l0)))

jump2012(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2020(s(1), s(0)))

block2012(s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2012(s(2),s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2020(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2024(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2033
	nop(PUSH2)
	s(2) = 6560
	nop(PUSH2)
	call(block6560(s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0)))
	nop(JUMP)

block2033(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2055(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2067(s(1), s(0),g(yea), l(l3), l(l0)))

jump2055(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2063(s(1), s(0)))

block2055(s(0), g(yea), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2055(s(2),s(1),s(0),g(yea), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2063(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2067(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2076
	nop(PUSH2)
	s(2) = 6566
	nop(PUSH2)
	call(block6566(s(1),s(0),g(yea), l(l3), l(l0)))
	nop(JUMP)

block2076(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2098(s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2098(s(2),s(1),s(0),g(totalSupply), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2098(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2110(s(1), s(0),g(totalSupply), l(l3), l(l0)))

jump2098(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2106(s(1), s(0)))

block2106(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2110(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2119
	nop(PUSH2)
	s(2) = 6572
	nop(PUSH2)
	call(block6572(s(1),s(0),g(totalSupply), l(l3), l(l0)))
	nop(JUMP)

block2119(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2141(s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2141(s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2141(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2153(s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump2141(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2149(s(1), s(0)))

block2149(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2153(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2162
	nop(PUSH2)
	s(2) = 6578
	nop(PUSH2)
	call(block6578(s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMP)

block2162(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2191(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2203(s(1), s(0),g(numberOfInvestors), l(l3), l(l0)))

jump2191(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2199(s(1), s(0)))

block2191(s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2191(s(2),s(1),s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2199(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2203(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2212
	nop(PUSH2)
	s(2) = 6717
	nop(PUSH2)
	call(block6717(s(1),s(0),g(numberOfInvestors), l(l3), l(l0)))
	nop(JUMP)

block2212(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2234(s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2234(s(2),s(1),s(0),g(collectedUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2234(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2246(s(1), s(0),g(collectedUSD), l(l3), l(l0)))

jump2234(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2242(s(1), s(0)))

block2242(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2246(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2255
	nop(PUSH2)
	s(2) = 6723
	nop(PUSH2)
	call(block6723(s(1),s(0),g(collectedUSD), l(l3), l(l0)))
	nop(JUMP)

block2255(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2277(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2277(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2277(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block2289(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value))

jump2277(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block2285(s(1), s(0)))

block2285(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2289(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2384
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6729
	nop(PUSH2)
	call(block6729(s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2384(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2386(s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2386(s(2),s(1),s(0),g(weiReqFund), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2386(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2398(s(1), s(0),g(weiReqFund), l(l3), l(l0)))

jump2386(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2394(s(1), s(0)))

block2394(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2398(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2407
	nop(PUSH2)
	s(2) = 7539
	nop(PUSH2)
	call(block7539(s(1),s(0),g(weiReqFund), l(l3), l(l0)))
	nop(JUMP)

block2407(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2429(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2441(s(1), s(0),g(decimals), l(l3), l(l0)))

jump2429(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2437(s(1), s(0)))

block2429(s(0), g(decimals), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2429(s(2),s(1),s(0),g(decimals), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2437(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2441(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2450
	nop(PUSH2)
	s(2) = 7545
	nop(PUSH2)
	call(block7545(s(1),s(0),g(decimals), l(l3), l(l0)))
	nop(JUMP)

block2450(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2478(s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2478(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2478(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block2490(s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump2478(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block2486(s(1), s(0)))

block2486(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2490(s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2521
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7564
	nop(PUSH2)
	call(block7564(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2521(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2523(s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2523(s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2523(s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block2535(s(1), s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, projectOwner, timestamp, votesToProcess))

jump2523(s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, callvalue, projectOwner, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block2531(s(1), s(0)))

block2531(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2535(s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, projectOwner, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2598
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = votesToProcess
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 7907
	nop(PUSH2)
	call(block7907(s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block2598(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2624(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2624(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2624(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	eq(s(2), 0)
	call(block2636(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value))

jump2624(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	neq(s(2), 0)
	call(block2632(s(1), s(0)))

block2632(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2636(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2667
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9396
	nop(PUSH2)
	call(block9396(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2667(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2669(s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, callvalue, number, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2669(s(2),s(1),s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, callvalue, number, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2669(s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, callvalue, number, timestamp)=>
	eq(s(2), 0)
	call(block2681(s(1), s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump2669(s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, callvalue, number, timestamp)=>
	neq(s(2), 0)
	call(block2677(s(1), s(0)))

block2677(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2681(s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2690
	nop(PUSH2)
	s(2) = 10081
	nop(PUSH2)
	call(block10081(s(1),s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(JUMP)

block2690(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2720(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2732(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp))

jump2720(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2728(s(1), s(0)))

block2720(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2720(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2728(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2732(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2763
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10406
	nop(PUSH2)
	call(block10406(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block2763(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2765(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2777(s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2765(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2773(s(1), s(0)))

block2765(s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2765(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2773(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2777(s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2810
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11931
	nop(PUSH2)
	call(block11931(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2810(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2832(s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2832(s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2832(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2844(s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

jump2832(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2840(s(1), s(0)))

block2840(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2844(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2853
	nop(PUSH2)
	s(2) = 12572
	nop(PUSH2)
	call(block12572(s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2853(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2890(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block2890(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2890(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2890(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block2917(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2890(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block2899(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block2899(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2890
	nop(PUSH2)
	call(block2890(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block2917(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2917(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2917(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2962(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2917(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2937(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2937(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2962(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2962(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2976(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2976(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2976(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2988(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2976(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2984(s(1), s(0)))

block2984(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2988(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3041
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12730
	nop(PUSH2)
	call(block12730(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3041(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3078(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3090(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3078(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3086(s(1), s(0)))

block3078(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3078(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3086(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3090(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3175
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 12780
	nop(PUSH2)
	call(block12780(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3175(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3197(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3209(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3197(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3205(s(1), s(0)))

block3197(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3197(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3205(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3209(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3262
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12817
	nop(PUSH2)
	call(block12817(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3262(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3291(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3291(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3291(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3303(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3291(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3299(s(1), s(0)))

block3299(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3303(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3356
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12853
	nop(PUSH2)
	call(block12853(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3356(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3378(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3390(s(1), s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller))

jump3378(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3386(s(1), s(0)))

block3378(s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3378(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3386(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3390(s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3443
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12877
	nop(PUSH2)
	call(block12877(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(JUMP)

block3443(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3445(s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3445(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3445(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block3457(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump3445(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block3453(s(1), s(0)))

block3453(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3457(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3466
	nop(PUSH2)
	s(2) = 13143
	nop(PUSH2)
	call(block13143(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMP)

block3466(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3488(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3500(s(1), s(0),g(totalLimitUSD), l(l3), l(l0)))

jump3488(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3496(s(1), s(0)))

block3488(s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3488(s(2),s(1),s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3496(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3500(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3509
	nop(PUSH2)
	s(2) = 13275
	nop(PUSH2)
	call(block13275(s(1),s(0),g(totalLimitUSD), l(l3), l(l0)))
	nop(JUMP)

block3509(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3531(s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3531(s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3531(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3543(s(1), s(0),g(migrationAgent), l(l3), l(l0)))

jump3531(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3539(s(1), s(0)))

block3539(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3543(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3552
	nop(PUSH2)
	s(2) = 13281
	nop(PUSH2)
	call(block13281(s(1),s(0),g(migrationAgent), l(l3), l(l0)))
	nop(JUMP)

block3552(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3618(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3618(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3618(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3630(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3618(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3626(s(1), s(0)))

block3626(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3630(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3683
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13319
	nop(PUSH2)
	call(block13319(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(4)
	nop(DUP7)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	nop(DUP3)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(13) = l(l3)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l3)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 0
	nop(PUSH1)
	call(block3750(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block3750(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump3750(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3750(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(18), s(17))
	call(block3777(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3750(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(18), s(17))
	call(block3759(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block3759(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(17) = l(l4)
	nop(MLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)+s(18)
	nop(ADD)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 3750
	nop(PUSH2)
	call(block3750(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump3777(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(12), 0)
	call(block3822(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3777(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(12), 0)
	call(block3797(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3777(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(11)
	nop(DUP1)
	call(jump3777(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3797(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block3822(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3822(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(2)
	s(2) = s(10)
	s(10) = s(11)
	nop(SWAP8)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3841(s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3841(s(2),s(1),s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3841(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3853(s(1), s(0),g(crowdsaleOwner), l(l3), l(l0)))

jump3841(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3849(s(1), s(0)))

block3849(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3853(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3862
	nop(PUSH2)
	s(2) = 13531
	nop(PUSH2)
	call(block13531(s(1),s(0),g(crowdsaleOwner), l(l3), l(l0)))
	nop(JUMP)

block3862(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3928(s(0), g(owner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3928(s(2),s(1),s(0),g(owner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3928(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3940(s(1), s(0),g(owner), l(l3), l(l0)))

jump3928(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3936(s(1), s(0)))

block3936(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3940(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3949
	nop(PUSH2)
	s(2) = 13569
	nop(PUSH2)
	call(block13569(s(1),s(0),g(owner), l(l3), l(l0)))
	nop(JUMP)

block3949(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4015(s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4015(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4015(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	eq(s(2), 0)
	call(block4027(s(1), s(0),g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, priceInTokens))

jump4015(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, callvalue, priceInTokens)=>
	neq(s(2), 0)
	call(block4023(s(1), s(0)))

block4023(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4027(s(1), s(0), g(teamFee), g(priceInTokens), g(owner), calldatasize, caller, priceInTokens)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4058
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = priceInTokens
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13606
	nop(PUSH2)
	call(block13606(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), caller))
	nop(JUMP)

block4058(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4060(s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4060(s(2),s(1),s(0),g(totalMigrated), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4060(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4072(s(1), s(0),g(totalMigrated), l(l3), l(l0)))

jump4060(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4068(s(1), s(0)))

block4068(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4072(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4081
	nop(PUSH2)
	s(2) = 13766
	nop(PUSH2)
	call(block13766(s(1),s(0),g(totalMigrated), l(l3), l(l0)))
	nop(JUMP)

block4081(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4103(s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4103(s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4103(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4115(s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

jump4103(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4111(s(1), s(0)))

block4111(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4115(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4124
	nop(PUSH2)
	s(2) = 13772
	nop(PUSH2)
	call(block13772(s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block4124(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block4161(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump4161(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block4188(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4161(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block4170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block4161(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump4161(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 4161
	nop(PUSH2)
	call(block4161(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump4188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block4233(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block4208(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block4188(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump4188(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4208(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block4233(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block4233(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4247(s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4247(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4247(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4259(s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0)))

jump4247(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4255(s(1), s(0)))

block4255(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4259(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4268
	nop(PUSH2)
	s(2) = 13930
	nop(PUSH2)
	call(block13930(s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0)))
	nop(JUMP)

block4268(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4290(s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4290(s(2),s(1),s(0),g(etherPrice), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4290(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4302(s(1), s(0),g(etherPrice), l(l3), l(l0)))

jump4290(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4298(s(1), s(0)))

block4298(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4302(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4311
	nop(PUSH2)
	s(2) = 13936
	nop(PUSH2)
	call(block13936(s(1),s(0),g(etherPrice), l(l3), l(l0)))
	nop(JUMP)

block4311(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4333(s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4333(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4333(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4345(s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump4333(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4341(s(1), s(0)))

block4341(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4345(s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4380
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13942
	nop(PUSH2)
	call(block13942(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4380(s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 65535
	nop(PUSH2)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 65535
	nop(PUSH2)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4475(s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4475(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4475(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	eq(s(2), 0)
	call(block4487(s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, projectOwner, timestamp))

jump4475(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, projectOwner, timestamp)=>
	neq(s(2), 0)
	call(block4483(s(1), s(0)))

block4483(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4487(s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, projectOwner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4540
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14036
	nop(PUSH2)
	call(block14036(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block4540(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(1)
	nop(DUP5)
	s(7) = s(5)
	nop(DUP2)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	nop(DUP3)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	s(9) = l(l3)
	nop(MLOAD)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 0
	nop(PUSH1)
	call(block4589(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block4589(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	call(jump4589(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4589(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(14), s(13))
	call(block4616(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4589(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(14), s(13))
	call(block4598(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block4598(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l4)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)+s(14)
	nop(ADD)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = 4589
	nop(PUSH2)
	call(block4589(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block4616(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(7)
	nop(DUP1)
	call(jump4616(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(8), 0)
	call(block4661(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump4616(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(8), 0)
	call(block4636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block4636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(8)
	nop(DUP1)
	ll = s(9)
	s(9) = fresh(0)
	nop(MLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block4661(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block4661(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4677(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block4689(s(1), s(0),g(owner), calldatasize, caller, owner))

jump4677(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block4685(s(1), s(0)))

block4677(s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4677(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4685(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4689(s(1), s(0), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4742
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14594
	nop(PUSH2)
	call(block14594(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block4742(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4744(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4744(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4744(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block4756(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value))

jump4744(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block4752(s(1), s(0)))

block4752(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4756(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4819
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14790
	nop(PUSH2)
	call(block14790(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block4819(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4821(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block4833(s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump4821(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block4829(s(1), s(0)))

block4821(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4821(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4829(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4833(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4864
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15322
	nop(PUSH2)
	call(block15322(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block4864(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4890(s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4890(s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4890(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	eq(s(2), 0)
	call(block4902(s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, proofReqFund, timestamp, urlInfo))

jump4890(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, proofReqFund, timestamp, urlInfo)=>
	neq(s(2), 0)
	call(block4898(s(1), s(0)))

block4898(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4902(s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, proofReqFund, timestamp, urlInfo)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5003
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = proofReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = urlInfo
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	s(7) = urlInfo
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 31
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16380
	nop(PUSH2)
	call(block16380(s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block5003(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump5005(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	eq(s(2), 0)
	call(block5017(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp))

jump5005(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	neq(s(2), 0)
	call(block5013(s(1), s(0)))

block5005(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5005(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5013(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5017(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5080
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = etherPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 17236
	nop(PUSH2)
	call(block17236(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(JUMP)

block5080(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump5082(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	eq(s(2), 0)
	call(block5094(s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, projectOwner, timestamp))

jump5082(s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	neq(s(2), 0)
	call(block5090(s(1), s(0)))

block5082(s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5082(s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, projectOwner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5090(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5094(s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, projectOwner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5159
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = projectOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = inSupport
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 17794
	nop(PUSH2)
	call(block17794(s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block5159(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block5181(s(0), g(state), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5181(s(2),s(1),s(0),g(state), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5181(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5193(s(1), s(0),g(state), l(l3), l(l0)))

jump5181(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5189(s(1), s(0)))

block5189(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5193(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5202
	nop(PUSH2)
	s(2) = 18556
	nop(PUSH2)
	call(block18556(s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump5202(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block5218(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump5202(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block5217(s(5), s(4), s(3), s(2), s(1), s(0)))

block5202(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5202(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5217(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5218(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block5238(s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, hash, swype, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5238(s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, hash, swype, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5238(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, hash, swype, timestamp)=>
	eq(s(2), 0)
	call(block5250(s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, hash, swype, timestamp))

jump5238(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, hash, swype, timestamp)=>
	neq(s(2), 0)
	call(block5246(s(1), s(0)))

block5246(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5250(s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, hash, swype, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5299
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = swype
	nop(CALLDATALOAD)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = hash
	nop(CALLDATALOAD)
	s(7) = 0
	nop(PUSH1)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 18575
	nop(PUSH2)
	call(block18575(s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block5299(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block5301(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5301(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5301(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block5313(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump5301(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block5309(s(1), s(0)))

block5309(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5313(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5366
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 19249
	nop(PUSH2)
	call(block19249(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5366(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block5403(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5403(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5403(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block5415(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender))

jump5403(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block5411(s(1), s(0)))

block5411(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5415(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5500
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 19311
	nop(PUSH2)
	call(block19311(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5500(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block5522(s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5522(s(2),s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5522(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5534(s(1), s(0),g(crowdsaleStartTime), l(l3), l(l0)))

jump5522(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5530(s(1), s(0)))

block5530(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5534(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5543
	nop(PUSH2)
	s(2) = 19498
	nop(PUSH2)
	call(block19498(s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0)))
	nop(JUMP)

block5543(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump5565(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block5577(s(1), s(0),g(nay), l(l3), l(l0)))

jump5565(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block5573(s(1), s(0)))

block5565(s(0), g(nay), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5565(s(2),s(1),s(0),g(nay), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5573(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5577(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5586
	nop(PUSH2)
	s(2) = 19504
	nop(PUSH2)
	call(block19504(s(1),s(0),g(nay), l(l3), l(l0)))
	nop(JUMP)

block5586(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block5608(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump5608(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5608(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block5620(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump5608(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block5616(s(1), s(0)))

block5616(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block5620(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 5651
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 19510
	nop(PUSH2)
	call(block19510(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5651(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block5717(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1594(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5723(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1659(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump5774(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump5774(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5854(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

block5774(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(name)
	s(7) = g(name)
	call(jump5774(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5854(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5881(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump5854(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5862(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l0)))

block5854(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5854(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block5862(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5924
	nop(PUSH2)
	call(block5924(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block5881(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5895(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump5895(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block5895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump5895(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block5915(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block5895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5895(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block5915(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5924(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block5924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1746(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump5932(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block5945(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump5932(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block5944(s(4), s(3), s(2), s(1), s(0)))

block5932(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5932(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5944(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5945(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5945(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5945(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5972(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5945(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5971(s(5), s(4), s(3), s(2), s(1), s(0)))

block5971(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5972(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5984(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5972(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5980(s(3), s(2), s(1), s(0)))

block5972(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5972(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5980(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5984(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1944(s(0)))
	nop(JUMP)

jump6218(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block6232(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump6218(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block6231(s(3), s(2), s(1), s(0)))

block6218(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6218(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6231(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block6259(s(4), s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump6232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block6258(s(4), s(3), s(2), s(1), s(0)))

block6232(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6232(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6258(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6259(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 1 )
	call(block6308(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump6259(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 1 )
	call(block6266(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

block6259(s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6308
	nop(PUSH2)
	call(jump6259(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMPI)

block6266(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6266(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6266(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block6279(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump6266(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block6278(s(3), s(2), s(1), s(0)))

block6278(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6279(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6279(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6279(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block6306(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump6279(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block6305(s(4), s(3), s(2), s(1), s(0)))

block6305(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6306(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6308(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))

block6308(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump6308(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6308(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block6319(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump6308(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block6315(s(2), s(1), s(0)))

block6315(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6319(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(4), s(3))
	call(block6551(s(2), s(1), s(0)))

jump6319(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(4), s(3))
	call(block6398(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

block6319(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6319(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6398(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump6398(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6398(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block6549(s(3), s(2), s(1), s(0)))

jump6398(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block6540(s(3), s(2), s(1), s(0), returndatasize))

block6540(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block6549(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block6551(s(2),s(1),s(0)))

block6551(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1967(s(0)))
	nop(JUMP)

block6554(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1990(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6560(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2033(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6566(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2076(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6572(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2119(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6578(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6578(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6578(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6594(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6578(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6593(s(4), s(3), s(2), s(1), s(0)))

block6593(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6594(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block6621(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6594(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block6620(s(5), s(4), s(3), s(2), s(1), s(0)))

block6594(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6594(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6620(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6621(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 6669
	nop(PUSH2)
	call(jump6621(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump6621(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block6669(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6621(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block6628(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

block6628(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6628(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6628(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block6640(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump6628(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block6639(s(4), s(3), s(2), s(1), s(0)))

block6639(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6640(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block6667(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6640(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block6666(s(5), s(4), s(3), s(2), s(1), s(0)))

block6640(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6640(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6666(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6667(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block6669(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

block6669(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump6669(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6669(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block6680(s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump6669(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block6676(s(3), s(2), s(1), s(0)))

block6676(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump6680(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block6705(s(3), s(2), s(1), s(0),g(votingDeadline), l(l4), l(l3), l(l0), timestamp))

jump6680(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block6697(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block6680(s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump6680(s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6697(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 6713
	nop(PUSH2)
	call(block6713(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block6705(s(3), s(2), s(1), s(0), g(votingDeadline), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block6713(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block6713(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	call(block2162(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block6717(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2212(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6723(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2255(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6729(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump6729(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6729(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block6742(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump6729(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block6741(s(5), s(4), s(3), s(2), s(1), s(0)))

block6741(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6742(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block6769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6742(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block6768(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6742(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump6742(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6768(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump6769(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block6781(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6769(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block6777(s(4), s(3), s(2), s(1), s(0)))

block6777(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6781(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump6781(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6781(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block6859(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6781(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block6855(s(4), s(3), s(2), s(1), s(0)))

block6855(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block6859(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump6859(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6859(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block7002(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump6859(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block6998(s(4), s(3), s(2), s(1), s(0)))

block6998(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7002(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump7002(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7002(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block7141(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump7002(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block7137(s(4), s(3), s(2), s(1), s(0)))

block7137(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7141(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2384(s(0)))
	nop(JUMP)

block7539(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2407(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7545(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2450(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block7564(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7564(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7564(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7577(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7564(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7576(s(3), s(2), s(1), s(0)))

block7576(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7577(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7604(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7577(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7603(s(4), s(3), s(2), s(1), s(0)))

block7577(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7577(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7603(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7604(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block7652(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7604(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block7611(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

block7604(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7652
	nop(PUSH2)
	call(jump7604(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

block7611(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump7611(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7611(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block7623(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7611(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block7622(s(3), s(2), s(1), s(0)))

block7622(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7623(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump7623(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7623(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block7650(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7623(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block7649(s(4), s(3), s(2), s(1), s(0)))

block7649(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7650(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block7652(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7652(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block7663(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump7652(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block7659(s(2), s(1), s(0)))

block7652(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump7652(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7659(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7663(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7663(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7663(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block7754(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump7663(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block7750(s(2), s(1), s(0)))

block7750(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7754(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump7754(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7754(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block7772(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump7754(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block7767(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7767(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block7772(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7772(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	call(jump7772(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7772(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block7807(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump7772(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block7779(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block7779(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block7807(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump7807(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block7818(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump7807(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block7814(s(2), s(1), s(0)))

block7807(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump7807(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7814(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7818(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 21
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(weiReqFund) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 604800
	nop(PUSH3)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 22
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(votingDeadline) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 24
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(yea) = s(3)
	nop(SSTORE)
	s(3) = 25
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(nay) = s(3)
	nop(SSTORE)
	s(3) = 93720157658062424846682753225579638167677070772725695825547635469129033712185
	nop(PUSH32)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block2521(s(0)))
	nop(JUMP)

block7907(s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 7920
	nop(PUSH2)
	s(8) = 19561
	nop(PUSH2)
	call(block19561(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

jump7920(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block7936(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7920(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block7935(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 4
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump7920(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7935(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7936(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block7963(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7936(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block7962(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7936(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 8
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump7936(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7962(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7963(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 8011
	nop(PUSH2)
	call(jump7963(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMPI)

jump7963(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 1 )
	call(block8011(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7963(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 1 )
	call(block7970(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7970(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(12), s(11))
	call(block7982(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7970(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(12), s(11))
	call(block7981(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7970(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(POP)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(10)
	nop(DUP2)
	call(jump7970(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7981(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7982(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(13), s(12))
	call(block8009(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump7982(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(13), s(12))
	call(block8008(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7982(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(11) = 8
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(state)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	call(jump7982(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8008(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8009(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	call(block8011(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

block8011(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	call(jump8011(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8011(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(10), 0)
	call(block8022(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump8011(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(10), 0)
	call(block8018(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8018(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump8022(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	gt(s(11), s(10))
	call(block8106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))

jump8022(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	leq(s(11), s(10))
	call(block8102(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8022(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = 28
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump8022(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8102(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump8106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	eq(s(11), 0)
	call(block8193(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	neq(s(11), 0)
	call(block8121(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = timestamp
	nop(TIMESTAMP)
	s(10) = lt(s(11), s(10))
	nop(LT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump8106(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8121(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	call(block8193(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8193(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump8193(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8193(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8204(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8193(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8200(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8200(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block8204(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block8205(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8205(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(11), 0)
	call(block8225(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8205(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(11), 0)
	call(block8216(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8205(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(11) = s(10)
	nop(DUP1)
	call(jump8205(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8216(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	call(block8225(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8225(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump8225(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8225(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8733(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8225(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8231(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8231(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block8534(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

jump8231(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8512(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8231(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = s(5)
	nop(DUP5)
	s(11) = 7
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 6
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 64
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 64
	nop(PUSH1)
	l(l0) = s(12)
	nop(MSTORE)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(12)
	nop(DUP2)
	l(l5) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(4)
	nop(SLOAD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l5)
	nop(MLOAD)
	call(jump8231(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8512(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 8553
	nop(PUSH2)
	call(block8553(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block8534(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 5
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block8553(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))

block8553(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 7
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 6
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 255
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 1
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 255
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(3)
	s(3) = s(10)
	s(10) = s(11)
	nop(SWAP7)
	nop(POP)
	s(10) = 8205
	nop(PUSH2)
	call(block8205(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

jump8733(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block8755(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8733(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block8747(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block8733(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump8733(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8747(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(4)
	s(4) = s(10)
	s(10) = s(11)
	nop(SWAP6)
	nop(POP)
	s(10) = 9385
	nop(PUSH2)
	call(block9385(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block8755(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 5
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = gt(s(11), s(10))
	nop(GT)
	s(11) = s(4)
	s(4) = s(10)
	s(10) = s(11)
	nop(SWAP6)
	nop(POP)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 0
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 28
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = 8863
	nop(PUSH2)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 19591
	nop(PUSH2)
	call(block19591(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block8863(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 4
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = 5
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(10) = s(4)
	nop(DUP6)
	call(jump8863(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8863(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block9302(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump8863(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block8904(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8904(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	geq(s(11), s(10))
	call(block9046(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump8904(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	lt(s(11), s(10))
	call(block9042(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8904(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(2)
	nop(DUP12)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump8904(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9042(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block9046(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l2) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l5) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	call(block9302(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block9302(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 43914847731435872452144301988971020425315410636401833309475128477242234799342
	nop(PUSH32)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(16) = s(14)
	nop(DUP2)
	l(l5) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG2)
	call(block9385(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block9385(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2598(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump9396(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block9408(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9396(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block9407(s(3), s(2), s(1), s(0)))

block9396(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump9396(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9407(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9408(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump9408(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9408(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block9435(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9408(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block9434(s(4), s(3), s(2), s(1), s(0)))

block9434(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump9435(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block9447(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9435(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block9443(s(2), s(1), s(0)))

block9435(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump9435(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9443(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9447(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9447(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9447(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block9519(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9447(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block9515(s(2), s(1), s(0)))

block9515(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9519(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump9519(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9519(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block9535(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9519(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block9531(s(2), s(1), s(0)))

block9531(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9535(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	call(jump9535(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9535(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(4), s(3))
	call(block9613(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump9535(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(4), s(3))
	call(block9609(s(2), s(1), s(0)))

block9609(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump9613(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block9919(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))

jump9613(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block9915(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9613(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 20
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l8) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump9613(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l8), l(l7), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9915(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

block9919(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump9919(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block9939(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller))

jump9919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block9930(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block9930(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block9939(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block2667(s(0)))
	nop(JUMP)

block10081(s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10081(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10081(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	leq(s(7), s(6))
	call(block10099(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump10081(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	gt(s(7), s(6))
	call(block10098(s(5), s(4), s(3), s(2), s(1), s(0)))

block10098(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10099(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10099(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10099(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	leq(s(8), s(7))
	call(block10126(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump10099(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	gt(s(8), s(7))
	call(block10125(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10125(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10126(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	eq(s(6), s(5))
	call(block10138(s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump10126(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	neq(s(6), s(5))
	call(block10134(s(4), s(3), s(2), s(1), s(0)))

block10126(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	call(jump10126(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10134(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump10138(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	neq(s(7), 0)
	call(block10262(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump10138(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	eq(s(7), 0)
	call(block10261(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10138(s(4), s(3), s(2), s(1), s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = number
	nop(NUMBER)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(5) = blockhash_0
	nop(BLOCKHASH)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = caller
	nop(CALLER)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 79228162514264337593543950336
	nop(PUSH13)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 20
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l9) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 65536
	nop(PUSH3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	nop(DUP2)
	call(jump10138(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10261(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10262(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = s(6)%s(5)
	nop(MOD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 65535
	nop(PUSH2)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = 29
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 65535
	nop(PUSH2)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 65535
	nop(PUSH2)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(7) = l(l4)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2690(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block10406(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 10416
	nop(PUSH2)
	s(5) = 19663
	nop(PUSH2)
	call(block19663(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

jump10416(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block10429(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10416(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block10428(s(5), s(4), s(3), s(2), s(1), s(0)))

block10416(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10416(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10428(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10429(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10429(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10429(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block10456(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10429(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block10455(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10455(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10456(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 10505
	nop(PUSH2)
	call(jump10456(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump10456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block10505(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10456(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block10463(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block10476(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10463(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block10475(s(5), s(4), s(3), s(2), s(1), s(0)))

block10463(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10463(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10475(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10476(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10476(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10476(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block10503(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10476(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block10502(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10502(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10503(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block10505(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block10505(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump10505(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10505(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(5), 0)
	call(block10516(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump10505(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(5), 0)
	call(block10512(s(4), s(3), s(2), s(1), s(0)))

block10512(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump10516(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block10536(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10516(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block10528(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block10516(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(5) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 10536
	nop(PUSH2)
	call(jump10516(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

block10528(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block10536(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10536(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block10547(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10536(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block10543(s(4), s(3), s(2), s(1), s(0)))

block10536(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump10536(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10543(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block10547(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	call(jump10547(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10547(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	geq(s(6), s(5))
	call(block11062(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump10547(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	lt(s(6), s(5))
	call(block10560(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

jump10560(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block10578(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

jump10560(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block10571(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block10560(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump10560(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10571(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block10578(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block10578(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump10578(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10578(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block10917(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))

jump10578(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block10584(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))

block10584(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0))=>
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfInvestors) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(3)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(4)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 10560
	nop(PUSH2)
	call(block10560(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l6), l(l5), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10917(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump10917(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10917(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	leq(s(6), s(5))
	call(block10933(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10917(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	gt(s(6), s(5))
	call(block10929(s(4), s(3), s(2), s(1), s(0)))

block10929(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 11926
	nop(PUSH2)
	call(block11926(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump10933(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(7), s(6))
	call(block10946(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10933(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(7), s(6))
	call(block10945(s(5), s(4), s(3), s(2), s(1), s(0)))

block10933(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10933(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10945(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10946(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump10946(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(8), s(7))
	call(block10973(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(8), s(7))
	call(block10972(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10972(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10973(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	neq(s(6), s(5))
	call(block11020(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10973(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	eq(s(6), s(5))
	call(block10980(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

block10973(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(jump10973(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10980(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11010(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump10980(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11009(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10980(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump10980(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11009(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11010(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 11057
	nop(PUSH2)
	call(block11057(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

jump11020(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11051(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump11020(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11050(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11020(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11020(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11050(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11051(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block11057(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block11057(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 11841
	nop(PUSH2)
	call(block11841(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

block11062(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block11063(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block11063(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump11063(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11063(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block11081(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11063(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block11074(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block11074(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block11081(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block11081(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump11081(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11081(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block11306(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11081(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block11087(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block11087(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(numberOfInvestors) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 11063
	nop(PUSH2)
	call(block11063(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block11306(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump11306(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(6), s(5))
	call(block11322(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(6), s(5))
	call(block11318(s(4), s(3), s(2), s(1), s(0)))

block11318(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 11926
	nop(PUSH2)
	call(block11926(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump11322(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block11335(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11322(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block11334(s(5), s(4), s(3), s(2), s(1), s(0)))

block11322(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump11322(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11334(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11335(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block11362(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11335(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block11361(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11335(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump11335(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11361(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11362(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), s(5))
	call(block11530(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump11362(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), s(5))
	call(block11369(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))

block11362(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump11362(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11369(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump11369(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11369(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block11489(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump11369(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block11485(s(4), s(3), s(2), s(1), s(0)))

block11485(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block11489(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11489(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11489(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11520(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump11489(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11519(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11519(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11520(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 11840
	nop(PUSH2)
	call(block11840(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

jump11530(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block11614(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump11530(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block11613(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11530(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = 1500000000000000000000000
	nop(PUSH11)
	s(9) = s(7)
	nop(DUP2)
	call(jump11530(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11613(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11614(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block11652(s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump11614(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block11648(s(4), s(3), s(2), s(1), s(0)))

block11614(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump11614(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11648(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block11652(s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump11652(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11652(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump11652(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block11668(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11668(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump11669(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block11787(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), l(l5), l(l0)))

jump11669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block11786(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11786(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11787(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 4
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11787(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11787(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11834(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump11787(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11833(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11833(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11834(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block11840(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block11840(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block11841(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block11841(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11841(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11841(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block11906(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump11841(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block11905(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11905(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11906(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	call(block11926(s(4),s(3),s(2),s(1),s(0)))

block11926(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2763(s(0)))
	nop(JUMP)

jump11931(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block12011(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump11931(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block12007(s(3), s(2), s(1), s(0)))

block11931(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump11931(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12007(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump12011(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block12024(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12011(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block12023(s(4), s(3), s(2), s(1), s(0)))

block12011(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12011(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12023(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12024(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12024(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12024(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block12051(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12024(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block12050(s(5), s(4), s(3), s(2), s(1), s(0)))

block12050(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12051(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), 1 )
	call(block12099(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12051(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), 1 )
	call(block12058(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block12051(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 12099
	nop(PUSH2)
	call(jump12051(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMPI)

jump12058(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block12070(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12058(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block12069(s(4), s(3), s(2), s(1), s(0)))

block12058(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12058(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12069(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12070(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block12097(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12070(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block12096(s(5), s(4), s(3), s(2), s(1), s(0)))

block12070(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12070(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12096(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12097(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block12099(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block12099(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump12099(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12099(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(4), 0)
	call(block12110(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12099(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(4), 0)
	call(block12106(s(3), s(2), s(1), s(0)))

block12106(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump12110(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block12209(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump12110(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block12205(s(3), s(2), s(1), s(0)))

block12110(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(jump12110(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12205(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump12209(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block12225(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump12209(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block12221(s(3), s(2), s(1), s(0)))

block12209(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump12209(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12221(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block12225(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 23
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	nop(POP)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l4)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2810(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block12572(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(standard)
	s(7) = g(standard)
	call(jump12572(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12572(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block12722(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12572(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block12652(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

jump12652(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block12679(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump12652(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block12660(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l0)))

block12652(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump12652(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block12660(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 12722
	nop(PUSH2)
	call(block12722(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12679(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block12693(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block12693(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump12693(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump12693(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block12693(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump12693(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block12713(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block12713(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block12722(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block12722(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2853(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12730(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 65535
	nop(PUSH2)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block3041(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12780(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 18
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3175(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12817(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block3262(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block12853(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3356(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump12877(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	eq(s(4), s(3))
	call(block12968(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump12877(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	neq(s(4), s(3))
	call(block12964(s(2), s(1), s(0)))

block12877(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12877(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12964(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12968(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	eq(s(4), s(3))
	call(block13039(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump12968(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	neq(s(4), s(3))
	call(block13035(s(2), s(1), s(0)))

block12968(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12968(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13035(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13039(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgent)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgent) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump13039(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	leq(s(9), s(8))
	call(block13135(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump13039(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	gt(s(9), s(8))
	call(block13134(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13134(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13135(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(state) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3443(s(0)))
	nop(JUMP)

block13143(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump13143(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13143(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block13158(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump13143(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block13157(s(3), s(2), s(1), s(0)))

block13157(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13158(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13158(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13158(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block13185(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump13158(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block13184(s(4), s(3), s(2), s(1), s(0)))

block13184(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13185(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block13234(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump13185(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block13192(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

block13185(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 13234
	nop(PUSH2)
	call(jump13185(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump13192(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block13205(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump13192(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block13204(s(3), s(2), s(1), s(0)))

block13192(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump13192(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13204(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13205(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block13232(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump13205(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block13231(s(4), s(3), s(2), s(1), s(0)))

block13205(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump13205(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13231(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13232(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block13234(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump13234(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block13245(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump13234(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block13241(s(2), s(1), s(0)))

block13234(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump13234(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13241(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13245(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump13245(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13245(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block13264(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump13245(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block13256(s(2), s(1), s(0), l(l3), l(l0)))

block13256(s(2), s(1), s(0), l(l3), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 13272
	nop(PUSH2)
	call(block13272(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13264(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 10
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block13272(s(2),s(1),s(0), l(l3), l(l0)))

block13272(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3466(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13275(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3509(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13281(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3552(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13319(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(4)
	nop(DUP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(9)
	nop(DUP1)
	call(jump13319(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13319(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block13497(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump13319(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block13427(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump13427(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block13454(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump13427(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block13435(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block13427(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = 31
	nop(PUSH1)
	call(jump13427(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13435(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(10) = 256
	nop(PUSH2)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(7)
	nop(DUP4)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 13497
	nop(PUSH2)
	call(block13497(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block13454(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block13468(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

jump13468(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(11), s(10))
	call(block13468(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump13468(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(11), s(10))
	call(block13488(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block13468(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	call(jump13468(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block13488(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 31
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	call(block13497(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block13497(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(2)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(1)
	nop(DUP7)
	call(block3683(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block13531(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3862(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13569(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3949(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13606(s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13606(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13606(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	eq(s(4), s(3))
	call(block13697(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13606(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(owner), caller)=>
	neq(s(4), s(3))
	call(block13693(s(2), s(1), s(0)))

block13693(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13697(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump13697(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13697(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	geq(s(4), s(3))
	call(block13713(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13697(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	lt(s(4), s(3))
	call(block13709(s(2), s(1), s(0)))

block13709(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13713(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	call(jump13713(s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13713(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	neq(s(5), 0)
	call(block13725(s(4), s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13713(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	eq(s(5), 0)
	call(block13724(s(4), s(3), s(2), s(1), s(0)))

block13724(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13725(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	neq(s(4), s(3))
	call(block13752(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

jump13725(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	eq(s(4), s(3))
	call(block13744(s(2), s(1), s(0),g(teamFee), g(priceInTokens)))

block13725(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 32
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(teamFee) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	s(4) = g(teamFee)
	nop(SLOAD)
	call(jump13725(s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13744(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	s(3) = 1
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(teamFee) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block13752(s(2),s(1),s(0),g(teamFee), g(priceInTokens)))

block13752(s(2), s(1), s(0), g(teamFee), g(priceInTokens))=>
	nop(JUMPDEST)
	s(3) = 32
	nop(PUSH1)
	s(3) = g(teamFee)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = 31
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(priceInTokens) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4058(s(0)))
	nop(JUMP)

block13766(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4081(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13772(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(symbol)
	s(7) = g(symbol)
	call(jump13772(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13772(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block13922(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump13772(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block13852(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

block13852(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump13852(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13852(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block13879(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump13852(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block13860(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l0)))

block13860(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 13922
	nop(PUSH2)
	call(block13922(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block13879(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block13893(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block13893(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump13893(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump13893(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block13893(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump13893(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block13913(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block13913(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block13922(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block13922(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block4124(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block13930(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4268(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13936(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4311(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13942(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 30
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 65535
	nop(PUSH2)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(3)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	call(block4380(s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

block14036(s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 96
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump14036(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14036(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(8), s(7))
	call(block14055(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14036(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(8), s(7))
	call(block14054(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14054(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14055(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block14082(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14055(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block14081(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14055(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14055(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14081(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14082(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(7), 1 )
	call(block14130(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14082(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(7), 1 )
	call(block14089(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block14082(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 14130
	nop(PUSH2)
	call(jump14082(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMPI)

jump14089(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(8), s(7))
	call(block14101(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14089(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(8), s(7))
	call(block14100(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14089(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	nop(DUP2)
	call(jump14089(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14100(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14101(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14101(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14101(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(9), s(8))
	call(block14128(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14101(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(9), s(8))
	call(block14127(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14127(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14128(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block14130(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block14130(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump14130(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14130(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(6), 0)
	call(block14141(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14130(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(6), 0)
	call(block14137(s(5), s(4), s(3), s(2), s(1), s(0)))

block14137(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14141(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(6)
	nop(DUP1)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(10)
	nop(DUP1)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(11)
	nop(DUP1)
	call(jump14141(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14141(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	eq(s(12), 0)
	call(block14424(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14141(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	neq(s(12), 0)
	call(block14354(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block14354(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = 31
	nop(PUSH1)
	call(jump14354(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump14354(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	lt(s(13), s(12))
	call(block14381(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14354(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	geq(s(13), s(12))
	call(block14362(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block14362(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = 256
	nop(PUSH2)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(9)
	nop(DUP4)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = 14424
	nop(PUSH2)
	call(block14424(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(JUMP)

block14381(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 0
	nop(PUSH1)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block14395(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14395(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block14395(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14395(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block14415(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

block14395(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	call(jump14395(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block14415(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	call(block14424(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block14515(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))

jump14424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block14507(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block14424(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = 28
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump14424(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14507(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 14587
	nop(PUSH2)
	call(block14587(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block14515(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = 28
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block14587(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block14587(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	call(block4540(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump14594(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block14685(s(2), s(1), s(0),g(owner)))

jump14594(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block14681(s(2), s(1), s(0)))

block14594(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14594(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14681(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump14685(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block14723(s(2), s(1), s(0),g(owner)))

jump14685(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block14719(s(2), s(1), s(0)))

block14685(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14685(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14719(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block14723(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4742(s(0)))
	nop(JUMP)

block14790(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump14790(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14790(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block14803(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump14790(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block14802(s(4), s(3), s(2), s(1), s(0)))

block14802(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14803(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block14830(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump14803(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block14829(s(5), s(4), s(3), s(2), s(1), s(0)))

block14803(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump14803(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14829(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump14830(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block14842(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump14830(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block14838(s(3), s(2), s(1), s(0)))

block14830(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump14830(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14838(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump14842(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block14920(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump14842(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block14916(s(3), s(2), s(1), s(0)))

block14842(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump14842(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14916(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump14920(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block15063(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump14920(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block15059(s(3), s(2), s(1), s(0)))

block14920(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump14920(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15059(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15063(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4819(s(0)))
	nop(JUMP)

block15322(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 15333
	nop(PUSH2)
	s(6) = 19561
	nop(PUSH2)
	call(block19561_0(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

jump15333(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block15349(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15333(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block15348(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15333(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15333(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15348(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15349(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15349(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15349(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block15376(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15349(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block15375(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15375(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15376(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 15424
	nop(PUSH2)
	call(jump15376(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump15376(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), 1 )
	call(block15424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15376(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), 1 )
	call(block15383(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block15383(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump15383(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15383(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block15395(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15383(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block15394(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15394(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15395(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump15395(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15395(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block15422(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15395(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block15421(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15421(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15422(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block15424(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block15435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump15424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block15431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15424(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump15424(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15431(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block15435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump15435(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15435(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block15452(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump15435(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block15448(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15448(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block15452(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block15453(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15453(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump15453(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15453(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block15471(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump15453(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block15464(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15464(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block15471(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15471(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15471(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15471(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump15471(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block15477(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15477(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 64
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l5)
	nop(MLOAD)
	call(jump15477(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15477(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block15772(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

jump15477(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block15752(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15752(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 24
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 15789
	nop(PUSH2)
	call(block15789(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block15772(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block15789(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))

block15789(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 15453
	nop(PUSH2)
	call(block15453(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block15963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump15963(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15963(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block15983(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump15963(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block15975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block15975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 16371
	nop(PUSH2)
	call(block16371(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block15983(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 25
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump15983(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15983(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block16311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump15983(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block16022(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump16022(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block16188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l5), l(l0), address, balance))

jump16022(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block16087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l5), l(l0)))

block16022(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 19
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(migrationAgent)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump16022(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	neq(s(8), 0)
	call(block16183(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump16087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	eq(s(8), 0)
	call(block16179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump16087(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l5), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16179(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block16183(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 16310
	nop(PUSH2)
	call(block16310(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump16188(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block16309(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump16188(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block16305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16188(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 19
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump16188(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block16309(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block16310(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block16310(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block16311(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block16311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block16371(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block16371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4864(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump16380(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block16459(s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16380(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block16455(s(3), s(2), s(1), s(0)))

block16380(s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump16380(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16455(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(6), s(5))
	call(block16472(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16459(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(6), s(5))
	call(block16471(s(4), s(3), s(2), s(1), s(0)))

block16459(s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16459(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16471(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(7), s(6))
	call(block16499(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16472(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(7), s(6))
	call(block16498(s(5), s(4), s(3), s(2), s(1), s(0)))

block16472(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16472(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16498(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), 1 )
	call(block16547(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), 1 )
	call(block16506(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

block16499(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 16547
	nop(PUSH2)
	call(jump16499(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMPI)

jump16506(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(6), s(5))
	call(block16518(s(4), s(3), s(2), s(1), s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16506(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(6), s(5))
	call(block16517(s(4), s(3), s(2), s(1), s(0)))

block16506(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump16506(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16517(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16518(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(7), s(6))
	call(block16545(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16518(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(7), s(6))
	call(block16544(s(5), s(4), s(3), s(2), s(1), s(0)))

block16518(s(4), s(3), s(2), s(1), s(0), g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump16518(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16544(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16545(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block16547(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16547(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(4), 0)
	call(block16558(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump16547(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(4), 0)
	call(block16554(s(3), s(2), s(1), s(0)))

block16547(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump16547(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16554(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16558(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump16558(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16558(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), 0)
	call(block16637(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16558(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), 0)
	call(block16569(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

block16569(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block16637(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16637(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(4), 0)
	call(block16648(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16637(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(4), 0)
	call(block16644(s(3), s(2), s(1), s(0)))

block16637(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump16637(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16644(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16648(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1000
	nop(PUSH2)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(2)
	nop(DUP3)
	call(jump16648(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16648(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block16730(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16648(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block16726(s(3), s(2), s(1), s(0)))

block16726(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16730(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump16730(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16730(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block16811(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump16730(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block16807(s(3), s(2), s(1), s(0)))

block16807(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16811(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 16968
	nop(PUSH2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 19689
	nop(PUSH2)
	call(block19689(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block16968(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 604800
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 28
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 108887088492223194580205863093065607007830925866203196929080134293453516956571
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	nop(DUP3)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(13) = l(l3)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l3)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 0
	nop(PUSH1)
	call(block17146(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block17146(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump17146(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17146(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(18), s(17))
	call(block17173(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump17146(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(18), s(17))
	call(block17155(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block17155(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(17) = l(l4)
	nop(MLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)+s(18)
	nop(ADD)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 17146
	nop(PUSH2)
	call(block17146(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump17173(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(12), 0)
	call(block17218(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump17173(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(12), 0)
	call(block17193(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block17173(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 31
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(11)
	nop(DUP1)
	call(jump17173(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17193(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block17218(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block17218(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	call(block5003(s(0)))
	nop(JUMP)

jump17236(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block17327(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17236(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block17323(s(3), s(2), s(1), s(0)))

block17236(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump17236(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17323(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block17327(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump17327(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block17340(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block17339(s(4), s(3), s(2), s(1), s(0)))

block17339(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17340(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block17367(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17340(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block17366(s(5), s(4), s(3), s(2), s(1), s(0)))

block17340(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17340(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17366(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17367(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 17416
	nop(PUSH2)
	call(jump17367(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump17367(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block17416(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17367(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block17374(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17374(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block17387(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17374(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block17386(s(4), s(3), s(2), s(1), s(0)))

block17374(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump17374(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17386(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17387(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17387(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17387(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block17414(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17387(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block17413(s(5), s(4), s(3), s(2), s(1), s(0)))

block17413(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17414(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block17416(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17416(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block17427(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump17416(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block17423(s(3), s(2), s(1), s(0)))

block17416(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump17416(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17423(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block17427(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 9
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleOwner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(etherPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(numberOfInvestors) = s(4)
	nop(SSTORE)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump17427(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17427(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block17531(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump17427(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block17530(s(4), s(3), s(2), s(1), s(0)))

block17530(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17531(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block17558(s(5), s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump17531(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block17557(s(5), s(4), s(3), s(2), s(1), s(0)))

block17531(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump17531(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17557(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17558(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump17558(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17558(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	neq(s(5), s(4))
	call(block17637(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump17558(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	eq(s(5), s(4))
	call(block17565(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

block17565(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	s(4) = 1209600
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17565(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17565(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block17607(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump17565(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block17606(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17606(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17607(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 17706
	nop(PUSH2)
	call(block17706(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

jump17637(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block17680(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump17637(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block17679(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17637(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 2592000
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17637(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17679(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17680(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5200000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3600000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block17706(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

jump17706(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(10), s(9))
	call(block17771(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump17706(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(10), s(9))
	call(block17770(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17706(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump17706(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17770(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17771(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block5080(s(0)))
	nop(JUMP)

block17794(s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump17794(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17794(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block17876(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17794(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block17872(s(5), s(4), s(3), s(2), s(1), s(0)))

block17872(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump17876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(8), s(7))
	call(block17889(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(8), s(7))
	call(block17888(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17876(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump17876(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17888(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17889(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(9), s(8))
	call(block17916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17889(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(9), s(8))
	call(block17915(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17889(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump17889(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17915(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17916(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 17964
	nop(PUSH2)
	call(jump17916(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMPI)

jump17916(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), 1 )
	call(block17964(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17916(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), 1 )
	call(block17923(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17923(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(8), s(7))
	call(block17935(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17923(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(8), s(7))
	call(block17934(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17923(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	nop(DUP2)
	call(jump17923(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17934(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17935(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(9), s(8))
	call(block17962(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17935(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(9), s(8))
	call(block17961(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17935(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump17935(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17961(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17962(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block17964(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block17964(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump17964(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17964(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block17975(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17964(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block17971(s(5), s(4), s(3), s(2), s(1), s(0)))

block17971(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump17975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block18059(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump17975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block18055(s(5), s(4), s(3), s(2), s(1), s(0)))

block17975(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump17975(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18055(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block18059(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 6
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	call(jump18059(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18059(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block18160(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump18059(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block18156(s(5), s(4), s(3), s(2), s(1), s(0)))

block18156(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump18160(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block18178(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump18160(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block18174(s(5), s(4), s(3), s(2), s(1), s(0)))

block18160(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump18160(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18174(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block18178(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 7
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(3)
	nop(DUP5)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 6
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l4)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(3)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 108608132442831941486207068684578916062758046186561762425641249979049254353392
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5159(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block18556(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block5202(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump18575(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(6), s(5))
	call(block18588(s(4), s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump18575(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(6), s(5))
	call(block18587(s(4), s(3), s(2), s(1), s(0)))

block18575(s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump18575(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18587(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump18588(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(7), s(6))
	call(block18615(s(5), s(4), s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump18588(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(7), s(6))
	call(block18614(s(5), s(4), s(3), s(2), s(1), s(0)))

block18588(s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump18588(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18614(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18615(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump18615(s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18615(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block18627(s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump18615(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block18623(s(3), s(2), s(1), s(0)))

block18623(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump18627(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block18709(s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump18627(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block18705(s(3), s(2), s(1), s(0)))

block18627(s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump18627(s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18705(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump18709(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(5), s(4))
	call(block18811(s(3), s(2), s(1), s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump18709(s(5), s(4), s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(5), s(4))
	call(block18807(s(3), s(2), s(1), s(0)))

block18709(s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump18709(s(5),s(4),s(3),s(2),s(1),s(0),g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18807(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block18811(s(3), s(2), s(1), s(0), g(teamFee), g(priceInTokens), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 18856
	nop(PUSH2)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 32
	nop(PUSH1)
	s(6) = g(teamFee)
	nop(SLOAD)
	s(7) = 14790
	nop(PUSH2)
	call(block14790_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block18856(s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 18868
	nop(PUSH2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 31
	nop(PUSH1)
	s(6) = g(priceInTokens)
	nop(SLOAD)
	s(7) = 14790
	nop(PUSH2)
	call(block14790_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block18868(s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 128
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 29
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = s(5)
	nop(DUP2)
	l(l5) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	nop(POP)
	s(5) = 30
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 65535
	nop(PUSH2)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 65535
	nop(PUSH2)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l4)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l5)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 96
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l6)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = 29
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 65535
	nop(PUSH2)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5299(s(0)))
	nop(JUMP)

block19249(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 26
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block5366(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block19311(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump19311(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block19326(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0)))

jump19311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block19325(s(5), s(4), s(3), s(2), s(1), s(0)))

block19325(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block19326(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump19326(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block19353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump19326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block19352(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19352(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump19353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block19365(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump19353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block19361(s(4), s(3), s(2), s(1), s(0)))

block19353(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump19353(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19361(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block19365(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5500(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block19498(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5543(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block19504(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block5586(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block19510(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 27
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block5651(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block19561(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, timestamp)=>
	nop(JUMPDEST)
	s(8) = 64
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block7920(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l2), l(l1), l(l0), address, timestamp))
	nop(JUMP)

block19591(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	s(14) = s(13)
	nop(DUP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 1
	nop(PUSH1)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 2
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 31
	nop(PUSH1)
	call(jump19591(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump19591(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	lt(s(16), s(15))
	call(block19629(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump19591(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	geq(s(16), s(15))
	call(block19624(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

block19624(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(POP)
	s(14) = 19660
	nop(PUSH2)
	call(block19660(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block19629(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(15) = 31
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 19659
	nop(PUSH2)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 19817
	nop(PUSH2)
	call(block19817(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block19659(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(block19660(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))

block19660(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	call(block8863(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block19663(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block10416(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

jump19689(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	lt(s(11), s(10))
	call(block19754(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump19689(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	geq(s(11), s(10))
	call(block19738(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19689(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 31
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 31
	nop(PUSH1)
	call(jump19689(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block19738(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = 255
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(5)
	nop(DUP6)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 19800
	nop(PUSH2)
	call(block19800(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

jump19754(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(10), 0)
	call(block19800(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump19754(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(10), 0)
	call(block19769(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19754(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(10)
	nop(DUP1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(5)
	nop(DUP6)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	nop(DUP3)
	call(jump19754(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19769(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(block19772(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19772(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	call(jump19772(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19772(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(11), s(10))
	call(block19799(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump19772(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(11), s(10))
	call(block19781(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19781(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = s(7)
	nop(DUP3)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 19772
	nop(PUSH2)
	call(block19772(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block19799(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(block19800(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19800(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 19813
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 19817
	nop(PUSH2)
	call(block19817_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block19813(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block16968(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block19817(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(16) = 19851
	nop(PUSH2)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	call(block19823(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))

block19823(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	call(jump19823(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19823(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	leq(s(18), s(17))
	call(block19847(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

jump19823(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	gt(s(18), s(17))
	call(block19832(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address))

block19832(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	gs(1) = s(19)
	gs(2) = s(18)
	nop(SSTORE)
	nop(POP)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 19823
	nop(PUSH2)
	call(block19823(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block19847(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	call(block19851(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block19851(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block19659(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l1), l(l0), address))
	nop(JUMP)

block1056_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block1065_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 7
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1097
	nop(PUSH2)
	call(block1097_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block1080_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedUSD)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1097_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1097_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump1097_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1097_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1244_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1097_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1240_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1240_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1244_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1259_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1244_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1255_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1244_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump1244_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1255_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1259_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(7), s(6))
	call(block1436_0(s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1259_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(7), s(6))
	call(block1338_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1259_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 11
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump1259_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1338_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfInvestors)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1436_0(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1436_0(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1566_0(s(5),s(4),s(3),s(2),s(1),s(0)))

jump14790_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(9), s(8))
	call(block14803_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump14790_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(9), s(8))
	call(block14802_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14790_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14790_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14790_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(9), s(8))
	call(block14803_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump14790_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(9), s(8))
	call(block14802_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14790_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump14790_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14802_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14802_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14803_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14803_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14803_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	leq(s(10), s(9))
	call(block14830_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump14803_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	gt(s(10), s(9))
	call(block14829_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14803_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(state)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump14803_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14803_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(10), s(9))
	call(block14830_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump14803_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(10), s(9))
	call(block14829_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14829_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14829_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14830_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump14830_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14830_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	eq(s(8), s(7))
	call(block14842_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump14830_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	neq(s(8), s(7))
	call(block14838_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14830_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump14830_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14830_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(8), s(7))
	call(block14842_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump14830_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(8), s(7))
	call(block14838_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14838_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14838_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14842_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump14842_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14842_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	geq(s(8), s(7))
	call(block14920_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump14842_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	lt(s(8), s(7))
	call(block14916_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14842_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump14842_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14842_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	geq(s(8), s(7))
	call(block14920_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump14842_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	lt(s(8), s(7))
	call(block14916_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14916_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14916_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block14920_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump14920_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14920_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	geq(s(8), s(7))
	call(block15063_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))

jump14920_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	lt(s(8), s(7))
	call(block15059_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump14920_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	geq(s(8), s(7))
	call(block15063_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump14920_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	lt(s(8), s(7))
	call(block15059_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14920_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump14920_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15059_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block15059_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block15063_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block18856(s(3),s(2),s(1),s(0),g(priceInTokens), g(state), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, timestamp))
	nop(JUMP)

block15063_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block18868(s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block1566_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block19561_0(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block15333(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l6), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block19817_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(9) = 19851
	nop(PUSH2)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block19823_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump19823_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(11), s(10))
	call(block19847_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump19823_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(11), s(10))
	call(block19832_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block19823_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	call(jump19823_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19832_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 19823
	nop(PUSH2)
	call(block19823_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block19847_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block19851_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block19851_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block19813(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

jump637_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block658_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump637_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block657_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block637_0(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump637_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block657_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block658_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump658_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump658_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block685_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump658_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block684_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block684_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump685_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), 1 )
	call(block734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump685_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), 1 )
	call(block692_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block685_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 734
	nop(PUSH2)
	call(jump685_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

block692_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump692_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump692_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block705_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump692_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block704_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block704_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump705_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block732_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump705_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block731_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block705_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump705_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block731_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block732_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block734_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block745_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block741_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block741_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block745_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump745_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump745_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block762_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump745_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block761_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block761_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block762_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump762_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump762_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump762_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block788_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block788_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block804_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block796_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block789_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump789_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block796_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 125
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 906
	nop(PUSH2)
	call(block906_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump804_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block817_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump804_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block816_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block804_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump804_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block816_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block817_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump817_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump817_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump817_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block843_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block843_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block905_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block851_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block844_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump844_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block874_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump851_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block866_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block851_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(6) = 86400
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump851_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block866_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 115
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 904
	nop(PUSH2)
	call(block904_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block874_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 604800
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump874_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump874_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block898_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump874_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block890_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block890_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 110
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 903
	nop(PUSH2)
	call(block903_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block898_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 100
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	call(block903_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block903_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block904_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block904_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block905_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block905_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block906_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump906_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block1566_0(s(5), s(4), s(3), s(2), s(1), s(0)))

jump906_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block916_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block906_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	nop(DUP6)
	call(jump906_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block916_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump916_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump916_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block941_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump916_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block940_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block940_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump941_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block1080_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump941_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block959_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block941_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump941_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump959_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block990_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump959_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block989_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block959_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(7) = 5
	nop(PUSH1)
	s(7) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = 1000000000000000000
	nop(PUSH8)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump959_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block989_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump990_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block1065_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump990_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block1056_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block990_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump990_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

