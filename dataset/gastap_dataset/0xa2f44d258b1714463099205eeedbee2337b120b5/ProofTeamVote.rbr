block0(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	lt(s(1), s(0))
	call(block527(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump0(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	geq(s(1), s(0))
	call(block13(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

jump13(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1463(s(0),g(votingDeadline), l(l3), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block65(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block13(g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 57600080
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1506(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block76(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block65(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 86896325
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1615(s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(name), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block87(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block87(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1759(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block98(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block98(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 174662471
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1836(s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump98(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block109(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block109(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 243091725
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1859(s(0),g(numberOfVotes), l(l3), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block120(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

jump120(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1902(s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block131(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block120(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 274359126
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 348895501
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1945(s(0),g(yea), l(l3), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block142(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block142(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block1988(s(0),g(totalSupply), l(l3), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block153(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

jump153(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2031(s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))

jump153(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block164(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block153(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 434608524
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2081(s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block175(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block164(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 452119037
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 536265281
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2124(s(0),g(collectedUSD), l(l3), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block186(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

jump186(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2167(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump186(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block197(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block186(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, from, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2276(s(0),g(weiReqFund), l(l3), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block208(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block197(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 803891477
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2319(s(0),g(decimals), l(l3), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(decimals), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block219(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))

block219(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1026513882
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	eq(s(2), s(1))
	call(block2368(s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))

jump219(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess, weiReqFund)=>
	neq(s(2), s(1))
	call(block230(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

jump230(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2413(s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))

jump230(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block241(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block230(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1162544648
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, extcodesize, gas, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1233546944
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2458(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))

jump241(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, investorsToProcess, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block252(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block252(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1268735128
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2503(s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))

jump252(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, inSupport, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block263(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block263(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2570(s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(standard), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block274(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

jump274(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2714(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump274(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block285(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block274(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1550156133
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1870383550
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2833(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump285(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block296(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

jump296(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block2927(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump296(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block307(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block296(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3014(s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))

jump307(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block318(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block307(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1977810789
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, agent, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3081(s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))

jump318(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block329(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block318(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2049348175
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2066067146
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3124(s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block340(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

jump340(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3167(s(0),g(migrationAgent), l(l3), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block351(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block340(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2200493005
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3254(s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block362(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block351(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2237027717
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3341(s(0),g(owner), l(l3), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block373(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block362(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2510353899
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3428(s(0),g(totalMigrated), l(l3), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(totalMigrated), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block384(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block384(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3471(s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(symbol), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block395(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block395(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2542402010
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3615(s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block406(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

jump406(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3658(s(0),g(etherPrice), l(l3), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block417(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block406(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2653976917
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3701(s(0),g(owner), calldatasize, caller, callvalue, owner))

jump417(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block428(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))

block428(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	eq(s(2), s(1))
	call(block3768(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump428(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, to, value, votesToProcess)=>
	neq(s(2), s(1))
	call(block439(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, votesToProcess))

jump439(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, votesToProcess)=>
	eq(s(2), s(1))
	call(block3845(s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))

jump439(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, votesToProcess)=>
	neq(s(2), s(1))
	call(block450(s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp))

block439(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, votesToProcess)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2884092046
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp, votesToProcess))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3078441078
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3914(s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))

jump450(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block461(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block461(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3991(s(0),g(state), l(l3), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block472(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

jump472(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4048(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump472(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block483(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))

block472(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3636458917
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4150(s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump483(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block494(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block483(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, owner, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3808182813
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4269(s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block505(s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block505(s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3929006498
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4312(s(0),g(nay), l(l3), l(l0), callvalue))

jump505(s(2), s(1), s(0), g(nay), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block516(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block516(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4159689736
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4355(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump516(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block527_0(s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump527(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block548(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump527(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block547(s(5), s(4), s(3), s(2), s(1), s(0)))

block527(g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump527(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block547(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump548(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block575(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump548(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block574(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block548(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump548(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block574(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 1 )
	call(block624(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 1 )
	call(block582(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block575(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 624
	nop(PUSH2)
	call(jump575(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

block582(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump582(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block595(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block594(s(5), s(4), s(3), s(2), s(1), s(0)))

block594(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block595(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump595(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump595(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block622(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump595(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block621(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block621(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block622(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block624(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump624(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block635(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump624(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block631(s(4), s(3), s(2), s(1), s(0)))

block624(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump624(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block631(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block635(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump635(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump635(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block652(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump635(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block651(s(5), s(4), s(3), s(2), s(1), s(0)))

block651(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block652(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump652(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump652(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block679(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump652(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block678(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block678(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block679(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump679(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump679(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block694(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump679(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block686(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block686(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 125
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 796
	nop(PUSH2)
	call(block796(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block694(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump694(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump694(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block707(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump694(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block706(s(5), s(4), s(3), s(2), s(1), s(0)))

block706(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block707(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump707(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump707(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block734(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump707(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block733(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block733(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block795(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump734(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block741(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump741(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block764(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump741(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block756(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block741(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(5) = 86400
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump741(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block756(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 115
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 794
	nop(PUSH2)
	call(block794(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump764(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(6), s(5))
	call(block788(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump764(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(6), s(5))
	call(block780(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block764(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 604800
	nop(PUSH3)
	s(6) = 9
	nop(PUSH1)
	s(6) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = timestamp
	nop(TIMESTAMP)
	call(jump764(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block780(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 110
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	s(5) = 793
	nop(PUSH2)
	call(block793(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block788(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 100
	nop(PUSH1)
	s(6) = s(0)
	s(0) = s(5)
	s(5) = s(6)
	nop(SWAP5)
	nop(POP)
	call(block793(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block793(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block794(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block794(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block795(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block795(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block796(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block1456(s(4), s(3), s(2), s(1), s(0)))

jump796(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block806(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block796(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(0)
	nop(DUP6)
	call(jump796(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block806(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump806(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block831(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block830(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block830(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump831(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(6), s(5))
	call(block970(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump831(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(6), s(5))
	call(block849(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block831(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(collectedUSD)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump831(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block880(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block879(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block849(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 7
	nop(PUSH1)
	s(5) = g(collectedUSD)
	nop(SLOAD)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(5) = g(etherPrice)
	nop(SLOAD)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump849(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block879(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block880(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(1)
	nop(DUP6)
	s(8) = callvalue
	nop(CALLVALUE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump880(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump880(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(6), 0)
	call(block955(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump880(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(6), 0)
	call(block946(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block946(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block955(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 987
	nop(PUSH2)
	call(block987(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block970(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(collectedUSD)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(collectedUSD) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block987(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump987(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1134(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump987(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1130(s(4), s(3), s(2), s(1), s(0)))

block987(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(0)
	nop(DUP6)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump987(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1130(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump1134(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(6), s(5))
	call(block1149(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1134(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(6), s(5))
	call(block1145(s(4), s(3), s(2), s(1), s(0)))

block1134(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	call(jump1134(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1145(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1149(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump1149(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1149(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(6), s(5))
	call(block1326(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1149(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(6), s(5))
	call(block1228(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1228(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(5) = caller
	nop(CALLER)
	s(6) = 12
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(numberOfInvestors)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1326(s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1326(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block1456(s(4),s(3),s(2),s(1),s(0)))

block1456(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block1463(s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1463(s(2),s(1),s(0),g(votingDeadline), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1463(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1475(s(1), s(0),g(votingDeadline), l(l3), l(l0)))

jump1463(s(2), s(1), s(0), g(votingDeadline), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1471(s(1), s(0)))

block1471(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1475(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1484
	nop(PUSH2)
	s(2) = 4464
	nop(PUSH2)
	call(block4464(s(1),s(0),g(votingDeadline), l(l3), l(l0)))
	nop(JUMP)

block1484(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1506(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1506(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1506(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1518(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump1506(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1514(s(1), s(0)))

block1514(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1518(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1549
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4470
	nop(PUSH2)
	call(block4470(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1549(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1615(s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1615(s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1615(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1627(s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

jump1615(s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1623(s(1), s(0)))

block1623(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1627(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1636
	nop(PUSH2)
	s(2) = 4521
	nop(PUSH2)
	call(block4521(s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1636(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1673(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump1673(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block1700(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1673(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block1682(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block1673(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1673(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1682(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1673
	nop(PUSH2)
	call(block1673(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump1700(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1745(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1700(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1720(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1700(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1700(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1720(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1745(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1745(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1759(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1771(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value))

jump1759(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1767(s(1), s(0)))

block1759(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1759(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1767(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1771(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1834
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4679
	nop(PUSH2)
	call(block4679(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block1834(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1836(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block1848(s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump1836(s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block1844(s(1), s(0)))

block1836(s(0), g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1836(s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1844(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1848(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1857
	nop(PUSH2)
	s(2) = 4965
	nop(PUSH2)
	call(block4965(s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block1857(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1859(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1871(s(1), s(0),g(numberOfVotes), l(l3), l(l0)))

jump1859(s(2), s(1), s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1867(s(1), s(0)))

block1859(s(0), g(numberOfVotes), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1859(s(2),s(1),s(0),g(numberOfVotes), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1867(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1871(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1880
	nop(PUSH2)
	s(2) = 5301
	nop(PUSH2)
	call(block5301(s(1),s(0),g(numberOfVotes), l(l3), l(l0)))
	nop(JUMP)

block1880(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1902(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1914(s(1), s(0),g(minimalSuccessUSD), l(l3), l(l0)))

jump1902(s(2), s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1910(s(1), s(0)))

block1902(s(0), g(minimalSuccessUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1902(s(2),s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1910(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1914(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1923
	nop(PUSH2)
	s(2) = 5307
	nop(PUSH2)
	call(block5307(s(1),s(0),g(minimalSuccessUSD), l(l3), l(l0)))
	nop(JUMP)

block1923(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1945(s(0), g(yea), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1945(s(2),s(1),s(0),g(yea), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1945(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1957(s(1), s(0),g(yea), l(l3), l(l0)))

jump1945(s(2), s(1), s(0), g(yea), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1953(s(1), s(0)))

block1953(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1957(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1966
	nop(PUSH2)
	s(2) = 5313
	nop(PUSH2)
	call(block5313(s(1),s(0),g(yea), l(l3), l(l0)))
	nop(JUMP)

block1966(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1988(s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1988(s(2),s(1),s(0),g(totalSupply), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1988(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2000(s(1), s(0),g(totalSupply), l(l3), l(l0)))

jump1988(s(2), s(1), s(0), g(totalSupply), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1996(s(1), s(0)))

block1996(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2000(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2009
	nop(PUSH2)
	s(2) = 5319
	nop(PUSH2)
	call(block5319(s(1),s(0),g(totalSupply), l(l3), l(l0)))
	nop(JUMP)

block2009(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2031(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2043(s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump2031(s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2039(s(1), s(0)))

block2031(s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2031(s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2039(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2043(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2052
	nop(PUSH2)
	s(2) = 5325
	nop(PUSH2)
	call(block5325(s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMP)

block2052(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2081(s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2081(s(2),s(1),s(0),g(numberOfInvestors), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2081(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2093(s(1), s(0),g(numberOfInvestors), l(l3), l(l0)))

jump2081(s(2), s(1), s(0), g(numberOfInvestors), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2089(s(1), s(0)))

block2089(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2093(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2102
	nop(PUSH2)
	s(2) = 5464
	nop(PUSH2)
	call(block5464(s(1),s(0),g(numberOfInvestors), l(l3), l(l0)))
	nop(JUMP)

block2102(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2124(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2136(s(1), s(0),g(collectedUSD), l(l3), l(l0)))

jump2124(s(2), s(1), s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2132(s(1), s(0)))

block2124(s(0), g(collectedUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2124(s(2),s(1),s(0),g(collectedUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2132(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2136(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2145
	nop(PUSH2)
	s(2) = 5470
	nop(PUSH2)
	call(block5470(s(1),s(0),g(collectedUSD), l(l3), l(l0)))
	nop(JUMP)

block2145(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2167(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block2179(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value))

jump2167(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block2175(s(1), s(0)))

block2167(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2167(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2175(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2179(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2274
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 5476
	nop(PUSH2)
	call(block5476(s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2274(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2276(s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2276(s(2),s(1),s(0),g(weiReqFund), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2276(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2288(s(1), s(0),g(weiReqFund), l(l3), l(l0)))

jump2276(s(2), s(1), s(0), g(weiReqFund), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2284(s(1), s(0)))

block2284(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2288(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2297
	nop(PUSH2)
	s(2) = 6286
	nop(PUSH2)
	call(block6286(s(1),s(0),g(weiReqFund), l(l3), l(l0)))
	nop(JUMP)

block2297(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2319(s(0), g(decimals), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2319(s(2),s(1),s(0),g(decimals), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2319(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2331(s(1), s(0),g(decimals), l(l3), l(l0)))

jump2319(s(2), s(1), s(0), g(decimals), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2327(s(1), s(0)))

block2327(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2331(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2340
	nop(PUSH2)
	s(2) = 6292
	nop(PUSH2)
	call(block6292(s(1),s(0),g(decimals), l(l3), l(l0)))
	nop(JUMP)

block2340(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2368(s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2368(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2368(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	eq(s(2), 0)
	call(block2380(s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund))

jump2368(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, timestamp, weiReqFund)=>
	neq(s(2), 0)
	call(block2376(s(1), s(0)))

block2376(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2380(s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, calldatasize, caller, timestamp, weiReqFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2411
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = weiReqFund
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6311
	nop(PUSH2)
	call(block6311(s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMP)

block2411(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2413(s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2413(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2413(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	eq(s(2), 0)
	call(block2425(s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value))

jump2413(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, extcodesize, gas, returndatasize, value)=>
	neq(s(2), 0)
	call(block2421(s(1), s(0)))

block2421(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2425(s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, extcodesize, gas, returndatasize, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2456
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6654
	nop(PUSH2)
	call(block6654(s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2456(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2458(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	eq(s(2), 0)
	call(block2470(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp))

jump2458(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	neq(s(2), 0)
	call(block2466(s(1), s(0)))

block2458(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2458(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, investorsToProcess, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2466(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2470(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, investorsToProcess, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2501
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investorsToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7339
	nop(PUSH2)
	call(block7339(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block2501(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2503(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	eq(s(2), 0)
	call(block2515(s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp))

jump2503(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	neq(s(2), 0)
	call(block2511(s(1), s(0)))

block2503(s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2503(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, inSupport, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2511(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2515(s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, inSupport, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2548
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = inSupport
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8864
	nop(PUSH2)
	call(block8864(s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block2548(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2570(s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2570(s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2570(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2582(s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

jump2570(s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2578(s(1), s(0)))

block2578(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2582(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2591
	nop(PUSH2)
	s(2) = 9505
	nop(PUSH2)
	call(block9505(s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2591(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2628(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block2628(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2628(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2628(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block2655(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2628(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block2637(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block2637(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2628
	nop(PUSH2)
	call(block2628(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block2655(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2655(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2655(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2700(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2655(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2675(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2675(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2700(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2700(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2714(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2714(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2714(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2726(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2714(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2722(s(1), s(0)))

block2722(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2726(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2811
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 9663
	nop(PUSH2)
	call(block9663(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2811(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2833(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2833(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2833(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2845(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2833(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2841(s(1), s(0)))

block2841(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2845(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2898
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9700
	nop(PUSH2)
	call(block9700(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2898(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2927(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2939(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2927(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2935(s(1), s(0)))

block2927(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2927(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2935(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2939(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2992
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9736
	nop(PUSH2)
	call(block9736(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2992(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3014(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3026(s(1), s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller))

jump3014(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3022(s(1), s(0)))

block3014(s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3014(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), agent, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3022(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3026(s(1), s(0), g(migrationAgent), g(state), g(owner), agent, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3079
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = agent
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9760
	nop(PUSH2)
	call(block9760(s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(JUMP)

block3079(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3081(s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3081(s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3081(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	eq(s(2), 0)
	call(block3093(s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump3081(s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), callvalue, timestamp)=>
	neq(s(2), 0)
	call(block3089(s(1), s(0)))

block3089(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3093(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3102
	nop(PUSH2)
	s(2) = 10026
	nop(PUSH2)
	call(block10026(s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMP)

block3102(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3124(s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3124(s(2),s(1),s(0),g(totalLimitUSD), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3124(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3136(s(1), s(0),g(totalLimitUSD), l(l3), l(l0)))

jump3124(s(2), s(1), s(0), g(totalLimitUSD), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3132(s(1), s(0)))

block3132(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3136(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3145
	nop(PUSH2)
	s(2) = 10158
	nop(PUSH2)
	call(block10158(s(1),s(0),g(totalLimitUSD), l(l3), l(l0)))
	nop(JUMP)

block3145(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3167(s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3167(s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3167(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3179(s(1), s(0),g(migrationAgent), l(l3), l(l0)))

jump3167(s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3175(s(1), s(0)))

block3175(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3179(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3188
	nop(PUSH2)
	s(2) = 10164
	nop(PUSH2)
	call(block10164(s(1),s(0),g(migrationAgent), l(l3), l(l0)))
	nop(JUMP)

block3188(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3254(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3266(s(1), s(0),g(crowdsaleOwner), l(l3), l(l0)))

jump3254(s(2), s(1), s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3262(s(1), s(0)))

block3254(s(0), g(crowdsaleOwner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3254(s(2),s(1),s(0),g(crowdsaleOwner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3262(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3266(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3275
	nop(PUSH2)
	s(2) = 10202
	nop(PUSH2)
	call(block10202(s(1),s(0),g(crowdsaleOwner), l(l3), l(l0)))
	nop(JUMP)

block3275(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3341(s(0), g(owner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3341(s(2),s(1),s(0),g(owner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3341(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3353(s(1), s(0),g(owner), l(l3), l(l0)))

jump3341(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3349(s(1), s(0)))

block3349(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3353(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3362
	nop(PUSH2)
	s(2) = 10240
	nop(PUSH2)
	call(block10240(s(1),s(0),g(owner), l(l3), l(l0)))
	nop(JUMP)

block3362(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3428(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3440(s(1), s(0),g(totalMigrated), l(l3), l(l0)))

jump3428(s(2), s(1), s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3436(s(1), s(0)))

block3428(s(0), g(totalMigrated), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3428(s(2),s(1),s(0),g(totalMigrated), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3436(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3440(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3449
	nop(PUSH2)
	s(2) = 10277
	nop(PUSH2)
	call(block10277(s(1),s(0),g(totalMigrated), l(l3), l(l0)))
	nop(JUMP)

block3449(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3471(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3483(s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

jump3471(s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3479(s(1), s(0)))

block3471(s(0), g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3471(s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3479(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3483(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3492
	nop(PUSH2)
	s(2) = 10283
	nop(PUSH2)
	call(block10283(s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3492(s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3529(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block3529(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3529(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3529(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block3556(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3529(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block3538(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block3538(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3529
	nop(PUSH2)
	call(block3529(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump3556(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block3601(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3556(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block3576(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block3556(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3556(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3576(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3601(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3601(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3615(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3627(s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0)))

jump3615(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3623(s(1), s(0)))

block3615(s(0), g(crowdsaleFinishTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3615(s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3623(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3627(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3636
	nop(PUSH2)
	s(2) = 10441
	nop(PUSH2)
	call(block10441(s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0)))
	nop(JUMP)

block3636(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3658(s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3658(s(2),s(1),s(0),g(etherPrice), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3658(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3670(s(1), s(0),g(etherPrice), l(l3), l(l0)))

jump3658(s(2), s(1), s(0), g(etherPrice), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3666(s(1), s(0)))

block3666(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3670(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3679
	nop(PUSH2)
	s(2) = 10447
	nop(PUSH2)
	call(block10447(s(1),s(0),g(etherPrice), l(l3), l(l0)))
	nop(JUMP)

block3679(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3701(s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3701(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3701(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	eq(s(2), 0)
	call(block3713(s(1), s(0),g(owner), calldatasize, caller, owner))

jump3701(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, owner)=>
	neq(s(2), 0)
	call(block3709(s(1), s(0)))

block3709(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3713(s(1), s(0), g(owner), calldatasize, caller, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3766
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10453
	nop(PUSH2)
	call(block10453(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block3766(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3768(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3768(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3768(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3780(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value))

jump3768(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3776(s(1), s(0)))

block3776(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3780(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3843
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 10649
	nop(PUSH2)
	call(block10649(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block3843(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3845(s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3845(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3845(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	eq(s(2), 0)
	call(block3857(s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess))

jump3845(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, callvalue, timestamp, votesToProcess)=>
	neq(s(2), 0)
	call(block3853(s(1), s(0)))

block3853(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3857(s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, timestamp, votesToProcess)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3888
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = votesToProcess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11181
	nop(PUSH2)
	call(block11181(s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block3888(s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3914(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	eq(s(2), 0)
	call(block3926(s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp))

jump3914(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	neq(s(2), 0)
	call(block3922(s(1), s(0)))

block3914(s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3914(s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, crowdsaleOwner, etherPrice, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3922(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3926(s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), calldatasize, caller, crowdsaleOwner, etherPrice, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3989
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crowdsaleOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = etherPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 12239
	nop(PUSH2)
	call(block12239(s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(JUMP)

block3989(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3991(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4003(s(1), s(0),g(state), l(l3), l(l0)))

jump3991(s(2), s(1), s(0), g(state), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3999(s(1), s(0)))

block3991(s(0), g(state), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3991(s(2),s(1),s(0),g(state), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3999(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4003(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4012
	nop(PUSH2)
	s(2) = 12797
	nop(PUSH2)
	call(block12797(s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block4012(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4012(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4012(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block4028(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump4012(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block4027(s(5), s(4), s(3), s(2), s(1), s(0)))

block4027(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4028(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4048(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4060(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump4048(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4056(s(1), s(0)))

block4048(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4048(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4056(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4060(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4113
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12816
	nop(PUSH2)
	call(block12816(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4113(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4150(s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4150(s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4150(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4162(s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender))

jump4150(s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4158(s(1), s(0)))

block4158(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4162(s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4247
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 12878
	nop(PUSH2)
	call(block12878(s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4247(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4269(s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4269(s(2),s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4269(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4281(s(1), s(0),g(crowdsaleStartTime), l(l3), l(l0)))

jump4269(s(2), s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4277(s(1), s(0)))

block4277(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4281(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4290
	nop(PUSH2)
	s(2) = 13065
	nop(PUSH2)
	call(block13065(s(1),s(0),g(crowdsaleStartTime), l(l3), l(l0)))
	nop(JUMP)

block4290(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4312(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4324(s(1), s(0),g(nay), l(l3), l(l0)))

jump4312(s(2), s(1), s(0), g(nay), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4320(s(1), s(0)))

block4312(s(0), g(nay), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4312(s(2),s(1),s(0),g(nay), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4320(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4324(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4333
	nop(PUSH2)
	s(2) = 13071
	nop(PUSH2)
	call(block13071(s(1),s(0),g(nay), l(l3), l(l0)))
	nop(JUMP)

block4333(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4355(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4367(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump4355(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4363(s(1), s(0)))

block4355(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4355(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4363(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4367(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4398
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13077
	nop(PUSH2)
	call(block13077(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4398(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4464(s(1), s(0), g(votingDeadline), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(votingDeadline)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1484(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block4470(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 12
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1549(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump4521(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block4671(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump4521(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block4601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l1), l(l0)))

block4521(s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(name)
	s(7) = g(name)
	call(jump4521(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4601(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block4628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump4601(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block4609(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l4), l(l3), l(l0)))

block4601(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump4601(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block4609(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 4671
	nop(PUSH2)
	call(block4671(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block4628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block4642(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block4642(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump4642(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump4642(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block4642(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump4642(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block4662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block4662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block4671(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block4671(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1636(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump4679(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block4692(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump4679(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block4691(s(4), s(3), s(2), s(1), s(0)))

block4679(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump4679(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4691(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4692(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump4692(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block4719(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump4692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block4718(s(5), s(4), s(3), s(2), s(1), s(0)))

block4718(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4719(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump4719(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4719(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block4731(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump4719(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block4727(s(3), s(2), s(1), s(0)))

block4727(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block4731(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1834(s(0)))
	nop(JUMP)

jump4965(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block4979(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump4965(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block4978(s(3), s(2), s(1), s(0)))

block4965(s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump4965(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4978(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4979(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump4979(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4979(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block5006(s(4), s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump4979(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block5005(s(4), s(3), s(2), s(1), s(0)))

block5005(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5006(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 1 )
	call(block5055(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5006(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 1 )
	call(block5013(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

block5006(s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5055
	nop(PUSH2)
	call(jump5006(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMPI)

block5013(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5013(s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5013(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(5), s(4))
	call(block5026(s(3), s(2), s(1), s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))

jump5013(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(5), s(4))
	call(block5025(s(3), s(2), s(1), s(0)))

block5025(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5026(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block5053(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5026(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block5052(s(4), s(3), s(2), s(1), s(0)))

block5026(s(3), s(2), s(1), s(0), g(state), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5026(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5052(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5053(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block5055(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))

block5055(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump5055(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5055(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block5066(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5055(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block5062(s(2), s(1), s(0)))

block5062(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5066(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump5066(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5066(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(4), s(3))
	call(block5298(s(2), s(1), s(0)))

jump5066(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(4), s(3))
	call(block5145(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump5145(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block5296(s(3), s(2), s(1), s(0)))

jump5145(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block5287(s(3), s(2), s(1), s(0), returndatasize))

block5145(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(3) = 11
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump5145(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5287(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block5296(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5298(s(2),s(1),s(0)))

block5298(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1857(s(0)))
	nop(JUMP)

block5301(s(1), s(0), g(numberOfVotes), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(numberOfVotes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1880(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5307(s(1), s(0), g(minimalSuccessUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1923(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5313(s(1), s(0), g(yea), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(yea)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1966(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5319(s(1), s(0), g(totalSupply), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2009(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump5325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block5341(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump5325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block5340(s(4), s(3), s(2), s(1), s(0)))

block5325(s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5325(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5340(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5341(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5341(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5341(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block5368(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump5341(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block5367(s(5), s(4), s(3), s(2), s(1), s(0)))

block5367(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5368(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block5416(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump5368(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block5375(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

block5368(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 5416
	nop(PUSH2)
	call(jump5368(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(JUMPI)

block5375(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump5375(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5375(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block5387(s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))

jump5375(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block5386(s(4), s(3), s(2), s(1), s(0)))

block5386(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5387(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block5414(s(5), s(4), s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump5387(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block5413(s(5), s(4), s(3), s(2), s(1), s(0)))

block5387(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5387(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), g(state), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5413(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5414(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block5416(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump5416(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block5427(s(3), s(2), s(1), s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))

jump5416(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block5423(s(3), s(2), s(1), s(0)))

block5416(s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump5416(s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5423(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump5427(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block5452(s(3), s(2), s(1), s(0),g(votingDeadline), l(l4), l(l3), l(l0), timestamp))

jump5427(s(5), s(4), s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block5444(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block5427(s(3), s(2), s(1), s(0), g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump5427(s(5),s(4),s(3),s(2),s(1),s(0),g(votingDeadline), g(weiReqFund), l(l4), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5444(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 5460
	nop(PUSH2)
	call(block5460(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block5452(s(3), s(2), s(1), s(0), g(votingDeadline), l(l4), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block5460(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block5460(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	call(block2052(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block5464(s(1), s(0), g(numberOfInvestors), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(numberOfInvestors)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2102(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5470(s(1), s(0), g(collectedUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(collectedUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2145(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block5476(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump5476(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5476(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5489(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump5476(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5488(s(5), s(4), s(3), s(2), s(1), s(0)))

block5488(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5489(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump5489(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5489(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(8), s(7))
	call(block5516(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5489(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(8), s(7))
	call(block5515(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5515(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5516(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block5528(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5516(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block5524(s(4), s(3), s(2), s(1), s(0)))

block5516(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5516(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5524(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump5528(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block5606(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5528(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block5602(s(4), s(3), s(2), s(1), s(0)))

block5528(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump5528(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5602(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump5606(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block5749(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5606(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block5745(s(4), s(3), s(2), s(1), s(0)))

block5606(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	call(jump5606(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5745(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block5749(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump5749(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5749(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block5888(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump5749(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block5884(s(4), s(3), s(2), s(1), s(0)))

block5884(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block5888(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2274(s(0)))
	nop(JUMP)

block6286(s(1), s(0), g(weiReqFund), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(weiReqFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2297(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6292(s(1), s(0), g(decimals), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2340(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump6311(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block6324(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6311(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block6323(s(3), s(2), s(1), s(0)))

block6311(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 4
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6311(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6323(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6324(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block6351(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6324(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block6350(s(4), s(3), s(2), s(1), s(0)))

block6324(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6324(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6350(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6351(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), 1 )
	call(block6399(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6351(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), 1 )
	call(block6358(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

block6351(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6399
	nop(PUSH2)
	call(jump6351(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(JUMPI)

jump6358(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(5), s(4))
	call(block6370(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6358(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(5), s(4))
	call(block6369(s(3), s(2), s(1), s(0)))

block6358(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6358(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6369(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6370(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6370(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	leq(s(6), s(5))
	call(block6397(s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(state), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	gt(s(6), s(5))
	call(block6396(s(4), s(3), s(2), s(1), s(0)))

block6396(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6397(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block6399(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

block6399(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	call(jump6399(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6399(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(3), 0)
	call(block6410(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))

jump6399(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(3), 0)
	call(block6406(s(2), s(1), s(0)))

block6406(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6410(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	eq(s(4), s(3))
	call(block6501(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump6410(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	neq(s(4), s(3))
	call(block6497(s(2), s(1), s(0)))

block6410(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6410(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), g(owner), l(l3), l(l0), address, balance, caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6497(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6501(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(weiReqFund)
	nop(SLOAD)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	call(jump6501(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6501(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block6519(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump6501(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block6514(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block6514(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block6519(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

jump6519(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	eq(s(4), 0)
	call(block6554(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump6519(s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	neq(s(4), 0)
	call(block6526(s(3), s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))

block6519(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	call(jump6519(s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6526(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block6554(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump6554(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block6565(s(2), s(1), s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))

jump6554(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block6561(s(2), s(1), s(0)))

block6554(s(3), s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump6554(s(3),s(2),s(1),s(0),g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6561(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6565(s(2), s(1), s(0), g(nay), g(yea), g(votingDeadline), g(weiReqFund), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 21
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(weiReqFund) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 604800
	nop(PUSH3)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 22
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(votingDeadline) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 24
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(yea) = s(3)
	nop(SSTORE)
	s(3) = 25
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(nay) = s(3)
	nop(SSTORE)
	s(3) = 93720157658062424846682753225579638167677070772725695825547635469129033712185
	nop(PUSH32)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block2411(s(0)))
	nop(JUMP)

block6654(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump6654(s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6654(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(5), s(4))
	call(block6666(s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6654(s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(5), s(4))
	call(block6665(s(3), s(2), s(1), s(0)))

block6665(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6666(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(6), s(5))
	call(block6693(s(4), s(3), s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6666(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(6), s(5))
	call(block6692(s(4), s(3), s(2), s(1), s(0)))

block6666(s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump6666(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(state), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6692(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump6693(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block6705(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6693(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block6701(s(2), s(1), s(0)))

block6693(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump6693(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6701(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6705(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block6777(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6705(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block6773(s(2), s(1), s(0)))

block6705(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6705(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6773(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6777(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump6777(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6777(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(4), s(3))
	call(block6793(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6777(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(4), s(3))
	call(block6789(s(2), s(1), s(0)))

block6789(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump6793(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	leq(s(4), s(3))
	call(block6871(s(2), s(1), s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))

jump6793(s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	gt(s(4), s(3))
	call(block6867(s(2), s(1), s(0)))

block6793(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	call(jump6793(s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6867(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6871(s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 20
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(totalMigrated)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(totalMigrated) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2050044131
	nop(PUSH4)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = s(11)
	nop(DUP1)
	s(12) = extcodesize
	nop(EXTCODESIZE)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump6871(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6871(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	eq(s(13), 0)
	call(block7177(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))

jump6871(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalMigrated), g(migrationAgent), g(totalSupply), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), caller, extcodesize, gas, returndatasize)=>
	neq(s(13), 0)
	call(block7173(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7173(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

jump7177(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	eq(s(7), 0)
	call(block7197(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l3), l(l0), caller))

jump7177(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	neq(s(7), 0)
	call(block7188(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block7177(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = gas
	nop(GAS)
	s(6) = 1
	nop(CALL)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump7177(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l3), l(l0), caller, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7188(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block7197(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(migrationAgent)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 11249535016889395155928029794464789214288252387144912394942407981344833784346
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block2456(s(0)))
	nop(JUMP)

block7339(s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7349
	nop(PUSH2)
	s(5) = 13128
	nop(PUSH2)
	call(block13128(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block7349(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7349(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7349(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block7362(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7349(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block7361(s(5), s(4), s(3), s(2), s(1), s(0)))

block7361(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7362(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7362(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7362(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block7389(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7362(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block7388(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7388(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7389(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 7438
	nop(PUSH2)
	call(jump7389(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump7389(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block7438(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7389(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block7396(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(7), s(6))
	call(block7409(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7396(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(7), s(6))
	call(block7408(s(5), s(4), s(3), s(2), s(1), s(0)))

block7396(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7396(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7408(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7409(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(8), s(7))
	call(block7436(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7409(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(8), s(7))
	call(block7435(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7409(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7409(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7435(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7436(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block7438(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block7438(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump7438(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7438(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(5), 0)
	call(block7449(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump7438(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(5), 0)
	call(block7445(s(4), s(3), s(2), s(1), s(0)))

block7445(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7449(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 10
	nop(PUSH1)
	s(5) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 7469
	nop(PUSH2)
	call(jump7449(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump7449(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(6), 1 )
	call(block7469(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump7449(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(6), 1 )
	call(block7461(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

block7461(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block7469(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump7469(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block7480(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump7469(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block7476(s(4), s(3), s(2), s(1), s(0)))

block7469(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump7469(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7476(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7480(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(minimalSuccessUSD)
	nop(SLOAD)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	call(jump7480(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7480(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	geq(s(6), s(5))
	call(block7995(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump7480(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(collectedUSD), g(minimalSuccessUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	lt(s(6), s(5))
	call(block7493(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))

jump7493(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block7511(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))

jump7493(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block7504(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))

block7493(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump7493(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7504(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block7511(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))

jump7511(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block7850(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))

jump7511(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block7517(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))

block7511(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump7511(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7517(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0))=>
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfInvestors) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l8) = s(8)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(3)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(5) = l(l5)
	nop(MLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(4)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 7493
	nop(PUSH2)
	call(block7493(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(totalSupply), l(l8), l(l5), l(l2), l(l1), l(l0)))
	nop(JUMP)

block7850(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump7850(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7850(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	leq(s(6), s(5))
	call(block7866(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7850(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), l(l5), l(l0))=>
	gt(s(6), s(5))
	call(block7862(s(4), s(3), s(2), s(1), s(0)))

block7862(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 8859
	nop(PUSH2)
	call(block8859(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block7866(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7866(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(7), s(6))
	call(block7879(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(7), s(6))
	call(block7878(s(5), s(4), s(3), s(2), s(1), s(0)))

block7878(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7879(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump7879(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7879(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(8), s(7))
	call(block7906(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7879(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(8), s(7))
	call(block7905(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7905(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(jump7906(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	neq(s(6), s(5))
	call(block7953(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	eq(s(6), s(5))
	call(block7913(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7913(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block7943(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7913(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block7942(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7913(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump7913(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7942(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7943(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 7990
	nop(PUSH2)
	call(block7990(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

jump7953(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block7984(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump7953(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block7983(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7953(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump7953(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7983(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7984(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block7990(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block7990(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 8774
	nop(PUSH2)
	call(block8774(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

block7995(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block7996(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block7996(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump7996(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7996(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block8014(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump7996(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block8007(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block8007(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block8014(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump8014(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block8239(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump8014(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block8020(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

block8014(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8014(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8020(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(numberOfInvestors) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(9) = g(numberOfInvestors)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(5) = 12
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 13
	nop(PUSH1)
	s(7) = g(numberOfInvestors)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 7996
	nop(PUSH2)
	call(block7996(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

jump8239(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(6), s(5))
	call(block8255(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump8239(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(6), s(5))
	call(block8251(s(4), s(3), s(2), s(1), s(0)))

block8239(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 13
	nop(PUSH1)
	s(6) = g(numberOfInvestors)
	nop(SLOAD)
	call(jump8239(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8251(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 8859
	nop(PUSH2)
	call(block8859(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8255(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump8255(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(7), s(6))
	call(block8268(s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump8255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(7), s(6))
	call(block8267(s(5), s(4), s(3), s(2), s(1), s(0)))

block8267(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8268(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(8), s(7))
	call(block8295(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))

jump8268(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(8), s(7))
	call(block8294(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8268(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump8268(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8294(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8295(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(6), s(5))
	call(block8463(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump8295(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(6), s(5))
	call(block8302(s(4), s(3), s(2), s(1), s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))

block8295(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump8295(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8302(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	neq(s(5), 0)
	call(block8422(s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump8302(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	eq(s(5), 0)
	call(block8418(s(4), s(3), s(2), s(1), s(0)))

block8302(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance)=>
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8302(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8418(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump8422(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block8453(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump8422(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block8452(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8422(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump8422(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8452(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8453(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 8773
	nop(PUSH2)
	call(block8773(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(JUMP)

block8463(s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(crowdsaleOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = 1500000000000000000000000
	nop(PUSH11)
	s(9) = s(7)
	nop(DUP2)
	call(jump8463(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8463(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block8547(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump8463(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block8546(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8546(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8547(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump8547(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8547(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block8585(s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump8547(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block8581(s(4), s(3), s(2), s(1), s(0)))

block8581(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump8585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block8602(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))

jump8585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block8601(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8585(s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump8585(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8601(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block8720(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(totalSupply), l(l5), l(l0)))

jump8602(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block8719(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8602(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 72
	nop(PUSH1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(7) = g(totalSupply)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump8602(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), g(owner), l(l5), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8719(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8720(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 4
	nop(PUSH1)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump8720(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(totalSupply), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8720(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block8767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l5), l(l0)))

jump8720(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(totalSupply), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block8766(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8766(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8767(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(state) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block8773(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

block8773(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block8774(s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))

jump8774(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	leq(s(11), s(10))
	call(block8839(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump8774(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	gt(s(11), s(10))
	call(block8838(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8774(s(4), s(3), s(2), s(1), s(0), g(state), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(5) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump8774(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l5), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8838(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8839(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	call(block8859(s(4),s(3),s(2),s(1),s(0)))

block8859(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2501(s(0)))
	nop(JUMP)

block8864(s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump8864(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8864(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block8944(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8864(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block8940(s(3), s(2), s(1), s(0)))

block8940(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump8944(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block8957(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8944(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block8956(s(4), s(3), s(2), s(1), s(0)))

block8944(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8944(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8956(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block8984(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block8983(s(5), s(4), s(3), s(2), s(1), s(0)))

block8957(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump8957(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8983(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8984(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 9032
	nop(PUSH2)
	call(jump8984(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(JUMPI)

jump8984(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), 1 )
	call(block9032(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8984(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), 1 )
	call(block8991(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8991(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(6), s(5))
	call(block9003(s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump8991(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(6), s(5))
	call(block9002(s(4), s(3), s(2), s(1), s(0)))

block8991(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	nop(DUP2)
	call(jump8991(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9002(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9003(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump9003(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9003(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block9030(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump9003(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block9029(s(5), s(4), s(3), s(2), s(1), s(0)))

block9029(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9030(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block9032(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

block9032(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump9032(s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9032(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(4), 0)
	call(block9043(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump9032(s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(4), 0)
	call(block9039(s(3), s(2), s(1), s(0)))

block9039(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9043(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(jump9043(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9043(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block9142(s(3), s(2), s(1), s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))

jump9043(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block9138(s(3), s(2), s(1), s(0)))

block9138(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump9142(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	gt(s(5), s(4))
	call(block9158(s(3), s(2), s(1), s(0),g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump9142(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	leq(s(5), s(4))
	call(block9154(s(3), s(2), s(1), s(0)))

block9142(s(3), s(2), s(1), s(0), g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(votingDeadline)
	nop(SLOAD)
	call(jump9142(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfVotes), g(votingDeadline), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9154(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9158(s(3), s(2), s(1), s(0), g(numberOfVotes), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 23
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(numberOfVotes)
	nop(SLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	g(numberOfVotes) = s(5)
	nop(SSTORE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 1
	nop(PUSH1)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	nop(POP)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(6) = l(l4)
	nop(MLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 64553722568993200883443809638226739942484745337245721019031194148412713982255
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2548(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block9505(s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(standard)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(standard)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(standard)
	s(7) = g(standard)
	call(jump9505(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9505(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block9655(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump9505(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block9585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))

block9585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump9585(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(standard), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump9585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block9612(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump9585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block9593(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(standard), l(l4), l(l3), l(l0)))

block9593(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(standard), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(standard)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 9655
	nop(PUSH2)
	call(block9655(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block9612(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block9626(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block9626(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump9626(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump9626(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block9626(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump9626(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block9646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block9646(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block9655(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block9655(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2591(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block9663(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 18
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2811(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block9700(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block2898(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block9736(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2992(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump9760(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	eq(s(4), s(3))
	call(block9851(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump9760(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	neq(s(4), s(3))
	call(block9847(s(2), s(1), s(0)))

block9760(s(2), s(1), s(0), g(migrationAgent), g(state), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9760(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9847(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9851(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(migrationAgent)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9851(s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9851(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	eq(s(4), s(3))
	call(block9922(s(2), s(1), s(0),g(migrationAgent), g(state)))

jump9851(s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	neq(s(4), s(3))
	call(block9918(s(2), s(1), s(0)))

block9918(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9922(s(2), s(1), s(0), g(migrationAgent), g(state))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 19
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(migrationAgent)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(migrationAgent) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5
	nop(PUSH1)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump9922(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9922(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	leq(s(9), s(8))
	call(block10018(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump9922(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(state))=>
	gt(s(9), s(8))
	call(block10017(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10017(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10018(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(state) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3079(s(0)))
	nop(JUMP)

block10026(s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump10026(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10026(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block10041(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump10026(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block10040(s(3), s(2), s(1), s(0)))

block10040(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10041(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block10068(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump10041(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block10067(s(4), s(3), s(2), s(1), s(0)))

block10041(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10041(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10067(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10068(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	eq(s(4), 1 )
	call(block10117(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump10068(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	neq(s(4), 1 )
	call(block10075(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

block10068(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 10117
	nop(PUSH2)
	call(jump10068(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump10075(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(5), s(4))
	call(block10088(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))

jump10075(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(5), s(4))
	call(block10087(s(3), s(2), s(1), s(0)))

block10075(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump10075(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10087(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10088(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10088(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10088(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block10115(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump10088(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block10114(s(4), s(3), s(2), s(1), s(0)))

block10114(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10115(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block10117(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

block10117(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump10117(s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10117(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	neq(s(3), 0)
	call(block10128(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump10117(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	eq(s(3), 0)
	call(block10124(s(2), s(1), s(0)))

block10124(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump10128(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	leq(s(4), s(3))
	call(block10147(s(2), s(1), s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))

jump10128(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	gt(s(4), s(3))
	call(block10139(s(2), s(1), s(0), l(l3), l(l0)))

block10128(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(3) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(4) = timestamp
	nop(TIMESTAMP)
	call(jump10128(s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10139(s(2), s(1), s(0), l(l3), l(l0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 10155
	nop(PUSH2)
	call(block10155(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10147(s(2), s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = 10
	nop(PUSH1)
	s(4) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block10155(s(2),s(1),s(0), l(l3), l(l0)))

block10155(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3102(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10158(s(1), s(0), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(totalLimitUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3145(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10164(s(1), s(0), g(migrationAgent), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(migrationAgent)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3188(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10202(s(1), s(0), g(crowdsaleOwner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crowdsaleOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3275(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10240(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3362(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10277(s(1), s(0), g(totalMigrated), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(totalMigrated)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3449(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10283(s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(symbol)
	s(7) = g(symbol)
	call(jump10283(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block10433(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump10283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block10363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))

jump10363(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block10390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump10363(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block10371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l4), l(l3), l(l0)))

block10363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump10363(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block10371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l4), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 10433
	nop(PUSH2)
	call(block10433(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block10390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block10404(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block10404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump10404(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump10404(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block10404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump10404(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block10424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block10424(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block10433(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block10433(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3492(s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block10441(s(1), s(0), g(crowdsaleFinishTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(crowdsaleFinishTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3636(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10447(s(1), s(0), g(etherPrice), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(2) = g(etherPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3679(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block10453(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump10453(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10453(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block10544(s(2), s(1), s(0),g(owner)))

jump10453(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block10540(s(2), s(1), s(0)))

block10540(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10544(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump10544(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10544(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block10582(s(2), s(1), s(0),g(owner)))

jump10544(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block10578(s(2), s(1), s(0)))

block10578(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10582(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3766(s(0)))
	nop(JUMP)

jump10649(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block10662(s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))

jump10649(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block10661(s(4), s(3), s(2), s(1), s(0)))

block10649(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump10649(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10661(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block10689(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump10662(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block10688(s(5), s(4), s(3), s(2), s(1), s(0)))

block10662(s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump10662(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10688(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump10689(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block10701(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump10689(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block10697(s(3), s(2), s(1), s(0)))

block10689(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump10689(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10697(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump10701(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block10779(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump10701(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block10775(s(3), s(2), s(1), s(0)))

block10701(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump10701(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10775(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump10779(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block10922(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller))

jump10779(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block10918(s(3), s(2), s(1), s(0)))

block10779(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump10779(s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10918(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block10922(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block3843(s(0)))
	nop(JUMP)

block11181(s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 11192
	nop(PUSH2)
	s(6) = 13154
	nop(PUSH2)
	call(block13154(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block11192(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11192(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11192(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block11208(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11192(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block11207(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11207(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11208(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11208(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11208(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block11235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11208(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block11234(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11234(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 11283
	nop(PUSH2)
	call(jump11235(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMPI)

jump11235(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(9), 1 )
	call(block11283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11235(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(9), 1 )
	call(block11242(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block11242(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(POP)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	nop(DUP2)
	call(jump11242(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11242(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(10), s(9))
	call(block11254(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11242(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(10), s(9))
	call(block11253(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11253(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11254(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	leq(s(11), s(10))
	call(block11281(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11254(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	gt(s(11), s(10))
	call(block11280(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11254(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(state)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump11254(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11280(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11281(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block11283(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

block11283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	call(jump11283(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	neq(s(8), 0)
	call(block11294(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))

jump11283(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	eq(s(8), 0)
	call(block11290(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11290(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block11294(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(8) = 22
	nop(PUSH1)
	s(8) = g(votingDeadline)
	nop(SLOAD)
	s(9) = timestamp
	nop(TIMESTAMP)
	call(jump11294(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11294(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	geq(s(9), s(8))
	call(block11311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11294(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	lt(s(9), s(8))
	call(block11307(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11307(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block11311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(block11312(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11312(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(9), 0)
	call(block11330(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11312(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(9), 0)
	call(block11323(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

block11312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump11312(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11323(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block11330(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11330(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block11822(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump11330(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block11336(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

block11330(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump11330(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11336(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(numberOfVotes)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(numberOfVotes) = s(11)
	nop(SSTORE)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 64
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	l(l8) = s(11)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l5)
	nop(MLOAD)
	call(jump11336(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11336(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block11631(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

jump11336(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block11611(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

block11611(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 24
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(yea)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(yea) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 11648
	nop(PUSH2)
	call(block11648(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block11631(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 25
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(nay)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(nay) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block11648(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))

block11648(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 1
	nop(PUSH1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 23
	nop(PUSH1)
	s(10) = g(numberOfVotes)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 11312
	nop(PUSH2)
	call(block11312(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block11822(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 23
	nop(PUSH1)
	s(9) = g(numberOfVotes)
	nop(SLOAD)
	call(jump11822(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11822(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block11842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump11822(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block11834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block11834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 12230
	nop(PUSH2)
	call(block12230(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

block11842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 25
	nop(PUSH1)
	s(8) = g(nay)
	nop(SLOAD)
	s(9) = 24
	nop(PUSH1)
	s(9) = g(yea)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(8) = g(weiReqFund)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 21
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(weiReqFund) = s(8)
	nop(SSTORE)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(votingDeadline) = s(8)
	nop(SSTORE)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(numberOfVotes) = s(8)
	nop(SSTORE)
	s(8) = s(3)
	nop(DUP5)
	call(jump11842(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11842(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block12170(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump11842(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block11881(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))

jump11881(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	neq(s(9), s(8))
	call(block12047(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(migrationAgent), l(l5), l(l0), address, balance))

jump11881(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	eq(s(9), s(8))
	call(block11946(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), l(l5), l(l0)))

block11881(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), g(owner), l(l5), l(l0), address, balance)=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 19
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(migrationAgent)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump11881(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), g(owner), l(l5), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11946(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump11946(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l5), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	neq(s(8), 0)
	call(block12042(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump11946(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l5), l(l0))=>
	eq(s(8), 0)
	call(block12038(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12038(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block12042(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 12169
	nop(PUSH2)
	call(block12169(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump12047(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	neq(s(8), 0)
	call(block12168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump12047(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	eq(s(8), 0)
	call(block12164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12047(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(migrationAgent), l(l5), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 19
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(migrationAgent)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump12047(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(migrationAgent), l(l5), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12164(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block12168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block12169(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block12169(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(block12170(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block12170(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(8) = 75206971871473182631099251223774128077502725353986568989429243973252125172665
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(11)
	nop(DUP2)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	call(block12230(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

block12230(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block3888(s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump12239(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block12330(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12239(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block12326(s(3), s(2), s(1), s(0)))

block12239(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump12239(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(owner), l(l3), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12326(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump12330(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12343(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12330(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12342(s(4), s(3), s(2), s(1), s(0)))

block12330(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12330(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12342(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12343(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block12370(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12343(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block12369(s(5), s(4), s(3), s(2), s(1), s(0)))

block12343(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12343(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12369(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12370(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 12419
	nop(PUSH2)
	call(jump12370(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(JUMPI)

jump12370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(5), 1 )
	call(block12419(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(5), 1 )
	call(block12377(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

block12377(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12377(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12390(s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12377(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12389(s(4), s(3), s(2), s(1), s(0)))

block12389(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block12417(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12390(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block12416(s(5), s(4), s(3), s(2), s(1), s(0)))

block12390(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12390(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12416(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12417(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	call(block12419(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12419(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	neq(s(4), 0)
	call(block12430(s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))

jump12419(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	eq(s(4), 0)
	call(block12426(s(3), s(2), s(1), s(0)))

block12419(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump12419(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12426(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block12430(s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 9
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleStartTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(crowdsaleOwner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleOwner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(etherPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 13
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(numberOfInvestors) = s(4)
	nop(SSTORE)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(collectedUSD) = s(4)
	nop(SSTORE)
	s(4) = 0
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump12430(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12430(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	leq(s(6), s(5))
	call(block12534(s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump12430(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(crowdsaleStartTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), l(l3), l(l0), timestamp)=>
	gt(s(6), s(5))
	call(block12533(s(4), s(3), s(2), s(1), s(0)))

block12533(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12534(s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12534(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12534(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(7), s(6))
	call(block12561(s(5), s(4), s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump12534(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(7), s(6))
	call(block12560(s(5), s(4), s(3), s(2), s(1), s(0)))

block12560(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12561(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	neq(s(5), s(4))
	call(block12640(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

jump12561(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	eq(s(5), s(4))
	call(block12568(s(3), s(2), s(1), s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))

block12561(s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump12561(s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12568(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block12610(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump12568(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block12609(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12568(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	s(4) = 1209600
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12568(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12609(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12610(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 300000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 12709
	nop(PUSH2)
	call(block12709(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(JUMP)

block12640(s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = 2592000
	nop(PUSH3)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crowdsaleFinishTime) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12640(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12640(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	leq(s(10), s(9))
	call(block12683(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0)))

jump12640(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crowdsaleFinishTime), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0), timestamp)=>
	gt(s(10), s(9))
	call(block12682(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12682(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12683(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(minimalSuccessUSD), g(totalLimitUSD), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(state) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5200000
	nop(PUSH3)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalLimitUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3600000
	nop(PUSH3)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(minimalSuccessUSD) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block12709(s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))

block12709(s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 91016009596232918414919019420680617742283986832421755804134802594728457319555
	nop(PUSH32)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(state)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump12709(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12709(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	leq(s(10), s(9))
	call(block12774(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump12709(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l0))=>
	gt(s(10), s(9))
	call(block12773(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12773(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12774(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block3989(s(0)))
	nop(JUMP)

block12797(s(1), s(0), g(state), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4012(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12816(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 26
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	nop(DUP3)
	call(block4113(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump12878(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block12893(s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l3), l(l2), l(l1), l(l0)))

jump12878(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block12892(s(5), s(4), s(3), s(2), s(1), s(0)))

block12878(s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12878(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12892(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12893(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block12920(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump12893(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block12919(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12893(s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(state)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump12893(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12919(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump12920(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(6), s(5))
	call(block12932(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump12920(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(6), s(5))
	call(block12928(s(4), s(3), s(2), s(1), s(0)))

block12920(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump12920(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12928(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12932(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 18
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4247(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13065(s(1), s(0), g(crowdsaleStartTime), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4290(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13071(s(1), s(0), g(nay), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(nay)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4333(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13077(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 27
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4398(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13128(s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block7349(s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleFinishTime), g(state), g(collectedUSD), g(minimalSuccessUSD), g(totalLimitUSD), g(crowdsaleOwner), g(etherPrice), g(totalSupply), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block13154(s(5), s(4), s(3), s(2), s(1), s(0), g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, timestamp)=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block11192(s(5),s(4),s(3),s(2),s(1),s(0),g(nay), g(yea), g(numberOfVotes), g(votingDeadline), g(weiReqFund), g(migrationAgent), g(state), g(owner), l(l8), l(l5), l(l2), l(l1), l(l0), address, balance, timestamp))
	nop(JUMP)

block1130_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1134_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump1134_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1134_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1149_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump1134_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1145_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1145_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1149_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = 11
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump1149_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1149_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	neq(s(7), s(6))
	call(block1326_0(s(5), s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l2), l(l1), caller))

jump1149_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	eq(s(7), s(6))
	call(block1228_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

block1228_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(numberOfInvestors)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(numberOfInvestors) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1326_0(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l2), l(l1), caller))

block1326_0(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block1456_0(s(5),s(4),s(3),s(2),s(1),s(0)))

block1456_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	skip
	nop(STOP)

block527_0(s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump527_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump527_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block548_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump527_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block547_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block547_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump548_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block575_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump548_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block574_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block548_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump548_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block574_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block575_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 624
	nop(PUSH2)
	call(jump575_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMPI)

jump575_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), 1 )
	call(block624_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump575_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), 1 )
	call(block582_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump582_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block595_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump582_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block594_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block582_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump582_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block594_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump595_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block622_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump595_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block621_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block595_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump595_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block621_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block622_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block624_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block624_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump624_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump624_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block635_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump624_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block631_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block631_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump635_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block652_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump635_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block651_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block635_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump635_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block651_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump652_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block679_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump652_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block678_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block652_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump652_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block678_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block679_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump679_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump679_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block694_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump679_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block686_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block686_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 125
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 796
	nop(PUSH2)
	call(block796_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block694_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump694_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump694_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block707_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump694_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block706_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block706_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump707_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump707_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block733_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block707_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 5
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump707_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(state), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block733_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump734_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block795_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump734_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block741_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block741_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(6) = 86400
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump741_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block764_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump741_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block756_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block756_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 115
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 794
	nop(PUSH2)
	call(block794_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block764_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 604800
	nop(PUSH3)
	s(7) = 9
	nop(PUSH1)
	s(7) = g(crowdsaleStartTime)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = timestamp
	nop(TIMESTAMP)
	call(jump764_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump764_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block788_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump764_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(crowdsaleStartTime), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block780_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block780_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 110
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 793
	nop(PUSH2)
	call(block793_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block788_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 100
	nop(PUSH1)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	call(block793_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block793_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block794_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block794_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block795_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block795_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block796_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block796_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(1)
	nop(DUP6)
	call(jump796_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump796_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block1456_0(s(5), s(4), s(3), s(2), s(1), s(0)))

jump796_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block806_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump806_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block831_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump806_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block806_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(etherPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump806_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block830_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block831_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(collectedUSD)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump831_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump831_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block970_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller))

jump831_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block849_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block849_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 7
	nop(PUSH1)
	s(6) = g(collectedUSD)
	nop(SLOAD)
	s(7) = 5
	nop(PUSH1)
	s(7) = g(totalLimitUSD)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 3
	nop(PUSH1)
	s(6) = g(etherPrice)
	nop(SLOAD)
	s(7) = 1000000000000000000
	nop(PUSH8)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump849_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump849_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block880_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump849_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(etherPrice), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block879_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block879_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block880_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump880_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump880_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block955_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller))

jump880_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block946_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block946_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block955_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalLimitUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(totalLimitUSD)
	nop(SLOAD)
	s(7) = 7
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 987
	nop(PUSH2)
	call(block987_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(JUMP)

block970_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(collectedUSD), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(collectedUSD)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(collectedUSD) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block987_0(s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump987_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	gt(s(7), s(6))
	call(block1134_0(s(5), s(4), s(3), s(2), s(1), s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))

jump987_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	leq(s(7), s(6))
	call(block1130_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block987_0(s(5), s(4), s(3), s(2), s(1), s(0), g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump987_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numberOfInvestors), g(totalSupply), l(l2), l(l1), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

