{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSStop": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2161_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2161": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2161_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2161_2": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ],
            "allowance(address,address)": [
                818,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "totalSupply()": [
                248,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "AGT2ATNSwap": {
        "function_list": [
            "onTokenTransfer(address,address,uint256)",
            "stop()",
            "start()",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "AGT2ATNSwap(address,address)",
            "tokenFallback(address,uint256,bytes)",
            "tokenFallback(address,uint256)",
            "onTokenTransfer(address,address,uint256)",
            "changeGasRequired(uint256)",
            "claimTokens(address)"
        ],
        "initial_state": {
            "onTokenTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "stop()": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "AGT2ATNSwap(address,address)": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "tokenFallback(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "changeGasRequired(uint256)": {
                "argument": {
                    "_gasRequired": "uint256"
                },
                "contract": {
                    "gasRequired": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "gasRequired": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "onTokenTransfer(address,address,uint256)": [
                565,
                185
            ],
            "setOwner(address)": [
                247,
                97
            ],
            "tokenFallback(address,uint256,bytes)": [
                1097,
                361
            ],
            "tokenFallback(address,uint256)": [
                488,
                163
            ],
            "changeGasRequired(uint256)": [
                698,
                207
            ],
            "claimTokens(address)": [
                1244,
                383
            ],
            "start()": [
                987,
                317
            ],
            "stop()": [
                224,
                75
            ]
        },
        "block_CALL_mapping": {
            "block4811": [
                "authority.canCall(src, this, sig)"
            ],
            "jump4811": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block4811_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block4811_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block4811_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block4811_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2600": [
                "ATN.balanceOf(this)",
                "ATN.balanceOf(this)"
            ],
            "block4811_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block2154_0": [
                "ATN.transfer(_from, _value)"
            ],
            "block3789": [
                "token.balanceOf(this)"
            ],
            "jump4811_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2154": [
                "ATN.transfer(_from, _value)",
                "ATN.transfer(_from, _value)"
            ],
            "jump4047": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "block2600": [
                "ATN.balanceOf(this)"
            ],
            "block4047": [
                "token.transfer(owner, balance)"
            ],
            "jump3499": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block2154": [
                "ATN.transfer(_from, _value)"
            ],
            "jump4811_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump4811_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump4811_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump3789": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump4811_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3499": [
                "owner.transfer(this.balance)"
            ],
            "jump2154_0": [
                "ATN.transfer(_from, _value)",
                "ATN.transfer(_from, _value)"
            ]
        }
    }
}