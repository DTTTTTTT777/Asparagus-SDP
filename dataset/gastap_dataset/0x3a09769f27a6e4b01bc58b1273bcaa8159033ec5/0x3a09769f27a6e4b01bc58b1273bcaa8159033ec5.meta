{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "SwapToken": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "SwapToken(string,string,uint8,string,string,uint8,address,uint256,uint256)",
            "defineProjectWallet(address)",
            "mintBuyerToken(address,uint256)",
            "mintIssuerToken(address,uint256)",
            "distroyBuyerToken(uint256)",
            "distroyIssuerToken(uint256)",
            "transferBuyer(address,uint256)",
            "transferIssue(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "setPrices(uint256,uint256,uint256)",
            "buyBuyerTokens()",
            "buyIssuerTokens()",
            "setCreditStatus(bool)",
            "sellBuyerTokens(uint256)",
            "getPremium()",
            "sellIssuerTokens(uint256)",
            "moveFunds()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "SwapToken(string,string,uint8,string,string,uint8,address,uint256,uint256)": {
                "argument": {
                    "_buyerTokenName": "string",
                    "_buyerSymbol": "string",
                    "_buyerDecimals": "uint8",
                    "_issuerTokenName": "string",
                    "_issuerSymbol": "string",
                    "_issuerDecimals": "uint8",
                    "_startBlock": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "defineProjectWallet(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "mintBuyerToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "mintIssuerToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "distroyBuyerToken(uint256)": {
                "argument": {
                    "burnAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "distroyIssuerToken(uint256)": {
                "argument": {
                    "burnAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "transferBuyer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "transferIssue(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "setPrices(uint256,uint256,uint256)": {
                "argument": {
                    "newBuyPrice": "uint256",
                    "newIssuePrice": "uint256",
                    "coveragePerToken": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "buyBuyerTokens()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "buyIssuerTokens()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "setCreditStatus(bool)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "sellBuyerTokens(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "getPremium()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "sellIssuerTokens(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "moveFunds()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "buyerTokenName": "string",
                    "buyerSymbol": "string",
                    "buyerDecimals": "uint8",
                    "totalBuyerSupply": "uint256",
                    "issuerTokenName": "string",
                    "issuerSymbol": "string",
                    "issuerDecimals": "uint8",
                    "totalIssuerSupply": "uint256",
                    "buyPrice": "uint256",
                    "issuePrice": "uint256",
                    "cPT": "uint256",
                    "premium": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferBuyer(address,uint256)": [
                1741,
                383
            ],
            "distroyIssuerToken(uint256)": [
                724,
                119
            ],
            "approve(address,uint256)": [
                479,
                75
            ],
            "moveFunds()": [
                2604,
                625
            ],
            "distroyBuyerToken(uint256)": [
                1288,
                273
            ],
            "sellBuyerTokens(uint256)": [
                1818,
                405
            ],
            "buyIssuerTokens()": [
                1134,
                229
            ],
            "buyBuyerTokens()": [
                3027,
                779
            ],
            "sellIssuerTokens(uint256)": [
                2919,
                735
            ],
            "approveAndCall(address,uint256,bytes)": [
                2433,
                603
            ],
            "transferOwnership(address)": [
                3037,
                801
            ],
            "mintIssuerToken(address,uint256)": [
                769,
                141
            ],
            "mintBuyerToken(address,uint256)": [
                846,
                163
            ],
            "setPrices(uint256,uint256,uint256)": [
                2368,
                581
            ],
            "setCreditStatus(bool)": [
                1883,
                427
            ],
            "transferIssue(address,uint256)": [
                1333,
                295
            ],
            "defineProjectWallet(address)": [
                923,
                185
            ]
        },
        "block_CALL_mapping": {
            "block8519": [
                "msg.sender.send(revenue)"
            ],
            "block7950": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block6872": [
                "msg.sender.send(revenue)"
            ],
            "jump7950": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block8083": [
                "project_wallet.send(this.balance)"
            ],
            "jump6872": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump8519": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump8083": [
                "project_wallet.send(this.balance)",
                "project_wallet.send(this.balance)"
            ]
        }
    }
}