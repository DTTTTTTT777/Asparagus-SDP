{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "divToMul(uint256,uint256,uint256)",
            "mulToDiv(uint256,uint256,uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "divToMul(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "mulToDiv(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "startIco": "uint256",
                    "currentType": "uint256",
                    "datetime": "uint256"
                },
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DAY_IN_SECONDS": "uint256",
                    "BASE": "uint256",
                    "preIcoPrice": "uint256",
                    "icoPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "owners": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                245,
                97
            ],
            "balanceOf(address)": [
                522,
                163
            ],
            "totalSupply()": [
                346,
                119
            ],
            "allowance(address,address)": [
                710,
                207
            ],
            "transferFrom(address,address,uint256)": [
                389,
                141
            ],
            "transfer(address,uint256)": [
                609,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "VINNDTokenContract": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "divToMul(uint256,uint256,uint256)",
            "mulToDiv(uint256,uint256,uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "VINNDTokenContract(address)",
            "burnTokens(address,uint256)",
            "emitTokens(address,uint256)",
            "getOwner(uint256)",
            "getOwnerCount()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "divToMul(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mulToDiv(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "startIco": "uint256",
                    "currentType": "uint256",
                    "datetime": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "VINNDTokenContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwner(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getOwnerCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getOwnerCount()": [
                1528,
                361
            ],
            "approve(address,uint256)": [
                477,
                119
            ],
            "getOwner(uint256)": [
                1206,
                295
            ],
            "emitTokens(address,uint256)": [
                1571,
                383
            ],
            "totalSupply()": [
                655,
                163
            ],
            "burnTokens(address,uint256)": [
                578,
                141
            ],
            "balanceOf(address)": [
                874,
                229
            ],
            "transferFrom(address,address,uint256)": [
                698,
                185
            ],
            "allowance(address,address)": [
                1409,
                339
            ],
            "transfer(address,uint256)": [
                1105,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "VINContract": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "divToMul(uint256,uint256,uint256)",
            "mulToDiv(uint256,uint256,uint256)",
            "volumeBonus(uint256)",
            "dateBonus(uint256,uint256,uint256)",
            "VINContract()",
            "initialize(address,address)",
            "setType(VINContract.Type)",
            "setStage(VINContract.Stage)",
            "setNewOwner(address)",
            "buyTokens(address,uint256,uint256)",
            "fallback()",
            "burnTokens(address,uint256)",
            "sendTokensToFounders()",
            "emitTokensToOtherWallet(address,uint256,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "divToMul(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "mulToDiv(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "volumeBonus(uint256)": {
                "argument": {
                    "etherValue": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "dateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "startIco": "uint256",
                    "currentType": "uint256",
                    "datetime": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "VINContract()": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "initialize(address,address)": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "setType(VINContract.Type)": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "setStage(VINContract.Stage)": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "buyTokens(address,uint256,uint256)": {
                "argument": {
                    "datetime": "uint256",
                    "_value": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "sendTokensToFounders()": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "emitTokensToOtherWallet(address,uint256,uint256)": {
                "argument": {
                    "_datetime": "uint256",
                    "_ether": "uint256"
                },
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startPresaleDate": "uint256",
                    "endPresaleDate": "uint256",
                    "startICODate": "uint256",
                    "endICODate": "uint256",
                    "totalCap": "uint256",
                    "ICOCap": "uint256",
                    "presaleCap": "uint256",
                    "totalBountyTokens": "uint256",
                    "PRICE": "uint256",
                    "ICOPRICE": "uint256",
                    "foundersRewardTime": "uint256",
                    "totalSoldOnICO": "uint256",
                    "totalSoldOnPresale": "uint256",
                    "totalEther": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "initialize(address,address)": [
                1078,
                176
            ],
            "emitTokensToOtherWallet(address,uint256,uint256)": [
                2066,
                572
            ],
            "burnTokens(address,uint256)": [
                3413,
                946
            ],
            "setNewOwner(address)": [
                2244,
                638
            ],
            "sendTokensToFounders()": [
                925,
                110
            ]
        },
        "block_CALL_mapping": {
            "jump2874_4": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump4713": [
                "VINToken.emitTokens(_bounty, totalBountyTokens)",
                "VINToken.emitTokens(_bounty, totalBountyTokens)"
            ],
            "block4713": [
                "VINToken.emitTokens(_bounty, totalBountyTokens)"
            ],
            "block2874_1": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block2874_3": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block3413": [
                "VINToken.burnTokens(_from, _value)"
            ],
            "jump2874_1": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block2874": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump2874_0": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump3413": [
                "VINToken.burnTokens(_from, _value)",
                "VINToken.burnTokens(_from, _value)"
            ],
            "jump2874_2": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump2874_3": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block2874_4": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump2874": [
                "VINToken.emitTokens(_buyer, tokensToEmit)",
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block2874_2": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "block3998": [
                "VINToken.emitTokens(founder, result)"
            ],
            "block2874_0": [
                "VINToken.emitTokens(_buyer, tokensToEmit)"
            ],
            "jump3998": [
                "VINToken.emitTokens(founder, result)",
                "VINToken.emitTokens(founder, result)"
            ]
        }
    }
}