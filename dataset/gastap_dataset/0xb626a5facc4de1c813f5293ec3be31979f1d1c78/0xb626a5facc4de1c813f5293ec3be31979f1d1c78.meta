{
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "IBancorConverterExtensions": {
        "function_list": [
            "formula()",
            "gasPriceLimit()",
            "quickConverter()"
        ],
        "initial_state": {
            "formula()": {
                "argument": {},
                "contract": {}
            },
            "gasPriceLimit()": {
                "argument": {},
                "contract": {}
            },
            "quickConverter()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "quickConverter()": [
                266,
                119
            ],
            "gasPriceLimit()": [
                179,
                97
            ],
            "formula()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "IBancorGasPriceLimit": {
        "function_list": [
            "gasPrice()"
        ],
        "initial_state": {
            "gasPrice()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "gasPrice()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Managed": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {}
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptManagement()": [
                277,
                119
            ],
            "transferManagement(address)": [
                300,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                500,
                185
            ],
            "transferTokenOwnership(address)": [
                169,
                75
            ],
            "owner()": [
                547,
                207
            ],
            "acceptTokenOwnership()": [
                236,
                97
            ],
            "transferOwnership(address)": [
                721,
                251
            ],
            "acceptOwnership()": [
                477,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump2182": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump1401": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block1152": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2182": [
                "_token.transfer(_to, _amount)"
            ],
            "block2970": [
                "token.disableTransfers(_disable)"
            ],
            "jump1764": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "jump2970": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1401": [
                "token.acceptOwnership()"
            ],
            "jump1152": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ]
        }
    },
    "BancorConverter": {
        "function_list": [
            "Managed()",
            "transferManagement(address)",
            "acceptManagement()",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)",
            "reserveTokenCount()",
            "convertibleTokenCount()",
            "convertibleToken(uint16)",
            "setExtensions(IBancorConverterExtensions)",
            "setQuickBuyPath(IERC20Token[])",
            "clearQuickBuyPath()",
            "getQuickBuyPathLength()",
            "disableConversions(bool)",
            "setConversionFee(uint32)",
            "getConversionFeeAmount(uint256)",
            "addReserve(IERC20Token,uint32,bool)",
            "updateReserve(IERC20Token,uint32,bool,uint256)",
            "disableReservePurchases(IERC20Token,bool)",
            "getReserveBalance(IERC20Token)",
            "getReturn(IERC20Token,IERC20Token,uint256)",
            "getPurchaseReturn(IERC20Token,uint256)",
            "getSaleReturn(IERC20Token,uint256)",
            "convert(IERC20Token,IERC20Token,uint256,uint256)",
            "buy(IERC20Token,uint256,uint256)",
            "sell(IERC20Token,uint256,uint256)",
            "quickConvert(IERC20Token[],uint256,uint256)",
            "change(IERC20Token,IERC20Token,uint256,uint256)",
            "quickChange(IERC20Token[],uint256,uint256)",
            "quickBuy(uint256)",
            "hasQuickBuyEtherToken()",
            "getQuickBuyEtherToken()",
            "getSaleReturn(IERC20Token,uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Managed()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferManagement(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptManagement()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convertibleToken(uint16)": {
                "argument": {
                    "_tokenIndex": "uint16"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getReturn(IERC20Token,IERC20Token,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "convert(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "change(IERC20Token,IERC20Token,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "BancorConverter(ISmartToken,IBancorConverterExtensions,uint32,IERC20Token,uint32)": {
                "argument": {
                    "_maxConversionFee": "uint32",
                    "_reserveRatio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "reserveTokenCount()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setExtensions(IBancorConverterExtensions)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setQuickBuyPath(IERC20Token[])": {
                "argument": {
                    "_path": "IERC20Token[]"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "clearQuickBuyPath()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getQuickBuyPathLength()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableConversions(bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "setConversionFee(uint32)": {
                "argument": {
                    "_conversionFee": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getConversionFeeAmount(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "addReserve(IERC20Token,uint32,bool)": {
                "argument": {
                    "_ratio": "uint32"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "updateReserve(IERC20Token,uint32,bool,uint256)": {
                "argument": {
                    "_ratio": "uint32",
                    "_virtualBalance": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "disableReservePurchases(IERC20Token,bool)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getReserveBalance(IERC20Token)": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getPurchaseReturn(IERC20Token,uint256)": {
                "argument": {
                    "_depositAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256)": {
                "argument": {
                    "_sellAmount": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "buy(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_depositAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "sell(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "quickConvert(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "quickChange(IERC20Token[],uint256,uint256)": {
                "argument": {
                    "_path": "IERC20Token[]",
                    "_amount": "uint256",
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "quickBuy(uint256)": {
                "argument": {
                    "_minReturn": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "hasQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getQuickBuyEtherToken()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "getSaleReturn(IERC20Token,uint256,uint256)": {
                "argument": {
                    "_sellAmount": "uint256",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_CRR": "uint32",
                    "MAX_CONVERSION_FEE": "uint32",
                    "version": "string",
                    "converterType": "string",
                    "reserveTokens": "IERC20Token[]",
                    "quickBuyPath": "IERC20Token[]",
                    "totalReserveRatio": "uint32",
                    "maxConversionFee": "uint32",
                    "conversionFee": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "clearQuickBuyPath()": [
                1836,
                361
            ],
            "getQuickBuyEtherToken()": [
                3505,
                801
            ],
            "disableTokenTransfers(bool)": [
                2724,
                581
            ],
            "transferTokenOwnership(address)": [
                958,
                119
            ],
            "transferManagement(address)": [
                4150,
                977
            ],
            "acceptTokenOwnership()": [
                1386,
                251
            ],
            "convertibleTokenCount()": [
                3592,
                823
            ],
            "getConversionFeeAmount(uint256)": [
                1226,
                207
            ],
            "reserveTokenCount()": [
                2956,
                669
            ],
            "acceptManagement()": [
                3690,
                867
            ],
            "quickBuy(uint256)": [
                2649,
                537
            ],
            "convertibleToken(uint16)": [
                4585,
                1087
            ],
            "transferOwnership(address)": [
                4698,
                1109
            ],
            "setConversionFee(uint32)": [
                4405,
                1043
            ],
            "getQuickBuyPathLength()": [
                2858,
                625
            ],
            "disableConversions(bool)": [
                1025,
                141
            ],
            "owner()": [
                14552,
                912
            ],
            "hasQuickBuyEtherToken()": [
                3458,
                779
            ],
            "acceptOwnership()": [
                2701,
                559
            ]
        },
        "block_CALL_mapping": {
            "block14552": [
                "token.owner()"
            ],
            "block6614_26": [
                "_reserveToken.balanceOf(this)"
            ],
            "block15813": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11244_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11244_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11244_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11244_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block16526_2": [
                "token.issue(msg.sender, amount)"
            ],
            "block16526_3": [
                "token.issue(msg.sender, amount)"
            ],
            "block16526_0": [
                "token.issue(msg.sender, amount)"
            ],
            "block16526_1": [
                "token.issue(msg.sender, amount)"
            ],
            "block6614_8": [
                "_reserveToken.balanceOf(this)"
            ],
            "block8222": [
                "token.owner()"
            ],
            "block12362_1": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block12362_2": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block12362_3": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block13028": [
                "token.totalSupply()"
            ],
            "block6614_9": [
                "_reserveToken.balanceOf(this)"
            ],
            "block20341": [
                "extensions.formula()"
            ],
            "block16716": [
                "token.totalSupply()"
            ],
            "block5892_3": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5892_2": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5892_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block5892_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump12595": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14274": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "jump16716": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block6614_3": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump20566": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block6614_0": [
                "_reserveToken.balanceOf(this)"
            ],
            "block11086": [
                "extensions.gasPriceLimit()"
            ],
            "jump6205_2": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump6205_3": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump6205_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump6205_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump20566_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20566_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)",
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump15393_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block6205": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block6614": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_6": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_7": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump16262_3": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16262_2": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16262_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump16262_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block11244": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block12175_2": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12175_3": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block12175_0": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block6614_5": [
                "_reserveToken.balanceOf(this)"
            ],
            "block12175_1": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump6205": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)",
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump16716_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16716_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16716_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump16716_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump5892_1": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump5892_0": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump5892_3": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump5892_2": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block15168_5": [
                "extensions.formula()"
            ],
            "jump11519_2": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11519_1": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump11519_0": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block15168_1": [
                "extensions.formula()"
            ],
            "block15168_0": [
                "extensions.formula()"
            ],
            "block15168_3": [
                "extensions.formula()"
            ],
            "block15168_2": [
                "extensions.formula()"
            ],
            "jump6614_18": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_19": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_16": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump5648": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "jump6614_14": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_15": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_12": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_13": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_10": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_11": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block11086_0": [
                "extensions.gasPriceLimit()"
            ],
            "jump5648_3": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block11086_2": [
                "extensions.gasPriceLimit()"
            ],
            "block11086_3": [
                "extensions.gasPriceLimit()"
            ],
            "jump15655_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15655_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15655_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump15655_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump5427": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump11244": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump20341_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump20341_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump11763_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11763_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11763_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11763_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block11763_0": [
                "token.totalSupply()"
            ],
            "block11763_1": [
                "token.totalSupply()"
            ],
            "block11763_2": [
                "token.totalSupply()"
            ],
            "block11763_3": [
                "token.totalSupply()"
            ],
            "jump10818": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump16262": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)",
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block6614_30": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump10038": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)",
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block16262_1": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16262_0": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16262_3": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "block16262_2": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump6614_8": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_9": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_4": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_5": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_6": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_7": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_0": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_1": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_2": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block12595": [
                "token.totalSupply()"
            ],
            "jump5074": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump6614_27": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_26": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_25": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_24": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_23": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_22": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_21": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_20": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_30": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_29": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump6614_28": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block12362_0": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump15655": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block16526": [
                "token.issue(msg.sender, amount)"
            ],
            "jump9517": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump19933_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump19933_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump13028": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block15655_2": [
                "extensions.gasPriceLimit()"
            ],
            "block15655_3": [
                "extensions.gasPriceLimit()"
            ],
            "block15655_0": [
                "extensions.gasPriceLimit()"
            ],
            "block15655_1": [
                "extensions.gasPriceLimit()"
            ],
            "jump14552": [
                "token.owner()",
                "token.owner()"
            ],
            "block15655": [
                "extensions.gasPriceLimit()"
            ],
            "block13028_4": [
                "token.totalSupply()"
            ],
            "block13028_5": [
                "token.totalSupply()"
            ],
            "block13028_2": [
                "token.totalSupply()"
            ],
            "block13028_3": [
                "token.totalSupply()"
            ],
            "block13028_0": [
                "token.totalSupply()"
            ],
            "block13028_1": [
                "token.totalSupply()"
            ],
            "jump15813": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15168_1": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block12595_0": [
                "token.totalSupply()"
            ],
            "block12595_1": [
                "token.totalSupply()"
            ],
            "block12595_2": [
                "token.totalSupply()"
            ],
            "block12595_3": [
                "token.totalSupply()"
            ],
            "jump15393": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump13028_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13028_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13028_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13028_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13028_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump13028_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump15168_6": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15168_5": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15168_4": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15168_3": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump15168_2": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump7115": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump15168_0": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "block14274": [
                "token.disableTransfers(_disable)"
            ],
            "block11763": [
                "token.totalSupply()"
            ],
            "block5074_3": [
                "extensions.quickConverter()"
            ],
            "block5074_2": [
                "extensions.quickConverter()"
            ],
            "block5074_1": [
                "extensions.quickConverter()"
            ],
            "block5074_0": [
                "extensions.quickConverter()"
            ],
            "block14962_0": [
                "token.totalSupply()"
            ],
            "block14962_1": [
                "token.totalSupply()"
            ],
            "block14962_2": [
                "token.totalSupply()"
            ],
            "block14962_3": [
                "token.totalSupply()"
            ],
            "block14962_4": [
                "token.totalSupply()"
            ],
            "block14962_5": [
                "token.totalSupply()"
            ],
            "block14962_6": [
                "token.totalSupply()"
            ],
            "jump6614": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump14552_6": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_5": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_4": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_3": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_2": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14552_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump14962_5": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block19933": [
                "token.owner()"
            ],
            "block20341_4": [
                "extensions.formula()"
            ],
            "block20341_5": [
                "extensions.formula()"
            ],
            "block20341_6": [
                "extensions.formula()"
            ],
            "block20341_0": [
                "extensions.formula()"
            ],
            "block20341_1": [
                "extensions.formula()"
            ],
            "block20341_2": [
                "extensions.formula()"
            ],
            "block20341_3": [
                "extensions.formula()"
            ],
            "block6614_2": [
                "_reserveToken.balanceOf(this)"
            ],
            "block15393": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump15393_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump6614_3": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "jump15393_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump16526": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block6614_25": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_24": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_27": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_1": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_21": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_20": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_23": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_22": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump15393_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block6614_29": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_28": [
                "_reserveToken.balanceOf(this)"
            ],
            "jump15393_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block7115": [
                "token.totalSupply()"
            ],
            "block6614_4": [
                "_reserveToken.balanceOf(this)"
            ],
            "block20566": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block14552_6": [
                "token.owner()"
            ],
            "block5648": [
                "token.issue(quickConverter, _amount)"
            ],
            "jump12362_2": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump12362_3": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump12362_0": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump12362_1": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block10038": [
                "ITokenHolder(token).withdrawTokens(_token, _to, _amount)"
            ],
            "block5892": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "jump12175": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump5074_1": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump5074_0": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump5074_3": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump5074_2": [
                "extensions.quickConverter()",
                "extensions.quickConverter()"
            ],
            "jump11519_3": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block12362": [
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "block15168_4": [
                "extensions.formula()"
            ],
            "block19933_5": [
                "token.owner()"
            ],
            "block19933_4": [
                "token.owner()"
            ],
            "block19933_6": [
                "token.owner()"
            ],
            "block19933_1": [
                "token.owner()"
            ],
            "block19933_0": [
                "token.owner()"
            ],
            "block19933_3": [
                "token.owner()"
            ],
            "block19933_2": [
                "token.owner()"
            ],
            "block15168_6": [
                "extensions.formula()"
            ],
            "jump11519": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block9517": [
                "token.acceptOwnership()"
            ],
            "block20566_6": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_5": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_4": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_3": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_2": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_1": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "block20566_0": [
                "extensions.formula().calculateSaleReturn(_totalSupply, reserveBalance, reserve.ratio, _sellAmount)"
            ],
            "jump20341": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump19933": [
                "token.owner()",
                "token.owner()"
            ],
            "jump5427_1": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump5427_0": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump5427_3": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "jump5427_2": [
                "token.destroy(msg.sender, _amount)",
                "token.destroy(msg.sender, _amount)"
            ],
            "block15393_5": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_4": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_6": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_3": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block15393_2": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump15813_0": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15813_1": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15813_2": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump15813_3": [
                "extensions.gasPriceLimit().gasPrice()",
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block16716_1": [
                "token.totalSupply()"
            ],
            "block16716_0": [
                "token.totalSupply()"
            ],
            "block16716_3": [
                "token.totalSupply()"
            ],
            "block16716_2": [
                "token.totalSupply()"
            ],
            "jump7473": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "block6205_0": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block6205_1": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block6205_2": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "block6205_3": [
                "quickConverter.convertFor.value(msg.value)(_path, _amount, _minReturn, msg.sender)"
            ],
            "jump14962_6": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14962_4": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block14962": [
                "token.totalSupply()"
            ],
            "jump14962_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14962_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14962_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump14962_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block14552_1": [
                "token.owner()"
            ],
            "block14552_0": [
                "token.owner()"
            ],
            "block14552_3": [
                "token.owner()"
            ],
            "block14552_2": [
                "token.owner()"
            ],
            "block14552_5": [
                "token.owner()"
            ],
            "block14552_4": [
                "token.owner()"
            ],
            "jump15393_1": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "jump15393_0": [
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)",
                "extensions.formula().calculatePurchaseReturn(tokenSupply, reserveBalance, reserve.ratio, _depositAmount)"
            ],
            "block5648_0": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5648_1": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5648_2": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5648_3": [
                "token.issue(quickConverter, _amount)"
            ],
            "block5427_3": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block5427_2": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block5427_1": [
                "token.destroy(msg.sender, _amount)"
            ],
            "block5427_0": [
                "token.destroy(msg.sender, _amount)"
            ],
            "jump6614_17": [
                "_reserveToken.balanceOf(this)",
                "_reserveToken.balanceOf(this)"
            ],
            "block11519": [
                "token.balanceOf(msg.sender)"
            ],
            "jump8222": [
                "token.owner()",
                "token.owner()"
            ],
            "block6614_18": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_19": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_14": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_15": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_16": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_17": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_10": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_11": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_12": [
                "_reserveToken.balanceOf(this)"
            ],
            "block6614_13": [
                "_reserveToken.balanceOf(this)"
            ],
            "block7473": [
                "token.transferOwnership(_newOwner)"
            ],
            "block15168": [
                "extensions.formula()"
            ],
            "jump5892": [
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)",
                "fromToken.transferFrom(msg.sender, quickConverter, _amount)"
            ],
            "block11519_1": [
                "token.balanceOf(msg.sender)"
            ],
            "block11519_0": [
                "token.balanceOf(msg.sender)"
            ],
            "block11519_3": [
                "token.balanceOf(msg.sender)"
            ],
            "block11519_2": [
                "token.balanceOf(msg.sender)"
            ],
            "jump16526_0": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16526_1": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16526_2": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "jump16526_3": [
                "token.issue(msg.sender, amount)",
                "token.issue(msg.sender, amount)"
            ],
            "block5074": [
                "extensions.quickConverter()"
            ],
            "block10818": [
                "_token.transfer(_to, _amount)"
            ],
            "block16262": [
                "_reserveToken.transferFrom(msg.sender, this, _depositAmount)"
            ],
            "jump12362": [
                "_reserveToken.transfer(msg.sender, amount)",
                "_reserveToken.transfer(msg.sender, amount)"
            ],
            "jump15168": [
                "extensions.formula()",
                "extensions.formula()"
            ],
            "jump14962": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump11086": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "block12175": [
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump5648_2": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block11086_1": [
                "extensions.gasPriceLimit()"
            ],
            "jump5648_0": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "jump5648_1": [
                "token.issue(quickConverter, _amount)",
                "token.issue(quickConverter, _amount)"
            ],
            "block15813_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15813_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15813_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block15813_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump11086_2": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11086_3": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11086_0": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11086_1": [
                "extensions.gasPriceLimit()",
                "extensions.gasPriceLimit()"
            ],
            "jump11763": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12175_0": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12175_1": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12175_2": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "jump12175_3": [
                "token.destroy(msg.sender, _sellAmount)",
                "token.destroy(msg.sender, _sellAmount)"
            ],
            "block11244_0": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11244_1": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11244_2": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "block11244_3": [
                "extensions.gasPriceLimit().gasPrice()"
            ],
            "jump12595_2": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12595_3": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12595_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12595_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block5427": [
                "token.destroy(msg.sender, _amount)"
            ]
        }
    }
}