{
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "PylonToken": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "crowdsale()",
            "PylonToken(uint256,string,uint8,string,address,address,uint256,uint256,uint256)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "mintToken(address,uint256)",
            "freezeAccount(address,bool)",
            "fallback()",
            "buyTokens(address)",
            "buyIco(address)",
            "buyPreIco(address)",
            "checkGoalReached()",
            "validPurchase()",
            "getBlockNumber()",
            "pauseContribution()",
            "resumeContribution()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "crowdsale()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "PylonToken(uint256,string,uint8,string,address,address,uint256,uint256,uint256)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string",
                    "fundingGoalInWeis": "uint256",
                    "durationInMinutes": "uint256",
                    "weisCostOfEachToken": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "freezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "buyIco(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "buyPreIco(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "pauseContribution()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            },
            "resumeContribution()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "totalTokensToSend": "uint256",
                    "maxEtherInvestment": "uint256",
                    "maxTokens": "uint256",
                    "bonusCap": "uint256",
                    "pylonSelled": "uint256",
                    "startBlockBonus": "uint256",
                    "endBlockBonus1": "uint256",
                    "endBlockBonus2": "uint256",
                    "endBlockBonus3": "uint256",
                    "qnt10k": "uint256",
                    "startBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "mintToken(address,uint256)": [
                1549,
                471
            ],
            "checkGoalReached()": [
                489,
                75
            ],
            "pauseContribution()": [
                1162,
                339
            ],
            "burnFrom(address,uint256)": [
                1626,
                493
            ],
            "transferOwnership(address)": [
                2606,
                845
            ],
            "crowdsale()": [
                2044,
                603
            ],
            "burn(uint256)": [
                964,
                251
            ],
            "resumeContribution()": [
                2321,
                713
            ],
            "transfer(address,uint256)": [
                2153,
                669
            ],
            "freezeAccount(address,bool)": [
                2430,
                779
            ],
            "buyTokens(address)": [
                2552,
                823
            ]
        },
        "block_CALL_mapping": {
            "jump9911": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ],
            "block9911_1": [
                "beneficiary.transfer(weiAmount)"
            ],
            "block9911_0": [
                "beneficiary.transfer(weiAmount)"
            ],
            "jump10753_0": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ],
            "jump10753_1": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ],
            "jump9911_1": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ],
            "block10753_0": [
                "beneficiary.transfer(weiAmount)"
            ],
            "block10753_1": [
                "beneficiary.transfer(weiAmount)"
            ],
            "jump10753": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ],
            "block9911": [
                "beneficiary.transfer(weiAmount)"
            ],
            "block10753": [
                "beneficiary.transfer(weiAmount)"
            ],
            "jump9911_0": [
                "beneficiary.transfer(weiAmount)",
                "beneficiary.transfer(weiAmount)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}