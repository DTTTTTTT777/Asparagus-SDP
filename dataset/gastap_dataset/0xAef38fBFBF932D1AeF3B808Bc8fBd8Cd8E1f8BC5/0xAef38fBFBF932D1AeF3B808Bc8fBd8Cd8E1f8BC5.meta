{
    "ICreditBOND": {
        "function_list": [
            "getBondMultiplier(uint256,uint256)",
            "getNewCoinsIssued(uint256,uint256,uint256)"
        ],
        "initial_state": {
            "getBondMultiplier(uint256,uint256)": {
                "argument": {
                    "_creditAmount": "uint256",
                    "_locktime": "uint256"
                },
                "contract": {}
            },
            "getNewCoinsIssued(uint256,uint256,uint256)": {
                "argument": {
                    "_lockedBalance": "uint256",
                    "_blockDifference": "uint256",
                    "_percentReward": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getBondMultiplier(uint256,uint256)": [
                78,
                75
            ],
            "getNewCoinsIssued(uint256,uint256,uint256)": [
                150,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "IERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "CreditBIT": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "CreditBIT()",
            "balanceOf(address)",
            "lockedBalanceOf(address)",
            "getAccountData(address)",
            "lockBalance(uint256,uint256)",
            "mintMigrationTokens(address,uint256)",
            "claimBondReward()",
            "claimGameReward(address,uint256,uint256)",
            "mintBonusTokensForGames(uint256)",
            "mint(uint256,address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "setCreditBond(address)",
            "getCreditBondAddress()",
            "setCreditDaoAddress(address)",
            "setCreditGameAddress(address)",
            "setCreditMcAddress(address)",
            "lockToken()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "CreditBIT()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "lockedBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "getAccountData(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "lockBalance(uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_lockForBlocks": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "mintMigrationTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "claimBondReward()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "claimGameReward(address,uint256,uint256)": {
                "argument": {
                    "_lockedTokenAmount": "uint256",
                    "_lockTime": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "mintBonusTokensForGames(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "mint(uint256,address)": {
                "argument": {
                    "_newCreditsIssued": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "setCreditBond(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "getCreditBondAddress()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "setCreditDaoAddress(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "setCreditGameAddress(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "setCreditMcAddress(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "lockToken()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalAvaliableSupply": "uint256",
                    "totalLockedSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                875,
                185
            ],
            "setCreditGameAddress(address)": [
                745,
                141
            ],
            "allowance(address,address)": [
                2948,
                691
            ],
            "transferFrom(address,address,uint256)": [
                993,
                229
            ],
            "lockToken()": [
                2582,
                603
            ],
            "approve(address,uint256)": [
                644,
                119
            ],
            "lockBalance(uint256,uint256)": [
                918,
                207
            ],
            "lockedBalanceOf(address)": [
                1493,
                361
            ],
            "setCreditDaoAddress(address)": [
                1319,
                317
            ],
            "balanceOf(address)": [
                1882,
                449
            ],
            "approveAndCall(address,uint256,bytes)": [
                2712,
                647
            ],
            "getCreditBondAddress()": [
                413,
                75
            ],
            "setCreditMcAddress(address)": [
                2625,
                625
            ],
            "mintBonusTokensForGames(uint256)": [
                2883,
                669
            ],
            "mintMigrationTokens(address,uint256)": [
                1175,
                273
            ],
            "setCreditBond(address)": [
                2394,
                559
            ],
            "claimGameReward(address,uint256,uint256)": [
                1969,
                471
            ],
            "getAccountData(address)": [
                1724,
                405
            ],
            "transfer(address,uint256)": [
                2481,
                581
            ],
            "claimBondReward()": [
                1839,
                427
            ]
        },
        "block_CALL_mapping": {
            "block8485": [
                "creditBond.getNewCoinsIssued(\n            _lockedTokenAmount, \n            _lockTime, \n            creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number))"
            ],
            "jump10210": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block6965": [
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)"
            ],
            "jump8485": [
                "creditBond.getNewCoinsIssued(\n            _lockedTokenAmount, \n            _lockTime, \n            creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number))",
                "creditBond.getNewCoinsIssued(\n            _lockedTokenAmount, \n            _lockTime, \n            creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number))"
            ],
            "jump8330": [
                "creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number)",
                "creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number)"
            ],
            "jump6965": [
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)",
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)"
            ],
            "block6965_0": [
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)"
            ],
            "block8330": [
                "creditBond.getBondMultiplier(_lockedTokenAmount, _lockTime + block.number)"
            ],
            "block4374": [
                "creditBond.getBondMultiplier(realAmount, realBlocksLocked)"
            ],
            "jump6965_0": [
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)",
                "creditBond.getNewCoinsIssued(\n            balances[msg.sender].lockedBalance, \n            blockDifference, \n            balances[msg.sender].bondMultiplier)"
            ],
            "jump4374": [
                "creditBond.getBondMultiplier(realAmount, realBlocksLocked)",
                "creditBond.getBondMultiplier(realAmount, realBlocksLocked)"
            ],
            "block10210": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    }
}