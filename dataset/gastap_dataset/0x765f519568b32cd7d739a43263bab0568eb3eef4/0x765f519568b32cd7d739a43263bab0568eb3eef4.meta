{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "totalSupply()": [
                303,
                97
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "OTC": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "fallback()",
            "createSwap(uint256,uint256,address,address,address)",
            "cancelSwap(uint256)",
            "swap(uint256)",
            "canSwap(uint256,address)",
            "swapsFor(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "createSwap(uint256,uint256,address,address,address)": {
                "argument": {
                    "amountGive": "uint256",
                    "amountGet": "uint256"
                },
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "cancelSwap(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "swap(uint256)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "canSwap(uint256,address)": {
                "argument": {
                    "id": "uint256"
                },
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            },
            "swapsFor(address)": {
                "argument": {},
                "contract": {
                    "swaps": "OTC.Swap[]"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                295,
                141
            ],
            "unpause()": [
                180,
                75
            ],
            "canSwap(uint256,address)": [
                601,
                229
            ],
            "swap(uint256)": [
                405,
                185
            ],
            "createSwap(uint256,uint256,address,address,address)": [
                450,
                207
            ],
            "cancelSwap(uint256)": [
                203,
                97
            ],
            "swapsFor(address)": [
                702,
                251
            ],
            "transferOwnership(address)": [
                1137,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump2671": [
                "ERC20(swap.tokenGet).transferFrom(msg.sender, swap.buyer, swap.amountGet)",
                "ERC20(swap.tokenGet).transferFrom(msg.sender, swap.buyer, swap.amountGet)"
            ],
            "block2310": [
                "ERC20(swap.tokenGive).transferFrom(swap.buyer, msg.sender, swap.amountGive)"
            ],
            "block2671": [
                "ERC20(swap.tokenGet).transferFrom(msg.sender, swap.buyer, swap.amountGet)"
            ],
            "jump2310": [
                "ERC20(swap.tokenGive).transferFrom(swap.buyer, msg.sender, swap.amountGive)",
                "ERC20(swap.tokenGive).transferFrom(swap.buyer, msg.sender, swap.amountGive)"
            ]
        }
    }
}