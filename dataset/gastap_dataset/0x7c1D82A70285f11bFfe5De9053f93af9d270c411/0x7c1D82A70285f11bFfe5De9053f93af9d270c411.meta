{
    "AuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Auth": {
        "function_list": [
            "Auth()",
            "setOwner(address)",
            "setAuthority(Authority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "Auth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(Authority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1757": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1757_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block1757": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1757_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC20Events": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Migrations": {
        "function_list": [
            "Migrations()",
            "setCompleted(uint256)",
            "upgrade(address)"
        ],
        "initial_state": {
            "Migrations()": {
                "argument": {},
                "contract": {
                    "last_completed_migration": "uint256"
                }
            },
            "setCompleted(uint256)": {
                "argument": {
                    "completed": "uint256"
                },
                "contract": {
                    "last_completed_migration": "uint256"
                }
            },
            "upgrade(address)": {
                "argument": {},
                "contract": {
                    "last_completed_migration": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setCompleted(uint256)": [
                300,
                141
            ],
            "upgrade(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "block548": [
                "upgraded.setCompleted(last_completed_migration)"
            ],
            "jump548": [
                "upgraded.setCompleted(last_completed_migration)",
                "upgraded.setCompleted(last_completed_migration)"
            ]
        }
    },
    "Note": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Stoppable": {
        "function_list": [
            "Auth()",
            "setOwner(address)",
            "setAuthority(Authority)",
            "isAuthorized(address,bytes4)",
            "stop()",
            "start()"
        ],
        "initial_state": {
            "Auth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(Authority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "stop()": {
                "argument": {},
                "contract": {}
            },
            "start()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                159,
                97
            ],
            "start()": [
                427,
                185
            ],
            "stop()": [
                136,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2419_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2419_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2419": [
                "authority.canCall(src, this, sig)"
            ],
            "block2419_2": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2419": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2419_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2419_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2419_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "Token": {
        "function_list": [
            "stop()",
            "start()",
            "Auth()",
            "setOwner(address)",
            "setAuthority(Authority)",
            "isAuthorized(address,bytes4)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Token(string,bytes32)",
            "setLogic(TokenLogic)",
            "setOwner(address)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "push(address,uint128)",
            "pull(address,uint128)",
            "mint(uint128)",
            "burn(uint128)",
            "setName(string)",
            "setSymbol(bytes32)",
            "fallback()",
            "transferEth(address,uint256)",
            "triggerTansferEvent(address,address,uint256)",
            "payout(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "Auth()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "setAuthority(Authority)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "Token(string,bytes32)": {
                "argument": {
                    "name_": "string",
                    "symbol_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "setLogic(TokenLogic)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "push(address,uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "pull(address,uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "mint(uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "setName(string)": {
                "argument": {
                    "name_": "string"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "setSymbol(bytes32)": {
                "argument": {
                    "symbol_": "bytes32"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "transferEth(address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "triggerTansferEvent(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            },
            "payout(address)": {
                "argument": {},
                "contract": {
                    "symbol": "bytes32",
                    "name": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setSymbol(bytes32)": [
                1469,
                273
            ],
            "push(address,uint128)": [
                1350,
                251
            ],
            "balanceOf(address)": [
                6575,
                929
            ],
            "totalSupply()": [
                4994,
                889
            ],
            "payout(address)": [
                997,
                141
            ],
            "transferFrom(address,address,uint256)": [
                5509,
                3074
            ],
            "setName(string)": [
                2404,
                559
            ],
            "mint(uint128)": [
                6236,
                3022
            ],
            "approve(address,uint256)": [
                896,
                119
            ],
            "transferEth(address,uint256)": [
                2715,
                625
            ],
            "start()": [
                2294,
                515
            ],
            "setOwner(address)": [
                4821,
                2632
            ],
            "burn(uint128)": [
                2079,
                449
            ],
            "triggerTansferEvent(address,address,uint256)": [
                2792,
                647
            ],
            "pull(address,uint128)": [
                1873,
                405
            ],
            "transfer(address,uint256)": [
                2193,
                493
            ],
            "stop()": [
                873,
                97
            ],
            "allowance(address,address)": [
                9076,
                961
            ]
        },
        "block_CALL_mapping": {
            "block6575_0": [
                "logic.balanceOf(who)"
            ],
            "jump6575_0": [
                "logic.balanceOf(who)",
                "logic.balanceOf(who)"
            ],
            "jump8242": [
                "logic.transfer(msg.sender, dst, wad)",
                "logic.transfer(msg.sender, dst, wad)"
            ],
            "block564": [
                "logic.handlePayment(msg.sender, msg.value)"
            ],
            "block8242": [
                "logic.transfer(msg.sender, dst, wad)"
            ],
            "jump3767": [
                "logic.approve(msg.sender, guy, wad)",
                "logic.approve(msg.sender, guy, wad)"
            ],
            "jump3953": [
                "dst.transfer(this.balance)",
                "dst.transfer(this.balance)"
            ],
            "block10366": [
                "authority.canCall(src, this, sig)"
            ],
            "jump6236": [
                "logic.mint(wad)",
                "logic.mint(wad)"
            ],
            "jump10366_9": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump564_0": [
                "logic.handlePayment(msg.sender, msg.value)",
                "logic.handlePayment(msg.sender, msg.value)"
            ],
            "jump564": [
                "logic.handlePayment(msg.sender, msg.value)",
                "logic.handlePayment(msg.sender, msg.value)"
            ],
            "block4437": [
                "logic.transfer(owner, owner_, wad)"
            ],
            "block6575": [
                "logic.balanceOf(who)"
            ],
            "block9076": [
                "logic.allowance(owner, spender)"
            ],
            "jump5509": [
                "logic.transferFrom(src, dst, wad)",
                "logic.transferFrom(src, dst, wad)"
            ],
            "block4821": [
                "logic.setOwner(owner_)"
            ],
            "jump8242_0": [
                "logic.transfer(msg.sender, dst, wad)",
                "logic.transfer(msg.sender, dst, wad)"
            ],
            "jump9076": [
                "logic.allowance(owner, spender)",
                "logic.allowance(owner, spender)"
            ],
            "block10366_6": [
                "authority.canCall(src, this, sig)"
            ],
            "jump10366": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block10366_7": [
                "authority.canCall(src, this, sig)"
            ],
            "block564_0": [
                "logic.handlePayment(msg.sender, msg.value)"
            ],
            "block10366_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block5509_0": [
                "logic.transferFrom(src, dst, wad)"
            ],
            "jump4821": [
                "logic.setOwner(owner_)",
                "logic.setOwner(owner_)"
            ],
            "block3767": [
                "logic.approve(msg.sender, guy, wad)"
            ],
            "block8242_0": [
                "logic.transfer(msg.sender, dst, wad)"
            ],
            "jump4437": [
                "logic.transfer(owner, owner_, wad)",
                "logic.transfer(owner, owner_, wad)"
            ],
            "jump7756": [
                "logic.burn(msg.sender, wad)",
                "logic.burn(msg.sender, wad)"
            ],
            "jump9272": [
                "dst.transfer(wad)",
                "dst.transfer(wad)"
            ],
            "jump6575": [
                "logic.balanceOf(who)",
                "logic.balanceOf(who)"
            ],
            "block9272": [
                "dst.transfer(wad)"
            ],
            "block5509": [
                "logic.transferFrom(src, dst, wad)"
            ],
            "block3953": [
                "dst.transfer(this.balance)"
            ],
            "block10366_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block10366_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block10366_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block10366_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block10366_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block4994": [
                "logic.totalSupply()"
            ],
            "block6236": [
                "logic.mint(wad)"
            ],
            "block10366_8": [
                "authority.canCall(src, this, sig)"
            ],
            "block10366_9": [
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_8": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block7756": [
                "logic.burn(msg.sender, wad)"
            ],
            "jump4994": [
                "logic.totalSupply()",
                "logic.totalSupply()"
            ],
            "jump5509_0": [
                "logic.transferFrom(src, dst, wad)",
                "logic.transferFrom(src, dst, wad)"
            ],
            "jump10366_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump10366_7": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "TokenData": {
        "function_list": [
            "Auth()",
            "setOwner(address)",
            "setAuthority(Authority)",
            "isAuthorized(address,bytes4)",
            "TokenData(address,uint256,address)",
            "setOwner(address)",
            "setToken(address)",
            "setSupply(uint256)",
            "setBalances(address,uint256)",
            "setApprovals(address,address,uint256)"
        ],
        "initial_state": {
            "Auth()": {
                "argument": {},
                "contract": {
                    "supply": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "supply": "uint256"
                }
            },
            "setAuthority(Authority)": {
                "argument": {},
                "contract": {
                    "supply": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "supply": "uint256"
                }
            },
            "TokenData(address,uint256,address)": {
                "argument": {
                    "supply_": "uint256"
                },
                "contract": {
                    "supply": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "supply": "uint256"
                }
            },
            "setSupply(uint256)": {
                "argument": {
                    "supply_": "uint256"
                },
                "contract": {
                    "supply": "uint256"
                }
            },
            "setBalances(address,uint256)": {
                "argument": {
                    "balance": "uint256"
                },
                "contract": {
                    "supply": "uint256"
                }
            },
            "setApprovals(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                223,
                97
            ],
            "setToken(address)": [
                290,
                119
            ],
            "setApprovals(address,address,uint256)": [
                926,
                295
            ],
            "setSupply(uint256)": [
                521,
                185
            ],
            "setBalances(address,uint256)": [
                444,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3088_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3088_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3088": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block3088": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "TokenLogic": {
        "function_list": [
            "stop()",
            "start()",
            "Auth()",
            "setOwner(address)",
            "setAuthority(Authority)",
            "isAuthorized(address,bytes4)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "TokenLogic(Token,TokenData,uint256,uint256)",
            "contributorCount()",
            "setOwner(address)",
            "setToken(Token)",
            "setIcoStart(uint256,uint256)",
            "setPresale(bool)",
            "setTokensPerWei(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,address,uint256)",
            "mint(uint128)",
            "burn(address,uint128)",
            "returnIcoInvestments(uint256)",
            "handlePayment(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "stop()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "Auth()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setAuthority(Authority)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "TokenLogic(Token,TokenData,uint256,uint256)": {
                "argument": {
                    "icoStart_": "uint256",
                    "icoHours_": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "contributorCount()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setToken(Token)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setIcoStart(uint256,uint256)": {
                "argument": {
                    "icoStart_": "uint256",
                    "icoHours_": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setPresale(bool)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "setTokensPerWei(uint256)": {
                "argument": {
                    "tokensPerWei_": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "transfer(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "wad": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "mint(uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "burn(address,uint128)": {
                "argument": {
                    "wad": "uint128"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "returnIcoInvestments(uint256)": {
                "argument": {
                    "contributorIndex": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "handlePayment(address,uint256)": {
                "argument": {
                    "eth": "uint256"
                },
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokensPerWei": "uint256",
                    "icoStart": "uint256",
                    "icoEnd": "uint256",
                    "icoSale": "uint256",
                    "maxIco": "uint256",
                    "contributors": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "mint(uint128)": [
                1093,
                339
            ],
            "transfer(address,address,uint256)": [
                1692,
                537
            ],
            "approve(address,address,uint256)": [
                2078,
                625
            ],
            "balanceOf(address)": [
                1156,
                361
            ],
            "totalSupply()": [
                689,
                207
            ],
            "transferFrom(address,address,uint256)": [
                775,
                251
            ],
            "setPresale(bool)": [
                1912,
                581
            ],
            "contributorCount()": [
                2211,
                647
            ],
            "start()": [
                1669,
                515
            ],
            "burn(address,uint128)": [
                1243,
                383
            ],
            "handlePayment(address,uint256)": [
                996,
                317
            ],
            "setOwner(address)": [
                5212,
                22376
            ],
            "returnIcoInvestments(uint256)": [
                432,
                97
            ],
            "setTokensPerWei(uint256)": [
                951,
                295
            ],
            "allowance(address,address)": [
                1959,
                603
            ],
            "setIcoStart(uint256,uint256)": [
                500,
                141
            ],
            "stop()": [
                477,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump12408": [
                "data.setBalances(src, sub(data.balances(src), wad))",
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "block12631": [
                "data.supply()"
            ],
            "jump3171": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "block3716": [
                "data.balances(owner)"
            ],
            "jump12796": [
                "data.setSupply(sub(data.supply(), wad))",
                "data.setSupply(sub(data.supply(), wad))"
            ],
            "jump16401_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7604": [
                "data.balances(dst)",
                "data.balances(dst)"
            ],
            "block7127": [
                "data.balances(src)"
            ],
            "jump3369": [
                "data.setBalances(src, sub(data.balances(src), srcBalance))",
                "data.setBalances(src, sub(data.balances(src), srcBalance))"
            ],
            "block2892": [
                "token.transferEth(src, sub(div(srcBalance, tokensPerWei), 5 finney))"
            ],
            "jump8964": [
                "data.balances(owner)",
                "data.balances(owner)"
            ],
            "block13831": [
                "data.balances(src)"
            ],
            "block3171": [
                "data.balances(src)"
            ],
            "block10865": [
                "data.balances(data.owner())"
            ],
            "jump2892": [
                "token.transferEth(src, sub(div(srcBalance, tokensPerWei), 5 finney))",
                "token.transferEth(src, sub(div(srcBalance, tokensPerWei), 5 finney))"
            ],
            "jump6599": [
                "data.approvals(src, dst)",
                "data.approvals(src, dst)"
            ],
            "block5212": [
                "data.setOwner(owner)"
            ],
            "block11687_0": [
                "data.balances(src)"
            ],
            "jump6219": [
                "data.approvals(src, dst)",
                "data.approvals(src, dst)"
            ],
            "block4221": [
                "token.triggerTansferEvent(src, owner, srcBalance)"
            ],
            "jump12631": [
                "data.supply()",
                "data.supply()"
            ],
            "jump13831": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "block16401_1": [
                "authority.canCall(src, this, sig)"
            ],
            "jump10680": [
                "data.owner()",
                "data.owner()"
            ],
            "jump8550": [
                "token.transferEth(src, div(excess, tokensPerWei))",
                "token.transferEth(src, div(excess, tokensPerWei))"
            ],
            "block12408": [
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "jump16401_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump16401_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump16401_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump16401_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump16401_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump16401_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump14308": [
                "data.balances(dst)",
                "data.balances(dst)"
            ],
            "jump12192": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "block3369": [
                "data.setBalances(src, sub(data.balances(src), srcBalance))"
            ],
            "jump5500": [
                "data.supply()",
                "data.supply()"
            ],
            "block3914": [
                "data.setBalances(owner, add(data.balances(owner), srcBalance))"
            ],
            "jump4221": [
                "token.triggerTansferEvent(src, owner, srcBalance)",
                "token.triggerTansferEvent(src, owner, srcBalance)"
            ],
            "jump6848": [
                "data.setApprovals(src, dst, sub(data.approvals(src, dst), wad))",
                "data.setApprovals(src, dst, sub(data.approvals(src, dst), wad))"
            ],
            "block15368": [
                "data.setApprovals(src, guy, wad)"
            ],
            "block5500": [
                "data.supply()"
            ],
            "jump10048": [
                "token.triggerTansferEvent(owner, src, tokenAmount)",
                "token.triggerTansferEvent(owner, src, tokenAmount)"
            ],
            "jump7325": [
                "data.setBalances(src, sub(data.balances(src), wad))",
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "block12796": [
                "data.setSupply(sub(data.supply(), wad))"
            ],
            "block11687": [
                "data.balances(src)"
            ],
            "jump7127": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump14506": [
                "data.setBalances(dst, add(data.balances(dst), wad))",
                "data.setBalances(dst, add(data.balances(dst), wad))"
            ],
            "block8550": [
                "token.transferEth(src, div(excess, tokensPerWei))"
            ],
            "jump7802": [
                "data.setBalances(dst, add(data.balances(dst), wad))",
                "data.setBalances(dst, add(data.balances(dst), wad))"
            ],
            "jump11469": [
                "data.setSupply(add(data.supply(), wad))",
                "data.setSupply(add(data.supply(), wad))"
            ],
            "block8964": [
                "data.balances(owner)"
            ],
            "block11304": [
                "data.supply()"
            ],
            "jump10422": [
                "data.owner()",
                "data.owner()"
            ],
            "block7604": [
                "data.balances(dst)"
            ],
            "block5905": [
                "data.balances(src)"
            ],
            "jump11081": [
                "data.setBalances(data.owner(), add(data.balances(data.owner()), wad))",
                "data.setBalances(data.owner(), add(data.balances(data.owner()), wad))"
            ],
            "block11469": [
                "data.setSupply(add(data.supply(), wad))"
            ],
            "jump14029": [
                "data.setBalances(src, sub(data.balances(src), wad))",
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "jump11304": [
                "data.supply()",
                "data.supply()"
            ],
            "jump16401": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block10680": [
                "data.owner()"
            ],
            "jump15368": [
                "data.setApprovals(src, guy, wad)",
                "data.setApprovals(src, guy, wad)"
            ],
            "block9639": [
                "data.setBalances(src, add(data.balances(src), tokenAmount))"
            ],
            "block9162": [
                "data.setBalances(owner, sub(data.balances(owner), tokenAmount))"
            ],
            "block14506": [
                "data.setBalances(dst, add(data.balances(dst), wad))"
            ],
            "block11687_3": [
                "data.balances(src)"
            ],
            "block11687_2": [
                "data.balances(src)"
            ],
            "block11687_1": [
                "data.balances(src)"
            ],
            "jump11687_0": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "block6848": [
                "data.setApprovals(src, dst, sub(data.approvals(src, dst), wad))"
            ],
            "jump9639": [
                "data.setBalances(src, add(data.balances(src), tokenAmount))",
                "data.setBalances(src, add(data.balances(src), tokenAmount))"
            ],
            "block6219": [
                "data.approvals(src, dst)"
            ],
            "block14308": [
                "data.balances(dst)"
            ],
            "block11081": [
                "data.setBalances(data.owner(), add(data.balances(data.owner()), wad))"
            ],
            "jump11687_1": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "block14029": [
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "jump11687_3": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump11687_2": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump3914": [
                "data.setBalances(owner, add(data.balances(owner), srcBalance))",
                "data.setBalances(owner, add(data.balances(owner), srcBalance))"
            ],
            "block12192": [
                "data.balances(src)"
            ],
            "block14907": [
                "data.approvals(src, guy)"
            ],
            "block10422": [
                "data.owner()"
            ],
            "block9441": [
                "data.balances(src)"
            ],
            "jump14907": [
                "data.approvals(src, guy)",
                "data.approvals(src, guy)"
            ],
            "block6599": [
                "data.approvals(src, dst)"
            ],
            "block16401_2": [
                "authority.canCall(src, this, sig)"
            ],
            "block16401_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block16401_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump3716": [
                "data.balances(owner)",
                "data.balances(owner)"
            ],
            "block16401_6": [
                "authority.canCall(src, this, sig)"
            ],
            "block16401_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block16401_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block10048": [
                "token.triggerTansferEvent(owner, src, tokenAmount)"
            ],
            "block7325": [
                "data.setBalances(src, sub(data.balances(src), wad))"
            ],
            "block7802": [
                "data.setBalances(dst, add(data.balances(dst), wad))"
            ],
            "jump11687": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump9162": [
                "data.setBalances(owner, sub(data.balances(owner), tokenAmount))",
                "data.setBalances(owner, sub(data.balances(owner), tokenAmount))"
            ],
            "jump5212": [
                "data.setOwner(owner)",
                "data.setOwner(owner)"
            ],
            "block16401": [
                "authority.canCall(src, this, sig)"
            ],
            "jump9441": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump5905": [
                "data.balances(src)",
                "data.balances(src)"
            ],
            "jump10865": [
                "data.balances(data.owner())",
                "data.balances(data.owner())"
            ]
        }
    }
}