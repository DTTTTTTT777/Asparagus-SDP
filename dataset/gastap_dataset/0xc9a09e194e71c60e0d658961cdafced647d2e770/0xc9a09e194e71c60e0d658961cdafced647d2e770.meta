{
    "eSignature": {
        "function_list": [
            "newDoc(bytes32,IEthIdentity)",
            "newSignedDoc(bytes32,IEthIdentity)",
            "signDoc(bytes20,IEthIdentity)",
            "getDoc(bytes20)",
            "getSignatory(bytes20,uint256)",
            "checkExists(bytes20)",
            "bytes32ToString(bytes32)"
        ],
        "initial_state": {
            "newDoc(bytes32,IEthIdentity)": {
                "argument": {
                    "hash": "bytes32"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "newSignedDoc(bytes32,IEthIdentity)": {
                "argument": {
                    "hash": "bytes32"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "signDoc(bytes20,IEthIdentity)": {
                "argument": {
                    "docKey": "bytes20"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "getDoc(bytes20)": {
                "argument": {
                    "docKey": "bytes20"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "getSignatory(bytes20,uint256)": {
                "argument": {
                    "docKey": "bytes20",
                    "index": "uint256"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "checkExists(bytes20)": {
                "argument": {
                    "docKey": "bytes20"
                },
                "contract": {
                    "count": "uint256"
                }
            },
            "bytes32ToString(bytes32)": {
                "argument": {
                    "data": "bytes32"
                },
                "contract": {
                    "count": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getSignatory(bytes20,uint256)": [
                763,
                207
            ],
            "getDoc(bytes20)": [
                441,
                141
            ],
            "checkExists(bytes20)": [
                587,
                163
            ]
        },
        "block_CALL_mapping": {
            "block1171_0": [
                "issuerId.checkOwner.gas(800)(msg.sender)"
            ],
            "jump1171_0": [
                "issuerId.checkOwner.gas(800)(msg.sender)",
                "issuerId.checkOwner.gas(800)(msg.sender)"
            ],
            "jump1171": [
                "issuerId.checkOwner.gas(800)(msg.sender)",
                "issuerId.checkOwner.gas(800)(msg.sender)"
            ],
            "jump1242_0": [
                "ripemd160(issuerId, count)",
                "ripemd160(issuerId, count)"
            ],
            "block2956": [
                "ethIdentity.checkOwner.gas(800)(msg.sender)"
            ],
            "block1242_0": [
                "ripemd160(issuerId, count)"
            ],
            "block1171": [
                "issuerId.checkOwner.gas(800)(msg.sender)"
            ],
            "block3993": [
                "identity.getIdentityName()"
            ],
            "jump3993": [
                "identity.getIdentityName()",
                "identity.getIdentityName()"
            ],
            "jump2956": [
                "ethIdentity.checkOwner.gas(800)(msg.sender)",
                "ethIdentity.checkOwner.gas(800)(msg.sender)"
            ],
            "jump1242": [
                "ripemd160(issuerId, count)",
                "ripemd160(issuerId, count)"
            ],
            "block1242": [
                "ripemd160(issuerId, count)"
            ]
        }
    }
}