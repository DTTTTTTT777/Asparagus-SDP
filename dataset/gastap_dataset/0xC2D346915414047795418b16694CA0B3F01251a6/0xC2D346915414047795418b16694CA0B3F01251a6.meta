{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "emergencyStop()",
            "release()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {}
            },
            "release()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "emergencyStop()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "release()": [
                184,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                354,
                141
            ],
            "allowance(address,address)": [
                518,
                185
            ],
            "transferFrom(address,address,uint256)": [
                245,
                119
            ],
            "transfer(address,uint256)": [
                441,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "VISTAcoin": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "VISTAcoin()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "VISTAcoin()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                324,
                97
            ],
            "balanceOf(address)": [
                596,
                185
            ],
            "transferFrom(address,address,uint256)": [
                444,
                141
            ],
            "transferOwnership(address)": [
                1110,
                295
            ],
            "allowance(address,address)": [
                991,
                273
            ],
            "transfer(address,uint256)": [
                914,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "VISTACrowdSaleP1": {
        "function_list": [
            "emergencyStop()",
            "release()",
            "Ownable()",
            "transferOwnership(address)",
            "VISTACrowdSaleP1(address,address)",
            "fallback()",
            "start()",
            "receiveETH(address)",
            "bonus(uint256)",
            "finalize()",
            "drain()",
            "setMultisig(address)",
            "backVISTAcoinOwner()",
            "getRemainCoins()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "emergencyStop()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "release()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "VISTACrowdSaleP1(address,address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "receiveETH(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "bonus(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "backVISTAcoinOwner()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "getRemainCoins()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_INVEST_ETHER": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                1351,
                537
            ],
            "start()": [
                1128,
                427
            ],
            "release()": [
                815,
                295
            ],
            "emergencyStop()": [
                593,
                163
            ],
            "getRemainCoins()": [
                1328,
                515
            ],
            "drain()": [
                968,
                361
            ],
            "setMultisig(address)": [
                1418,
                559
            ],
            "finalize()": [
                570,
                141
            ],
            "backVISTAcoinOwner()": [
                659,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump4220_0": [
                "coin.transfer(owner, remains)",
                "coin.transfer(owner, remains)"
            ],
            "jump1884": [
                "multisigEther.send(this.balance)",
                "multisigEther.send(this.balance)"
            ],
            "block1864_0": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block4220_0": [
                "coin.transfer(owner, remains)"
            ],
            "block1864": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block1884_0": [
                "multisigEther.send(this.balance)"
            ],
            "block3431": [
                "owner.send(this.balance)"
            ],
            "block1884": [
                "multisigEther.send(this.balance)"
            ],
            "block3095": [
                "coin.transferOwnership(owner)"
            ],
            "jump1884_0": [
                "multisigEther.send(this.balance)",
                "multisigEther.send(this.balance)"
            ],
            "block2492": [
                "multisigEther.send(this.balance)"
            ],
            "jump2492": [
                "multisigEther.send(this.balance)",
                "multisigEther.send(this.balance)"
            ],
            "block4220": [
                "coin.transfer(owner, remains)"
            ],
            "jump3095": [
                "coin.transferOwnership(owner)",
                "coin.transferOwnership(owner)"
            ],
            "jump1864_0": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump4220": [
                "coin.transfer(owner, remains)",
                "coin.transfer(owner, remains)"
            ],
            "jump1864": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump3431": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ]
        }
    }
}