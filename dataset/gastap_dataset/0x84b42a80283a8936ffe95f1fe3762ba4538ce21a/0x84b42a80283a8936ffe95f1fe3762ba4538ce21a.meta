{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                255,
                119
            ],
            "refund(address)": [
                630,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                576,
                229
            ],
            "transferOwnership(address)": [
                509,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump2069": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "jump857": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block857": [
                "wallet.transfer(this.balance)"
            ],
            "block2069": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "HarborToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "setMintAgent(address,bool)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "openMinting()",
            "finishMinting()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burn(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "openMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                988,
                251
            ],
            "approve(address,uint256)": [
                470,
                119
            ],
            "openMinting()": [
                1168,
                295
            ],
            "increaseApproval(address,uint256)": [
                1782,
                449
            ],
            "mint(address,uint256)": [
                796,
                207
            ],
            "balanceOf(address)": [
                1215,
                317
            ],
            "decreaseApproval(address,uint256)": [
                1067,
                273
            ],
            "burn(address,uint256)": [
                1580,
                405
            ],
            "transferFrom(address,address,uint256)": [
                614,
                163
            ],
            "finishMinting()": [
                1302,
                339
            ],
            "allowance(address,address)": [
                1883,
                471
            ],
            "transfer(address,uint256)": [
                1681,
                427
            ],
            "transferOwnership(address)": [
                2002,
                493
            ]
        },
        "block_CALL_mapping": {}
    },
    "HarborCrowdsale": {
        "function_list": [
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "HarborCrowdsale(uint256,uint256,address,uint256,uint256)",
            "createTokenContract()",
            "fallback()",
            "buyPrice()",
            "buyPriceAt(uint256)",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "claimRefund()",
            "minFundingGoalReached()",
            "setEndsAt(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "HarborCrowdsale(uint256,uint256,address,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_cap": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "buyPrice()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "buyPriceAt(uint256)": {
                "argument": {
                    "at": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "minFundingGoalReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "minimumFundingGoal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1249,
                493
            ],
            "buyPrice()": [
                938,
                339
            ],
            "claimRefund()": [
                1115,
                405
            ],
            "minFundingGoalReached()": [
                670,
                207
            ],
            "transferOwnership(address)": [
                1296,
                515
            ],
            "setEndsAt(uint256)": [
                850,
                295
            ],
            "buyPriceAt(uint256)": [
                562,
                163
            ],
            "finalize()": [
                717,
                229
            ],
            "halt()": [
                827,
                273
            ],
            "unhalt()": [
                1172,
                449
            ],
            "buyTokens(address)": [
                1195,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump5924": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block5587": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block1952_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1952_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1952_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1952_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3856": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block1952": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump4114": [
                "token.burn(msg.sender,_hbr_amount)",
                "token.burn(msg.sender,_hbr_amount)"
            ],
            "block5587_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block5587_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block4114": [
                "token.burn(msg.sender,_hbr_amount)"
            ],
            "block5761": [
                "vault.close()"
            ],
            "block4540": [
                "token.burn(wallet,_hbr_project)"
            ],
            "block5924": [
                "vault.enableRefunds()"
            ],
            "jump4540": [
                "token.burn(wallet,_hbr_project)",
                "token.burn(wallet,_hbr_project)"
            ],
            "jump2243": [
                "token.mint(wallet,projectTokens)",
                "token.mint(wallet,projectTokens)"
            ],
            "block3856": [
                "token.balanceOf(msg.sender)"
            ],
            "jump3643": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump5587_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3643": [
                "vault.refund(msg.sender)"
            ],
            "jump5587_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump2243_0": [
                "token.mint(wallet,projectTokens)",
                "token.mint(wallet,projectTokens)"
            ],
            "jump2243_1": [
                "token.mint(wallet,projectTokens)",
                "token.mint(wallet,projectTokens)"
            ],
            "jump5587": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump5761": [
                "vault.close()",
                "vault.close()"
            ],
            "block2243": [
                "token.mint(wallet,projectTokens)"
            ],
            "jump1952": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2243_0": [
                "token.mint(wallet,projectTokens)"
            ],
            "block2243_1": [
                "token.mint(wallet,projectTokens)"
            ]
        }
    }
}