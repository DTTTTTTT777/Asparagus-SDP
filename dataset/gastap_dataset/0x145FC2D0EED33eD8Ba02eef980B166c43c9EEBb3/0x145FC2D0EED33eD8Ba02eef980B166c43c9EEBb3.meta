{
    "PassManager": {
        "function_list": [
            "Client()",
            "ClosingTimeForCloning()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "numberOfProposals()",
            "initialTokenSupply(address,uint256,bool)",
            "cloneProposal(uint256,string,bytes32,uint256,uint256,uint256,uint256)",
            "cloneTokens(uint256,uint256)",
            "closeSetup()",
            "updateRecipient(address)",
            "fallback()",
            "withdraw(uint256)",
            "updateClient(address)",
            "newProposal(uint256,string,bytes32)",
            "order(uint256,uint256,uint256)",
            "sendTo(address,uint256)",
            "addHolder(address)",
            "createInitialTokens(address,uint256)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer(uint256)",
            "blockTransfer(address,uint256)",
            "buyShares()",
            "buySharesFor(address)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Client()",
            "ClosingTimeForCloning()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "FundedAmount(uint256)",
            "priceDivisor(uint256)",
            "actualPriceDivisor()",
            "fundingMaxAmount(address)",
            "numberOfHolders()",
            "HolderAddress(uint256)",
            "numberOfProposals()",
            "PassManager(address,address,address,address,string,string,uint8,bool)",
            "initialTokenSupply(address,uint256,bool)",
            "cloneProposal(uint256,string,bytes32,uint256,uint256,uint256,uint256)",
            "cloneTokens(uint256,uint256)",
            "closeSetup()",
            "fallback()",
            "updateRecipient(address)",
            "withdraw(uint256)",
            "updateClient(address)",
            "newProposal(uint256,string,bytes32)",
            "order(uint256,uint256,uint256)",
            "sendTo(address,uint256)",
            "addHolder(address)",
            "createInitialTokens(address,uint256)",
            "setTokenPriceProposal(uint256,uint256,uint256)",
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)",
            "createToken(address,uint256,uint256)",
            "setFundingStartTime(uint256)",
            "rewardToken(address,uint256,uint256)",
            "closeFunding()",
            "setFundingFueled()",
            "ableTransfer()",
            "disableTransfer(uint256)",
            "blockTransfer(address,uint256)",
            "buyShares()",
            "buySharesFor(address)",
            "transferFromTo(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "Client()": {
                "argument": {},
                "contract": {}
            },
            "ClosingTimeForCloning()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "FundedAmount(uint256)": {
                "argument": {
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "priceDivisor(uint256)": {
                "argument": {
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "actualPriceDivisor()": {
                "argument": {},
                "contract": {}
            },
            "fundingMaxAmount(address)": {
                "argument": {},
                "contract": {}
            },
            "numberOfHolders()": {
                "argument": {},
                "contract": {}
            },
            "HolderAddress(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {}
            },
            "numberOfProposals()": {
                "argument": {},
                "contract": {}
            },
            "initialTokenSupply(address,uint256,bool)": {
                "argument": {
                    "_quantity": "uint256"
                },
                "contract": {}
            },
            "cloneProposal(uint256,string,bytes32,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_description": "string",
                    "_hashOfTheDocument": "bytes32",
                    "_dateOfProposal": "uint256",
                    "_lastClientProposalID": "uint256",
                    "_orderAmount": "uint256",
                    "_dateOfOrder": "uint256"
                },
                "contract": {}
            },
            "cloneTokens(uint256,uint256)": {
                "argument": {
                    "_from": "uint256",
                    "_to": "uint256"
                },
                "contract": {}
            },
            "closeSetup()": {
                "argument": {},
                "contract": {}
            },
            "updateRecipient(address)": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "updateClient(address)": {
                "argument": {},
                "contract": {}
            },
            "newProposal(uint256,string,bytes32)": {
                "argument": {
                    "_amount": "uint256",
                    "_description": "string",
                    "_hashOfTheDocument": "bytes32"
                },
                "contract": {}
            },
            "order(uint256,uint256,uint256)": {
                "argument": {
                    "_clientProposalID": "uint256",
                    "_proposalID": "uint256",
                    "_orderAmount": "uint256"
                },
                "contract": {}
            },
            "sendTo(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "addHolder(address)": {
                "argument": {},
                "contract": {}
            },
            "createInitialTokens(address,uint256)": {
                "argument": {
                    "_quantity": "uint256"
                },
                "contract": {}
            },
            "setTokenPriceProposal(uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_inflationRate": "uint256",
                    "_closingTime": "uint256"
                },
                "contract": {}
            },
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_initialPriceMultiplier": "uint256",
                    "_maxAmountToFund": "uint256",
                    "_minutesFundingPeriod": "uint256",
                    "_inflationRate": "uint256",
                    "_proposalID": "uint256"
                },
                "contract": {}
            },
            "createToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_saleDate": "uint256"
                },
                "contract": {}
            },
            "setFundingStartTime(uint256)": {
                "argument": {
                    "_startTime": "uint256"
                },
                "contract": {}
            },
            "rewardToken(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_date": "uint256"
                },
                "contract": {}
            },
            "closeFunding()": {
                "argument": {},
                "contract": {}
            },
            "setFundingFueled()": {
                "argument": {},
                "contract": {}
            },
            "ableTransfer()": {
                "argument": {},
                "contract": {}
            },
            "disableTransfer(uint256)": {
                "argument": {
                    "_closingTime": "uint256"
                },
                "contract": {}
            },
            "blockTransfer(address,uint256)": {
                "argument": {
                    "_deadLine": "uint256"
                },
                "contract": {}
            },
            "buyShares()": {
                "argument": {},
                "contract": {}
            },
            "buySharesFor(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFromTo(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "PassManager(address,address,address,address,string,string,uint8,bool)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string",
                    "_tokenDecimals": "uint8"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "HolderAddress(uint256)": [
                3874,
                911
            ],
            "cloneTokens(uint256,uint256)": [
                1443,
                229
            ],
            "ClosingTimeForCloning()": [
                9896,
                886
            ],
            "setFundingStartTime(uint256)": [
                2677,
                559
            ],
            "fundingMaxAmount(address)": [
                3983,
                933
            ],
            "transferFrom(address,address,uint256)": [
                2037,
                361
            ],
            "approve(address,uint256)": [
                1140,
                163
            ],
            "initialTokenSupply(address,uint256,bool)": [
                1241,
                185
            ],
            "cloneProposal(uint256,string,bytes32,uint256,uint256,uint256,uint256)": [
                1522,
                251
            ],
            "numberOfHolders()": [
                5722,
                801
            ],
            "setFundingFueled()": [
                3851,
                889
            ],
            "buyShares()": [
                4289,
                1021
            ],
            "disableTransfer(uint256)": [
                4070,
                955
            ],
            "FundedAmount(uint256)": [
                2765,
                603
            ],
            "numberOfProposals()": [
                3134,
                713
            ],
            "setTokenPriceProposal(uint256,uint256,uint256)": [
                3786,
                867
            ],
            "order(uint256,uint256,uint256)": [
                1354,
                207
            ],
            "setFundingRules(address,bool,uint256,uint256,uint256,uint256,uint256)": [
                3657,
                845
            ],
            "sendTo(address,uint256)": [
                3455,
                801
            ],
            "withdraw(uint256)": [
                2170,
                383
            ],
            "ableTransfer()": [
                2014,
                339
            ],
            "updateRecipient(address)": [
                4505,
                1087
            ],
            "updateClient(address)": [
                2264,
                427
            ],
            "balanceOf(address)": [
                2917,
                647
            ],
            "buySharesFor(address)": [
                2480,
                471
            ],
            "Client()": [
                10585,
                886
            ],
            "totalSupply()": [
                1715,
                273
            ],
            "blockTransfer(address,uint256)": [
                2534,
                493
            ],
            "actualPriceDivisor()": [
                3004,
                669
            ],
            "closeSetup()": [
                2611,
                515
            ],
            "newProposal(uint256,string,bytes32)": [
                2331,
                449
            ],
            "rewardToken(address,uint256,uint256)": [
                1927,
                317
            ],
            "transfer(address,uint256)": [
                3556,
                823
            ],
            "allowance(address,address)": [
                4299,
                1043
            ]
        },
        "block_CALL_mapping": {
            "block9896_1": [
                "daoManager.ClosingTimeForCloning()"
            ],
            "block9896_0": [
                "daoManager.ClosingTimeForCloning()"
            ],
            "jump10585": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "block10585_6": [
                "daoManager.Client()"
            ],
            "jump10585_3": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "block10585_0": [
                "daoManager.Client()"
            ],
            "block10585_3": [
                "daoManager.Client()"
            ],
            "block10585_2": [
                "daoManager.Client()"
            ],
            "block10585_5": [
                "daoManager.Client()"
            ],
            "block10585_4": [
                "daoManager.Client()"
            ],
            "jump10585_5": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "jump10585_4": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "jump9896_1": [
                "daoManager.ClosingTimeForCloning()",
                "daoManager.ClosingTimeForCloning()"
            ],
            "jump7881": [
                "recipient.send(_amount)",
                "recipient.send(_amount)"
            ],
            "jump5722": [
                "_clonedFrom.numberOfHolders()",
                "_clonedFrom.numberOfHolders()"
            ],
            "block5722": [
                "_clonedFrom.numberOfHolders()"
            ],
            "jump5918": [
                "_clonedFrom.HolderAddress(i)",
                "_clonedFrom.HolderAddress(i)"
            ],
            "jump9896_0": [
                "daoManager.ClosingTimeForCloning()",
                "daoManager.ClosingTimeForCloning()"
            ],
            "block10585": [
                "daoManager.Client()"
            ],
            "block10965": [
                "_recipient.send(_amount)"
            ],
            "block10585_1": [
                "daoManager.Client()"
            ],
            "jump6210": [
                "_clonedFrom.balanceOf(_holder)",
                "_clonedFrom.balanceOf(_holder)"
            ],
            "block7881": [
                "recipient.send(_amount)"
            ],
            "jump10585_1": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "jump10585_2": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "jump10585_0": [
                "daoManager.Client()",
                "daoManager.Client()"
            ],
            "block9896": [
                "daoManager.ClosingTimeForCloning()"
            ],
            "block6210": [
                "_clonedFrom.balanceOf(_holder)"
            ],
            "jump10965": [
                "_recipient.send(_amount)",
                "_recipient.send(_amount)"
            ],
            "block5918": [
                "_clonedFrom.HolderAddress(i)"
            ],
            "jump9896": [
                "daoManager.ClosingTimeForCloning()",
                "daoManager.ClosingTimeForCloning()"
            ],
            "jump10585_6": [
                "daoManager.Client()",
                "daoManager.Client()"
            ]
        }
    }
}