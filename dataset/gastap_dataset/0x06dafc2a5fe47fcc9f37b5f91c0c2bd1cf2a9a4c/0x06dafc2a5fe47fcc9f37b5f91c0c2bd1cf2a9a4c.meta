{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1050,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                728,
                207
            ],
            "finishMinting()": [
                815,
                229
            ],
            "allowance(address,address)": [
                1151,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "transfer(address,uint256)": [
                949,
                273
            ],
            "transferOwnership(address)": [
                1270,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                466,
                207
            ],
            "buyTokens(address)": [
                412,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump909_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump909_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334": [
                "wallet.transfer(msg.value)"
            ],
            "jump1334_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1334_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block909": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block909_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1334": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump909": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1334_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1334_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "FypToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferableTokens(address,uint64)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "enableTransfers()",
            "transferableTokens(address,uint64)",
            "finishMinting()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferableTokens(address,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "enableTransfers()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                459,
                119
            ],
            "increaseApproval(address,uint256)": [
                1630,
                427
            ],
            "transferableTokens(address,uint64)": [
                1523,
                405
            ],
            "mint(address,uint256)": [
                832,
                229
            ],
            "finishMinting()": [
                1121,
                295
            ],
            "balanceOf(address)": [
                1034,
                273
            ],
            "decreaseApproval(address,uint256)": [
                933,
                251
            ],
            "transferFrom(address,address,uint256)": [
                650,
                185
            ],
            "enableTransfers()": [
                1500,
                383
            ],
            "allowance(address,address)": [
                1731,
                449
            ],
            "transfer(address,uint256)": [
                1399,
                361
            ],
            "transferOwnership(address)": [
                1850,
                471
            ]
        },
        "block_CALL_mapping": {}
    },
    "FlypCrowdsale": {
        "function_list": [
            "MultiCappedCrowdsale(uint256,bytes32,uint256)",
            "validPurchase()",
            "hashHardCap(uint256,uint256)",
            "setHardCap(uint256,uint256)",
            "checkHardCap(uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "MyFinalizableCrowdsale(address)",
            "generateFinalTokens(uint256)",
            "finalize()",
            "finalization()",
            "FlypCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,address,bytes32,address,uint256)",
            "pregenTokens(address,uint256,uint256)",
            "buyTokens(address)",
            "createTokenContract()",
            "finalization()",
            "withdraw(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MultiCappedCrowdsale(uint256,bytes32,uint256)": {
                "argument": {
                    "_softCap": "uint256",
                    "_hardCapHash": "bytes32",
                    "_endBuffer": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "hashHardCap(uint256,uint256)": {
                "argument": {
                    "_hardCap": "uint256",
                    "_key": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "setHardCap(uint256,uint256)": {
                "argument": {
                    "_hardCap": "uint256",
                    "_key": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "checkHardCap(uint256)": {
                "argument": {
                    "totalRaised": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "MyFinalizableCrowdsale(address)": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "generateFinalTokens(uint256)": {
                "argument": {
                    "ratio": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "FlypCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,address,bytes32,address,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_presaleEndTime": "uint256",
                    "_rate": "uint256",
                    "_rateDiff": "uint256",
                    "_softCap": "uint256",
                    "_hardCapHash": "bytes32",
                    "_endBuffer": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "pregenTokens(address,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "weiValue": "uint256"
                },
                "contract": {
                    "presaleRate": "uint256",
                    "postSoftRate": "uint256",
                    "postHardRate": "uint256",
                    "presaleEndTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1393,
                515
            ],
            "pregenTokens(address,uint256,uint256)": [
                1071,
                405
            ],
            "withdraw(uint256)": [
                426,
                119
            ],
            "transferOwnership(address)": [
                1440,
                537
            ],
            "finalize()": [
                686,
                251
            ],
            "buyTokens(address)": [
                1339,
                493
            ],
            "setHardCap(uint256,uint256)": [
                796,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump2356": [
                "wallet.transfer(weiValue)",
                "wallet.transfer(weiValue)"
            ],
            "block2069_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2069_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump3429": [
                "token.mint(beneficiary, tokenAmount)",
                "token.mint(beneficiary, tokenAmount)"
            ],
            "jump4503": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block4503": [
                "token.finishMinting()"
            ],
            "jump4194_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2069": [
                "token.mint(beneficiary, tokens)"
            ],
            "block4845_0": [
                "token.totalSupply()"
            ],
            "jump5177_1": [
                "token.mint(tokenWallet, finalValue)",
                "token.mint(tokenWallet, finalValue)"
            ],
            "jump5177_0": [
                "token.mint(tokenWallet, finalValue)",
                "token.mint(tokenWallet, finalValue)"
            ],
            "block4194": [
                "wallet.transfer(msg.value)"
            ],
            "jump4194": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump4845": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4194_1": [
                "wallet.transfer(msg.value)"
            ],
            "block4194_0": [
                "wallet.transfer(msg.value)"
            ],
            "block4845": [
                "token.totalSupply()"
            ],
            "jump4194_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block5177_1": [
                "token.mint(tokenWallet, finalValue)"
            ],
            "block5177_0": [
                "token.mint(tokenWallet, finalValue)"
            ],
            "jump2069": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3429": [
                "token.mint(beneficiary, tokenAmount)"
            ],
            "block4845_1": [
                "token.totalSupply()"
            ],
            "jump5177": [
                "token.mint(tokenWallet, finalValue)",
                "token.mint(tokenWallet, finalValue)"
            ],
            "block2356": [
                "wallet.transfer(weiValue)"
            ],
            "block5177": [
                "token.mint(tokenWallet, finalValue)"
            ],
            "jump4845_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4845_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump2069_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2069_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ]
        }
    }
}