{
    "ERC20": {
        "function_list": [
            "allowance(address,address)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "balanceOf(address)": [
                858,
                229
            ],
            "transferFrom(address,address,uint256)": [
                512,
                141
            ],
            "transfer(address,uint256)": [
                1233,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump5183": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block5183": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "div(uint256,uint256)",
            "max64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min64(uint64,uint64)",
            "min256(uint256,uint256)",
            "mul(uint256,uint256)",
            "sub(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StakePool": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "StakePool(string,string,uint8,uint256,uint256)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "mintToken(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "StakePool(string,string,uint8,uint256,uint256)": {
                "argument": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "decimalUnits": "uint8",
                    "decimalMultiplier": "uint256",
                    "initialAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "initialSupply": "uint256",
                    "totalSupply": "uint256",
                    "multiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                709,
                207
            ],
            "mintToken(address,uint256)": [
                796,
                229
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "transferOwnership(address)": [
                1348,
                339
            ],
            "allowance(address,address)": [
                1229,
                317
            ],
            "transfer(address,uint256)": [
                1128,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "StakePoolICO": {
        "function_list": [
            "StakePool(string,string,uint8,uint256,uint256)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "mintToken(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "StakePoolICO()",
            "fallback()",
            "addRecordEntry(address)",
            "addTokenHolder(address)",
            "createRecord()",
            "getPrice()",
            "getRecordBalance(address)",
            "getRecordHolder(uint256)",
            "getRemainingTime()",
            "getTokenHolder(uint256)",
            "payOutDividend()",
            "setMultiSigWallet(address)",
            "setPrice(uint256)",
            "startSale(uint256,uint256)",
            "stopSale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StakePool(string,string,uint8,uint256,uint256)": {
                "argument": {
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "decimalUnits": "uint8",
                    "decimalMultiplier": "uint256",
                    "initialAmount": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "StakePoolICO()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "addRecordEntry(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "addTokenHolder(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "createRecord()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "getRecordBalance(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "getRecordHolder(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "getRemainingTime()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "getTokenHolder(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "payOutDividend()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "setMultiSigWallet(address)": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPriceperEther": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "startSale(uint256,uint256)": {
                "argument": {
                    "saleStart": "uint256",
                    "saleStop": "uint256"
                },
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            },
            "stopSale()": {
                "argument": {},
                "contract": {
                    "multiplier": "uint256",
                    "amountRaised": "uint256",
                    "dividendPayment": "uint256",
                    "numberOfRecordEntries": "uint256",
                    "numberOfTokenHolders": "uint256",
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "hardcap": "uint256",
                    "price": "uint256",
                    "recordTokenHolders": "address[]",
                    "tokenHolders": "address[]",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "initialTokens": "uint256",
                    "decimalUnits": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                2060,
                339
            ],
            "allowance(address,address)": [
                3146,
                669
            ],
            "transferFrom(address,address,uint256)": [
                1667,
                229
            ],
            "approve(address,uint256)": [
                1324,
                119
            ],
            "addTokenHolder(address)": [
                3055,
                647
            ],
            "getTokenHolder(uint256)": [
                2946,
                625
            ],
            "payOutDividend()": [
                1425,
                141
            ],
            "getPrice()": [
                2673,
                515
            ],
            "getRecordHolder(uint256)": [
                1558,
                207
            ],
            "stopSale()": [
                3265,
                691
            ],
            "setMultiSigWallet(address)": [
                3355,
                735
            ],
            "setPrice(uint256)": [
                2464,
                471
            ],
            "startSale(uint256,uint256)": [
                3513,
                779
            ],
            "getRecordBalance(address)": [
                1800,
                251
            ],
            "mintToken(address,uint256)": [
                2190,
                383
            ],
            "transferOwnership(address)": [
                3446,
                757
            ],
            "getRemainingTime()": [
                3312,
                713
            ],
            "transfer(address,uint256)": [
                2759,
                559
            ]
        },
        "block_CALL_mapping": {
            "block805_0": [
                "multiSigWallet.send(msg.value)"
            ],
            "block805": [
                "multiSigWallet.send(msg.value)"
            ],
            "jump805_0": [
                "multiSigWallet.send(msg.value)",
                "multiSigWallet.send(msg.value)"
            ],
            "jump805": [
                "multiSigWallet.send(msg.value)",
                "multiSigWallet.send(msg.value)"
            ]
        }
    }
}