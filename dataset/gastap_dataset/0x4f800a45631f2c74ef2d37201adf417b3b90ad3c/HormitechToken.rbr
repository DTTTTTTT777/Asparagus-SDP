block0(g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	lt(s(1), s(0))
	call(block373(g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump0(s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	geq(s(1), s(0))
	call(block13(g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value))

block13(g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 100597159
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block383(s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))

jump13(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newBuyPrice, newOwner, newSellPrice, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value))

jump65(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block438(s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value))

block65(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block582(s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump76(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block87(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block683(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block98(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block726(s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, from, returndatasize, to, value))

jump98(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, from, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block109(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 773487949
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block859(s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, callvalue, returndatasize))

jump109(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, amountInWeis, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

jump120(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block904(s(0),g(decimals), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block120(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1265959732
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block953(s(0),g(sellPrice), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block142(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1548726725
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block996(s(0),g(profit), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

jump153(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1083(s(0),g(closeSell), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block153(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1617271442
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1126(s(0),g(solvency), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block164(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1725000899
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1169(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump175(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

jump186(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1256(s(0),g(tokensAvailable), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))

block186(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2000441417
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1299(s(0),g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target))

jump197(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

block197(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2043039848
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, mintedAmount, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2130032362
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1376(s(0),g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, value))

jump208(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

block219(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2250260747
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1421(s(0),g(buyPrice), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

jump230(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1464(s(0),g(owner), l(l1), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

block230(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1551(s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))

jump241(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

block252(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2800922170
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1695(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump252(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))

block263(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	eq(s(2), s(1))
	call(block1705(s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value))

jump263(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target))

jump274(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block1782(s(0),g(closeSell), g(closeBuy), g(owner), calldatasize, caller, callvalue, isClosedBuy, isClosedSell))

jump274(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block285(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block274(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3015895745
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, isClosedBuy, isClosedSell, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3021264054
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block1841(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump285(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block296(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

jump296(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block1932(s(0),g(closeSell), l(l1), l(l0), callvalue))

jump296(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block307(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block296(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3129198960
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block1979(s(0),g(closeBuy), l(l1), l(l0), callvalue))

jump307(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block318(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block307(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3333119196
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block318(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3504541104
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2026(s(0),g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue))

jump318(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block329(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block329(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2060(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump329(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block340(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

jump340(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2179(s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))

jump340(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block351(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block340(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3833895730
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2224(s(0),g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))

jump351(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block362(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, returndatasize))

block351(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3877917340
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, returndatasize)=>
	eq(s(2), s(1))
	call(block2303(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump362(s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, returndatasize)=>
	neq(s(2), s(1))
	call(block373_0(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

block362(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 381
	nop(PUSH2)
	s(1) = 2370
	nop(PUSH2)
	call(block2370(s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(JUMP)

block381()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block383(s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump383(s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump383(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	eq(s(2), 0)
	call(block395(s(1), s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice))

jump383(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	neq(s(2), 0)
	call(block391(s(1), s(0)))

block391(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block395(s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 436
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newSellPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = newBuyPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 2766
	nop(PUSH2)
	call(block2766(s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(JUMP)

block436(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump438(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block450(s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

jump438(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block446(s(1), s(0)))

block438(s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump438(s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block446(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block450(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 459
	nop(PUSH2)
	s(2) = 2875
	nop(PUSH2)
	call(block2875(s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block459(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block496(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block496(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump496(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump496(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block523(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump496(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block505(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block505(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 496
	nop(PUSH2)
	call(block496(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump523(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block568(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump523(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block543(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block523(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump523(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block543(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block568(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block568(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block582(s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump582(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block594(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, spender, value))

jump582(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block590(s(1), s(0)))

block590(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block594(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 657
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3033
	nop(PUSH2)
	call(block3033(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block657(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block683(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump683(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump683(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block695(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump683(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block691(s(1), s(0)))

block691(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block695(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 704
	nop(PUSH2)
	s(2) = 3174
	nop(PUSH2)
	call(block3174(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block704(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block726(s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, from, returndatasize, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump726(s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, from, returndatasize, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump726(s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, from, returndatasize, to, value)=>
	eq(s(2), 0)
	call(block738(s(1), s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, from, returndatasize, to, value))

jump726(s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, from, returndatasize, to, value)=>
	neq(s(2), 0)
	call(block734(s(1), s(0)))

block734(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block738(s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, from, returndatasize, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 833
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 3180
	nop(PUSH2)
	call(block3180(s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block833(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block859(s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump859(s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump859(s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block871(s(1), s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, returndatasize))

jump859(s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block867(s(1), s(0)))

block867(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block871(s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, amountInWeis, balance, calldatasize, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 902
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amountInWeis
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3655
	nop(PUSH2)
	call(block3655(s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block902(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump904(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block916(s(1), s(0),g(decimals), l(l1), l(l0)))

jump904(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block912(s(1), s(0)))

block904(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump904(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block912(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block916(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 925
	nop(PUSH2)
	s(2) = 4005
	nop(PUSH2)
	call(block4005(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block925(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block953(s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump953(s(2),s(1),s(0),g(sellPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump953(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block965(s(1), s(0),g(sellPrice), l(l1), l(l0)))

jump953(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block961(s(1), s(0)))

block961(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block965(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 974
	nop(PUSH2)
	s(2) = 4024
	nop(PUSH2)
	call(block4024(s(1),s(0),g(sellPrice), l(l1), l(l0)))
	nop(JUMP)

block974(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block996(s(0), g(profit), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump996(s(2),s(1),s(0),g(profit), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump996(s(2), s(1), s(0), g(profit), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1008(s(1), s(0),g(profit), l(l1), l(l0)))

jump996(s(2), s(1), s(0), g(profit), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1004(s(1), s(0)))

block1004(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1008(s(1), s(0), g(profit), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1017
	nop(PUSH2)
	s(2) = 4030
	nop(PUSH2)
	call(block4030(s(1),s(0),g(profit), l(l1), l(l0)))
	nop(JUMP)

block1017(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1083(s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1083(s(2),s(1),s(0),g(closeSell), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1083(s(2), s(1), s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1095(s(1), s(0),g(closeSell), l(l1), l(l0)))

jump1083(s(2), s(1), s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1091(s(1), s(0)))

block1091(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1095(s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1104
	nop(PUSH2)
	s(2) = 4068
	nop(PUSH2)
	call(block4068(s(1),s(0),g(closeSell), l(l1), l(l0)))
	nop(JUMP)

block1104(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1126(s(2), s(1), s(0), g(solvency), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1138(s(1), s(0),g(solvency), l(l1), l(l0)))

jump1126(s(2), s(1), s(0), g(solvency), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1134(s(1), s(0)))

block1126(s(0), g(solvency), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1126(s(2),s(1),s(0),g(solvency), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1134(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1138(s(1), s(0), g(solvency), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1147
	nop(PUSH2)
	s(2) = 4074
	nop(PUSH2)
	call(block4074(s(1),s(0),g(solvency), l(l1), l(l0)))
	nop(JUMP)

block1147(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1169(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1169(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1169(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1181(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump1169(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1177(s(1), s(0)))

block1177(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1181(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1234
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4080
	nop(PUSH2)
	call(block4080(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1234(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1256(s(0), g(tokensAvailable), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1256(s(2),s(1),s(0),g(tokensAvailable), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1256(s(2), s(1), s(0), g(tokensAvailable), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1268(s(1), s(0),g(tokensAvailable), l(l1), l(l0)))

jump1256(s(2), s(1), s(0), g(tokensAvailable), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1264(s(1), s(0)))

block1264(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1268(s(1), s(0), g(tokensAvailable), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1277
	nop(PUSH2)
	s(2) = 4104
	nop(PUSH2)
	call(block4104(s(1),s(0),g(tokensAvailable), l(l1), l(l0)))
	nop(JUMP)

block1277(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1299(s(2), s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	eq(s(2), 0)
	call(block1311(s(1), s(0),g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, mintedAmount, target))

jump1299(s(2), s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	neq(s(2), 0)
	call(block1307(s(1), s(0)))

block1299(s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1299(s(2),s(1),s(0),g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1307(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1311(s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, mintedAmount, target)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1374
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = target
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = mintedAmount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4110
	nop(PUSH2)
	call(block4110(s(3),s(2),s(1),s(0),g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block1374(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1376(s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1376(s(2),s(1),s(0),g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1376(s(2), s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, value)=>
	eq(s(2), 0)
	call(block1388(s(1), s(0),g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, value))

jump1376(s(2), s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, callvalue, value)=>
	neq(s(2), 0)
	call(block1384(s(1), s(0)))

block1384(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1388(s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, calldatasize, caller, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1419
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4551
	nop(PUSH2)
	call(block4551(s(2),s(1),s(0),g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block1419(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1421(s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1421(s(2),s(1),s(0),g(buyPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1421(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1433(s(1), s(0),g(buyPrice), l(l1), l(l0)))

jump1421(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1429(s(1), s(0)))

block1429(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1433(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1442
	nop(PUSH2)
	s(2) = 4656
	nop(PUSH2)
	call(block4656(s(1),s(0),g(buyPrice), l(l1), l(l0)))
	nop(JUMP)

block1442(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1464(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1476(s(1), s(0),g(owner), l(l1), l(l0)))

jump1464(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1472(s(1), s(0)))

block1464(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1464(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1472(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1476(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1485
	nop(PUSH2)
	s(2) = 4662
	nop(PUSH2)
	call(block4662(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block1485(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1551(s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1551(s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1551(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1563(s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

jump1551(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1559(s(1), s(0)))

block1559(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1563(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1572
	nop(PUSH2)
	s(2) = 4699
	nop(PUSH2)
	call(block4699(s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1572(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1609(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump1609(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1636(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1609(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1618(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1609(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1609(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1618(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1609
	nop(PUSH2)
	call(block1609(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump1636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1636(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1636(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1636(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1681(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1695(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 1703
	nop(PUSH2)
	s(2) = 2370
	nop(PUSH2)
	call(block2370_0(s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(JUMP)

block1703(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1705(s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	eq(s(2), 0)
	call(block1717(s(1), s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, returndatasize, to, value))

jump1705(s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	neq(s(2), 0)
	call(block1713(s(1), s(0)))

block1705(s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1705(s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1713(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1717(s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, calldatasize, caller, returndatasize, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1780
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4857
	nop(PUSH2)
	call(block4857(s(3),s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block1780(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1782(s(2), s(1), s(0), g(closeSell), g(closeBuy), g(owner), calldatasize, caller, callvalue, isClosedBuy, isClosedSell)=>
	eq(s(2), 0)
	call(block1794(s(1), s(0),g(closeSell), g(closeBuy), g(owner), calldatasize, caller, isClosedBuy, isClosedSell))

jump1782(s(2), s(1), s(0), g(closeSell), g(closeBuy), g(owner), calldatasize, caller, callvalue, isClosedBuy, isClosedSell)=>
	neq(s(2), 0)
	call(block1790(s(1), s(0)))

block1782(s(0), g(closeSell), g(closeBuy), g(owner), calldatasize, caller, callvalue, isClosedBuy, isClosedSell)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1782(s(2),s(1),s(0),g(closeSell), g(closeBuy), g(owner), calldatasize, caller, callvalue, isClosedBuy, isClosedSell))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1790(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1794(s(1), s(0), g(closeSell), g(closeBuy), g(owner), calldatasize, caller, isClosedBuy, isClosedSell)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1839
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = isClosedBuy
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = isClosedSell
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5046
	nop(PUSH2)
	call(block5046(s(3),s(2),s(1),s(0),g(closeSell), g(closeBuy), g(owner), caller))
	nop(JUMP)

block1839(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1841(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1841(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1841(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1853(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump1841(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1849(s(1), s(0)))

block1849(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1853(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1906
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5193
	nop(PUSH2)
	call(block5193(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1906(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1932(s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1932(s(2),s(1),s(0),g(closeSell), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1932(s(2), s(1), s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1944(s(1), s(0),g(closeSell), l(l1), l(l0)))

jump1932(s(2), s(1), s(0), g(closeSell), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1940(s(1), s(0)))

block1940(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1944(s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1953
	nop(PUSH2)
	s(2) = 5225
	nop(PUSH2)
	call(block5225(s(1),s(0),g(closeSell), l(l1), l(l0)))
	nop(JUMP)

block1953(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1979(s(0), g(closeBuy), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1979(s(2),s(1),s(0),g(closeBuy), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1979(s(2), s(1), s(0), g(closeBuy), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1991(s(1), s(0),g(closeBuy), l(l1), l(l0)))

jump1979(s(2), s(1), s(0), g(closeBuy), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1987(s(1), s(0)))

block1987(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1991(s(1), s(0), g(closeBuy), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2000
	nop(PUSH2)
	s(2) = 5244
	nop(PUSH2)
	call(block5244(s(1),s(0),g(closeBuy), l(l1), l(l0)))
	nop(JUMP)

block2000(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2026(s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = 2034
	nop(PUSH2)
	s(2) = 5263
	nop(PUSH2)
	call(block5263(s(1),s(0),g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue))
	nop(JUMP)

block2034(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2060(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2060(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2060(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2072(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump2060(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2068(s(1), s(0)))

block2068(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2072(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2157
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5484
	nop(PUSH2)
	call(block5484(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2157(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2179(s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2179(s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2179(s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block2191(s(1), s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize))

jump2179(s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block2187(s(1), s(0)))

block2187(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2191(s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2222
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5521
	nop(PUSH2)
	call(block5521(s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block2222(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2224(s(2), s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	eq(s(2), 0)
	call(block2236(s(1), s(0),g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, freeze, target))

jump2224(s(2), s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	neq(s(2), 0)
	call(block2232(s(1), s(0)))

block2224(s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2224(s(2),s(1),s(0),g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2232(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2236(s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, freeze, target)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2301
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = target
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = freeze
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5850
	nop(PUSH2)
	call(block5850(s(3),s(2),s(1),s(0),g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2301(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2303(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block2315(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump2303(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block2311(s(1), s(0)))

block2303(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2303(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2311(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2315(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2368
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6143
	nop(PUSH2)
	call(block6143(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block2368(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2370(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(5), 0)
	call(block2404(s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump2370(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(5), 0)
	call(block2400(s(4), s(3), s(2), s(1), s(0)))

block2370(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(closeBuy)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump2370(s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2400(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block2404(s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(5) = g(buyPrice)
	nop(SLOAD)
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(5)
	nop(DUP2)
	call(jump2404(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block2417(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2404(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block2416(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2416(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2417(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(5) = g(buyPrice)
	nop(SLOAD)
	s(6) = s(1)
	nop(DUP5)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 1000
	nop(PUSH2)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump2417(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2417(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block2443(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2417(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block2442(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2442(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2443(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(sellPrice)
	nop(SLOAD)
	s(7) = s(1)
	nop(DUP6)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	call(jump2443(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2443(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(6), s(5))
	call(block2495(s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2443(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(6), s(5))
	call(block2491(s(4), s(3), s(2), s(1), s(0)))

block2491(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block2495(s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 13
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(profit)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump2495(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(6), 0)
	call(block2599(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(6), 0)
	call(block2590(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2590(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block2599(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 2611
	nop(PUSH2)
	s(6) = address
	nop(ADDRESS)
	s(7) = caller
	nop(CALLER)
	s(8) = s(1)
	nop(DUP7)
	s(9) = 6301
	nop(PUSH2)
	call(block6301(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block2611(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 2645
	nop(PUSH2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 7069
	nop(PUSH2)
	call(block7069(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2645(s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 2656
	nop(PUSH2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 7079
	nop(PUSH2)
	call(block7079(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2656(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump2656(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block2759(s(5), s(4), s(3), s(2), s(1), s(0)))

jump2656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block2750(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2750(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block2759(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block381())
	nop(JUMP)

jump2766(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	eq(s(5), s(4))
	call(block2857(s(3), s(2), s(1), s(0),g(buyPrice), g(sellPrice)))

jump2766(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	neq(s(5), s(4))
	call(block2853(s(3), s(2), s(1), s(0)))

block2766(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump2766(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2853(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block2857(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 7
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(sellPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 8
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block436(s(0)))
	nop(JUMP)

block2875(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump2875(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2875(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block3025(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2875(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block2955(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

block2955(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump2955(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump2955(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block2982(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump2955(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block2963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block2963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 3025
	nop(PUSH2)
	call(block3025(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2982(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block2996(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump2996(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block2996(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump2996(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block3016(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block2996(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump2996(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block3016(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block3025(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block3025(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block459(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3033(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block657(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3174(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block704(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	leq(s(9), s(8))
	call(block3324(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump3180(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	gt(s(9), s(8))
	call(block3320(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3180(s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	call(jump3180(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3320(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump3324(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(10), 0)
	call(block3347(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump3324(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(10), 0)
	call(block3346(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3324(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(sellPrice)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 1000
	nop(PUSH2)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump3324(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3346(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3347(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9) = balance
	nop(BALANCE)
	call(jump3347(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3347(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(9), s(8))
	call(block3388(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize))

jump3347(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(9), s(8))
	call(block3384(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3384(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block3388(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 13
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(profit)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump3388(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	eq(s(9), 0)
	call(block3492(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller))

jump3388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	neq(s(9), 0)
	call(block3483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block3483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block3492(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 6
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 3642
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(3)
	nop(DUP7)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 6301
	nop(PUSH2)
	call(block6301_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(JUMP)

block3642(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block833(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3655(s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump3655(s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3655(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), s(3))
	call(block3746(s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))

jump3655(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), s(3))
	call(block3742(s(2), s(1), s(0)))

block3742(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block3746(s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 81475147014190612186352705372214347070855092150471557165044115568060480233105
	nop(PUSH32)
	s(4) = caller
	nop(CALLER)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = 3887
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 7069
	nop(PUSH2)
	call(block7069_0(s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize))
	nop(JUMP)

block3887(s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(3) = 3898
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 7079
	nop(PUSH2)
	call(block7079_0(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

jump3898(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	eq(s(4), 0)
	call(block4001(s(3), s(2), s(1), s(0)))

jump3898(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	neq(s(4), 0)
	call(block3992(s(3), s(2), s(1), s(0), returndatasize))

block3898(s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump3898(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3992(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block4001(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block902(s(0)))
	nop(JUMP)

block4005(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block925(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4024(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(sellPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block974(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4030(s(1), s(0), g(profit), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(profit)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1017(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4068(s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(closeSell)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1104(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4074(s(1), s(0), g(solvency), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(solvency)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1147(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4080(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1234(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4104(s(1), s(0), g(tokensAvailable), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(tokensAvailable)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1277(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4110(s(3), s(2), s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump4110(s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4110(s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), s(4))
	call(block4201(s(3), s(2), s(1), s(0),g(closeSell), g(totalSupply), l(l4), l(l3), l(l1), l(l0), address))

jump4110(s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), g(totalSupply), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), s(4))
	call(block4197(s(3), s(2), s(1), s(0)))

block4197(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block4201(s(3), s(2), s(1), s(0), g(closeSell), g(totalSupply), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 4366
	nop(PUSH2)
	s(5) = 5
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = 7141
	nop(PUSH2)
	call(block7141_1(s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l1), l(l0), address))
	nop(JUMP)

block4366(s(3), s(2), s(1), s(0), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1374(s(0)))
	nop(JUMP)

block4551(s(2), s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump4551(s(4),s(3),s(2),s(1),s(0),g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4551(s(4), s(3), s(2), s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), s(3))
	call(block4642(s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4551(s(4), s(3), s(2), s(1), s(0), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), s(3))
	call(block4638(s(2), s(1), s(0)))

block4638(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block4642(s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 4653
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = address
	nop(ADDRESS)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 6301
	nop(PUSH2)
	call(block6301_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(JUMP)

block4653(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1419(s(0)))
	nop(JUMP)

block4656(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(buyPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1442(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4662(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1485(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4699(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump4699(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4699(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block4849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump4699(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block4779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

jump4779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block4806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump4779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block4787(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block4779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump4779(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block4787(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 4849
	nop(PUSH2)
	call(block4849(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4806(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block4820(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump4820(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block4820(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump4820(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block4840(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block4820(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump4820(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block4840(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block4849(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block4849(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1572(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump4857(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(8), 0)
	call(block4883(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump4857(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(8), 0)
	call(block4882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4857(s(3), s(2), s(1), s(0), g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(sellPrice)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump4857(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4883(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(7), s(6))
	call(block4924(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize))

jump4883(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(7), s(6))
	call(block4920(s(5), s(4), s(3), s(2), s(1), s(0)))

block4883(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump4883(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4920(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump4924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	eq(s(7), 0)
	call(block5028(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	neq(s(7), 0)
	call(block5019(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block4924(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(profit)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump4924(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5019(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5028(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 5040
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 6301
	nop(PUSH2)
	call(block6301_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(JUMP)

block5040(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1780(s(0)))
	nop(JUMP)

block5046(s(3), s(2), s(1), s(0), g(closeSell), g(closeBuy), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump5046(s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), g(closeBuy), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5046(s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), g(closeBuy), g(owner), caller)=>
	eq(s(5), s(4))
	call(block5137(s(3), s(2), s(1), s(0),g(closeSell), g(closeBuy)))

jump5046(s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), g(closeBuy), g(owner), caller)=>
	neq(s(5), s(4))
	call(block5133(s(3), s(2), s(1), s(0)))

block5133(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5137(s(3), s(2), s(1), s(0), g(closeSell), g(closeBuy))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(closeBuy)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(closeBuy) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(closeBuy)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(closeSell) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1839(s(0)))
	nop(JUMP)

block5193(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 14
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1906(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5225(s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(closeSell)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1953(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5244(s(1), s(0), g(closeBuy), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(closeBuy)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2000(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump5263(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue)=>
	gt(s(4), s(3))
	call(block5327(s(2), s(1), s(0),g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue))

jump5263(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue)=>
	leq(s(4), s(3))
	call(block5323(s(2), s(1), s(0)))

block5263(s(1), s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(4) = s(5)+s(4)
	nop(ADD)
	call(jump5263(s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5323(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5327(s(2), s(1), s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), address, balance, caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 5359
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = 7069
	nop(PUSH2)
	call(block7069_2(s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block5359(s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 5370
	nop(PUSH2)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 0
	nop(PUSH1)
	s(6) = 7079
	nop(PUSH2)
	call(block7079_2(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block5370(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 12447645060371975368299481609795301060460540403472447535655002887364495958424
	nop(PUSH32)
	s(4) = caller
	nop(CALLER)
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2034(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5484(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 6
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2157(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump5521(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(6), 0)
	call(block5554(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump5521(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(6), 0)
	call(block5550(s(5), s(4), s(3), s(2), s(1), s(0)))

block5521(s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 9
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(closeSell)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump5521(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5550(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump5554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(8), 0)
	call(block5577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump5554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(8), 0)
	call(block5576(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5554(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(sellPrice)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump5554(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), g(sellPrice), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5576(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump5577(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(7), s(6))
	call(block5623(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump5577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(7), s(6))
	call(block5619(s(5), s(4), s(3), s(2), s(1), s(0)))

block5619(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block5623(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(profit)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5623(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5623(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block5727(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump5623(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block5718(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5718(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 5739
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = address
	nop(ADDRESS)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 6301
	nop(PUSH2)
	call(block6301_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block5739(s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 5773
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 7069
	nop(PUSH2)
	call(block7069_3(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), l(l0), caller, returndatasize))
	nop(JUMP)

jump5773(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	eq(s(7), 0)
	call(block5843(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5773(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	neq(s(7), 0)
	call(block5834(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5773(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5773(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5834(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5843(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2222(s(0)))
	nop(JUMP)

jump5850(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block5941(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump5850(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block5937(s(3), s(2), s(1), s(0)))

block5850(s(3), s(2), s(1), s(0), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump5850(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5937(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5941(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 14
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 32657201770267406270387051459252782163643370607803865882362308449687686480805
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block2301(s(0)))
	nop(JUMP)

block6143(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6143(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6143(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block6234(s(2), s(1), s(0),g(owner)))

jump6143(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block6230(s(2), s(1), s(0)))

block6230(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6234(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2368(s(0)))
	nop(JUMP)

block6301(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6301(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6301(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(10), s(9))
	call(block6339(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6301(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(10), s(9))
	call(block6335(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6335(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump6339(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(10), s(9))
	call(block6417(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6339(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(10), s(9))
	call(block6413(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6339(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	call(jump6339(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6413(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump6417(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(10), s(9))
	call(block6559(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6417(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(10), s(9))
	call(block6555(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump6417(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6555(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

jump6559(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(9), 0)
	call(block6648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6559(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(9), 0)
	call(block6644(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 14
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump6559(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6644(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block6648(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 14
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump6648(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(9), 0)
	call(block6737(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6648(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(9), 0)
	call(block6733(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6733(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block6737(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 6963
	nop(PUSH2)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = 7141
	nop(PUSH2)
	call(block7141(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block6963(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2611(s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize))
	nop(JUMP)

block7069(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 11
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(tokensAvailable) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2645(s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

jump7079(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	eq(s(8), 0)
	call(block7101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7079(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	neq(s(8), 0)
	call(block7086(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7079(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	call(jump7079(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7086(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(8) = s(6)
	nop(DUP2)
	s(9) = 12
	nop(PUSH1)
	s(9) = g(solvency)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 12
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(solvency) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 7137
	nop(PUSH2)
	call(block7137(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

jump7101(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	leq(s(9), s(8))
	call(block7124(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7101(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	gt(s(9), s(8))
	call(block7112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7101(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = 12
	nop(PUSH1)
	s(8) = g(solvency)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	call(jump7101(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 12
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(solvency) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 7136
	nop(PUSH2)
	call(block7136(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7124(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 12
	nop(PUSH1)
	s(9) = g(solvency)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = 12
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(solvency) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block7136(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7136(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(block7137(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7137(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2656(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7141(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 10
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(closeSell) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

jump2370_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(6), 0)
	call(block2404_0(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump2370_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(6), 0)
	call(block2400_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block2370_0(s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(closeBuy)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump2370_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2370_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(6), 0)
	call(block2404_1(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump2370_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(6), 0)
	call(block2400_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block2370_1(s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(closeBuy)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump2370_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2400_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block2400_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block2404_0(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(buyPrice)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = s(6)
	nop(DUP2)
	call(jump2404_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2404_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block2417_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2404_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block2416_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2404_1(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(buyPrice)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = s(6)
	nop(DUP2)
	call(jump2404_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2404_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block2417_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2404_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block2416_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2416_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2416_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2417_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(8), 0)
	call(block2443_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2417_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(8), 0)
	call(block2442_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2417_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(buyPrice)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump2417_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2417_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(8), 0)
	call(block2443_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2417_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(8), 0)
	call(block2442_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2417_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(6) = g(buyPrice)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump2417_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2442_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2442_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2443_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(7), s(6))
	call(block2495_0(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2443_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(7), s(6))
	call(block2491_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block2443_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(sellPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump2443_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2443_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(7), s(6))
	call(block2495_1(s(5), s(4), s(3), s(2), s(1), s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2443_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(7), s(6))
	call(block2491_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block2443_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(sellPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(3)
	nop(DUP5)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump2443_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2491_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block2491_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block2495_0(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(profit)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump2495_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2495_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block2599_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2495_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block2590_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2495_1(s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(profit)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump2495_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2495_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block2599_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump2495_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block2590_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2590_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block2590_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block2599_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 2611
	nop(PUSH2)
	s(7) = address
	nop(ADDRESS)
	s(8) = caller
	nop(CALLER)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 6301
	nop(PUSH2)
	call(block6301_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block2599_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 2611
	nop(PUSH2)
	s(7) = address
	nop(ADDRESS)
	s(8) = caller
	nop(CALLER)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 6301
	nop(PUSH2)
	call(block6301_5(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block2611_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 2645
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 7069
	nop(PUSH2)
	call(block7069_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2611_1(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 2645
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 7069
	nop(PUSH2)
	call(block7069_4(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2645_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 2656
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(9) = 7079
	nop(PUSH2)
	call(block7079_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2645_1(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 2656
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(9) = 7079
	nop(PUSH2)
	call(block7079_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

block2656_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump2656_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2656_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block2759_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump2656_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block2750_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2656_1(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump2656_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2656_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block2759_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump2656_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block2750_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2750_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block2750_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block2759_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1703(s(0)))
	nop(JUMP)

block2759_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block381_0(s(0)))
	nop(JUMP)

block373_0(s(0), g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 381
	nop(PUSH2)
	s(2) = 2370
	nop(PUSH2)
	call(block2370_1(s(1),s(0),g(profit), g(solvency), g(tokensAvailable), g(closeSell), g(closeBuy), g(buyPrice), g(sellPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(JUMP)

block381_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block6301_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump6301_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6301_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(13), s(12))
	call(block6339_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6301_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(13), s(12))
	call(block6335_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6301_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump6301_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6301_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(8), s(7))
	call(block6339_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6301_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(8), s(7))
	call(block6335_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump6301_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(11), s(10))
	call(block6339_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6301_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(11), s(10))
	call(block6335_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6301_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump6301_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6301_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump6301_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6301_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(11), s(10))
	call(block6339_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6301_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(11), s(10))
	call(block6335_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump6301_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(11), s(10))
	call(block6339_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump6301_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(11), s(10))
	call(block6335_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6301_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump6301_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6301_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump6301_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6301_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(11), s(10))
	call(block6339_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6301_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(11), s(10))
	call(block6335_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6335_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block6335_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6335_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6335_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6335_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6335_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6339_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 5
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump6339_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6339_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	geq(s(13), s(12))
	call(block6417_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6339_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	lt(s(13), s(12))
	call(block6413_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump6339_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	geq(s(8), s(7))
	call(block6417_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6339_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	lt(s(8), s(7))
	call(block6413_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6339_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump6339_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6339_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(11), s(10))
	call(block6417_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6339_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(11), s(10))
	call(block6413_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6339_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump6339_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6339_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	geq(s(11), s(10))
	call(block6417_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6339_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	lt(s(11), s(10))
	call(block6413_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6339_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump6339_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6339_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump6339_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6339_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(11), s(10))
	call(block6417_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump6339_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(11), s(10))
	call(block6413_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6339_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump6339_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6339_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(11), s(10))
	call(block6417_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6339_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(11), s(10))
	call(block6413_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6413_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block6413_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6413_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6413_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6413_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6413_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump6417_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	gt(s(13), s(12))
	call(block6559_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6417_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	leq(s(13), s(12))
	call(block6555_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 5
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(10)
	nop(DUP6)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l3) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l4) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	call(jump6417_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6417_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	gt(s(8), s(7))
	call(block6559_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6417_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	leq(s(8), s(7))
	call(block6555_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = 5
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump6417_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6417_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(11), s(10))
	call(block6559_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6417_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(11), s(10))
	call(block6555_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump6417_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6417_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	gt(s(11), s(10))
	call(block6559_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6417_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	leq(s(11), s(10))
	call(block6555_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump6417_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6417_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump6417_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6417_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	gt(s(11), s(10))
	call(block6559_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump6417_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	leq(s(11), s(10))
	call(block6555_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump6417_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(11), s(10))
	call(block6559_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6417_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(11), s(10))
	call(block6555_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6417_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump6417_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6555_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block6555_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6555_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6555_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6555_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6555_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump6559_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(12), 0)
	call(block6648_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6559_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(12), 0)
	call(block6644_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump6559_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6559_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(7), 0)
	call(block6648_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6559_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(7), 0)
	call(block6644_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = 14
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump6559_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6559_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(10), 0)
	call(block6648_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6559_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(10), 0)
	call(block6644_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6559_2(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6559_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block6648_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6559_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block6644_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6559_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6559_4(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(10), 0)
	call(block6648_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump6559_4(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(10), 0)
	call(block6644_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6559_4(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6559_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(10), 0)
	call(block6648_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6559_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(10), 0)
	call(block6644_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6559_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6559_5(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6644_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block6644_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6644_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6644_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6644_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6644_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6648_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = 14
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump6648_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(12), 0)
	call(block6737_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6648_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(12), 0)
	call(block6733_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6648_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = 14
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump6648_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(7), 0)
	call(block6737_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6648_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(7), 0)
	call(block6733_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6648_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6648_2(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(10), 0)
	call(block6737_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6648_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(10), 0)
	call(block6733_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6648_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6648_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(10), 0)
	call(block6737_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(closeSell), l(l4), l(l3), l(l1), l(l0), address))

jump6648_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(10), 0)
	call(block6733_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump6648_4(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(10), 0)
	call(block6737_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))

jump6648_4(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(10), 0)
	call(block6733_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6648_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6648_4(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6648_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 14
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump6648_5(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6648_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(10), 0)
	call(block6737_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize))

jump6648_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(10), 0)
	call(block6733_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6733_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block6733_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6733_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6733_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6733_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6733_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block6737_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 5
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 5
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 6963
	nop(PUSH2)
	s(13) = 5
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(14) = 7141
	nop(PUSH2)
	call(block7141_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l1), l(l0)))
	nop(JUMP)

block6737_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 6963
	nop(PUSH2)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = 7141
	nop(PUSH2)
	call(block7141_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l1), l(l0)))
	nop(JUMP)

block6737_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 6963
	nop(PUSH2)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 7141
	nop(PUSH2)
	call(block7141_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block6737_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 6963
	nop(PUSH2)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 7141
	nop(PUSH2)
	call(block7141_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(closeSell), l(l1), l(l0)))
	nop(JUMP)

block6737_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l4), l(l3), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 6963
	nop(PUSH2)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 7141
	nop(PUSH2)
	call(block7141_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), g(closeSell), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block6737_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l4), l(l3), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 6963
	nop(PUSH2)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = address
	nop(ADDRESS)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 7141
	nop(PUSH2)
	call(block7141_6(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block6963_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	nop(DUP2)
	l(l1) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3642(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6963_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4653(s(2),s(1),s(0)))
	nop(JUMP)

block6963_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2611_0(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize))
	nop(JUMP)

block6963_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5040(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block6963_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5739(s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block6963_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2611_1(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l0), address, balance, returndatasize))
	nop(JUMP)

block7069_0(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 11
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(tokensAvailable) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3887(s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

block7069_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 11
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(tokensAvailable) = s(9)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2645_0(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

block7069_2(s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 11
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(tokensAvailable) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block5359(s(2),s(1),s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block7069_3(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 11
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(tokensAvailable) = s(9)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block5773(s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(JUMP)

block7069_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 11
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(tokensAvailable) = s(9)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2645_1(s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(JUMP)

jump7079_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block7101_0(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7079_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block7086_0(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7079_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	call(jump7079_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7079_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	eq(s(9), 0)
	call(block7101_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7079_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	neq(s(9), 0)
	call(block7086_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7079_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	call(jump7079_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7079_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block7101_2(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))

jump7079_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block7086_2(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))

block7079_2(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	call(jump7079_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7079_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	eq(s(9), 0)
	call(block7101_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7079_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	neq(s(9), 0)
	call(block7086_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7079_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	call(jump7079_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7086_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 12
	nop(PUSH1)
	s(7) = g(solvency)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7137
	nop(PUSH2)
	call(block7137_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7086_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(9) = s(7)
	nop(DUP2)
	s(10) = 12
	nop(PUSH1)
	s(10) = g(solvency)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 7137
	nop(PUSH2)
	call(block7137_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7086_2(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 12
	nop(PUSH1)
	s(7) = g(solvency)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7137
	nop(PUSH2)
	call(block7137_2(s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block7086_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(9) = s(7)
	nop(DUP2)
	s(10) = 12
	nop(PUSH1)
	s(10) = g(solvency)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 7137
	nop(PUSH2)
	call(block7137_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7101_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(solvency)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump7101_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7101_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	leq(s(7), s(6))
	call(block7124_0(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7101_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	gt(s(7), s(6))
	call(block7112_0(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7101_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = 12
	nop(PUSH1)
	s(9) = g(solvency)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	call(jump7101_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7101_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	leq(s(10), s(9))
	call(block7124_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7101_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	gt(s(10), s(9))
	call(block7112_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7101_2(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(6) = g(solvency)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump7101_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7101_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	leq(s(7), s(6))
	call(block7124_2(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))

jump7101_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	gt(s(7), s(6))
	call(block7112_2(s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), l(l2), l(l1), l(l0), caller, callvalue))

block7101_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = 12
	nop(PUSH1)
	s(9) = g(solvency)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	call(jump7101_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(owner), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7101_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	leq(s(10), s(9))
	call(block7124_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

jump7101_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	gt(s(10), s(9))
	call(block7112_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(solvency), g(owner), l(l0), returndatasize))

block7112_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7136
	nop(PUSH2)
	call(block7136_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7112_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(9) = 0
	nop(PUSH1)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 7136
	nop(PUSH2)
	call(block7136_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7112_2(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7136
	nop(PUSH2)
	call(block7136_2(s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block7112_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	s(9) = 0
	nop(PUSH1)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 7136
	nop(PUSH2)
	call(block7136_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7124_0(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 12
	nop(PUSH1)
	s(7) = g(solvency)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block7136_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7124_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 12
	nop(PUSH1)
	s(10) = g(solvency)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block7136_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7124_2(s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 12
	nop(PUSH1)
	s(7) = g(solvency)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(solvency) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block7136_2(s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue))

block7124_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 12
	nop(PUSH1)
	s(10) = g(solvency)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 12
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(solvency) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block7136_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7136_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(block7137_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7136_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(block7137_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7136_2(s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(block7137_2(s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue))

block7136_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(block7137_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))

block7137_0(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block3898(s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7137_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2656_0(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7137_2(s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block5370(s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue))
	nop(JUMP)

block7137_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2656_1(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), returndatasize))
	nop(JUMP)

block7141_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 10
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	g(closeSell) = s(15)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7141_1(s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 10
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(closeSell) = s(7)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4366(s(3),s(2),s(1),s(0), l(l1), l(l0), address))
	nop(JUMP)

block7141_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 10
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(closeSell) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7141_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 10
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(closeSell) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block7141_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(closeSell), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 10
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(closeSell) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7141_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokensAvailable), g(closeSell), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 10
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(closeSell) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokensAvailable), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block7141_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(solvency), g(tokensAvailable), g(closeSell), g(owner), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 10
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(closeSell) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block6963_5(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(solvency), g(tokensAvailable), g(owner), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

