{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                202,
                119
            ],
            "acceptOwnership()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Random": {
        "function_list": [
            "random(uint64)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "random(uint64)": {
                "argument": {
                    "upper": "uint64"
                },
                "contract": {
                    "_seed": "uint64"
                }
            }
        },
        "function_block_mapping": {
            "random(uint64)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "addLimitAddress(address)",
            "delLitAddress(address)",
            "Token(string,string)",
            "transfer(address,uint256)",
            "batchtransfer(address[],uint256[])",
            "transferInner(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "fallback()",
            "mint(address,uint256)",
            "withdraw(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "addLimitAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "delLitAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "Token(string,string)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "batchtransfer(address[],uint256[])": {
                "argument": {
                    "_to": "address[]",
                    "_amount": "uint256[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transferInner(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                387,
                97
            ],
            "addLimitAddress(address)": [
                1650,
                405
            ],
            "delLitAddress(address)": [
                709,
                185
            ],
            "transfer(address,uint256)": [
                1430,
                361
            ],
            "withdraw(uint256)": [
                664,
                163
            ],
            "mint(address,uint256)": [
                819,
                229
            ],
            "transferFrom(address,address,uint256)": [
                531,
                141
            ],
            "acceptOwnership()": [
                1176,
                295
            ],
            "batchtransfer(address[],uint256[])": [
                896,
                251
            ],
            "transferOwnership(address)": [
                1717,
                427
            ]
        },
        "block_CALL_mapping": {
            "jump3343": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block3343": [
                "msg.sender.transfer(amount)"
            ]
        }
    },
    "GameOne": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "random(uint64)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "GameOne(address)",
            "fallback()",
            "setCut(uint256)",
            "setMinEth(uint256)",
            "setMaxEth(uint256)",
            "setTokenAddress(address)",
            "bet()",
            "reset()",
            "randomaward(address,address,uint256,uint256)",
            "withdraw(uint256)",
            "setFinished()",
            "setRunning()",
            "transferInner(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "random(uint64)": {
                "argument": {
                    "upper": "uint64"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "GameOne(address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setCut(uint256)": {
                "argument": {
                    "newCut": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setMinEth(uint256)": {
                "argument": {
                    "newMinEth": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setMaxEth(uint256)": {
                "argument": {
                    "newMaxEth": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setTokenAddress(address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "bet()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "reset()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "randomaward(address,address,uint256,uint256)": {
                "argument": {
                    "av": "uint256",
                    "bv": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setFinished()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "setRunning()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "transferInner(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256",
                    "gameState": "uint256",
                    "GAME_RUNNING": "uint256",
                    "GAME_FINISHED": "uint256",
                    "gameCount": "uint256",
                    "minEth": "uint256",
                    "maxEth": "uint256",
                    "cut": "uint256",
                    "ethQuantity": "uint256",
                    "opponentAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setRunning()": [
                1137,
                427
            ],
            "random(uint64)": [
                316,
                97
            ],
            "bet()": [
                306,
                75
            ],
            "setMaxEth(uint256)": [
                523,
                163
            ],
            "setFinished()": [
                784,
                273
            ],
            "withdraw(uint256)": [
                478,
                141
            ],
            "setTokenAddress(address)": [
                411,
                119
            ],
            "transferOwnership(address)": [
                1332,
                537
            ],
            "setMinEth(uint256)": [
                918,
                361
            ],
            "setCut(uint256)": [
                807,
                295
            ],
            "acceptOwnership()": [
                895,
                339
            ]
        },
        "block_CALL_mapping": {
            "block4386_0": [
                "_to.transfer(_value)"
            ],
            "block4386_1": [
                "_to.transfer(_value)"
            ],
            "jump4386_0": [
                "_to.transfer(_value)",
                "_to.transfer(_value)"
            ],
            "block2048_0": [
                "tokenContract.mint(loser, token)"
            ],
            "jump2048_1": [
                "tokenContract.mint(loser, token)",
                "tokenContract.mint(loser, token)"
            ],
            "block2048_1": [
                "tokenContract.mint(loser, token)"
            ],
            "jump2801": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block2048": [
                "tokenContract.mint(loser, token)"
            ],
            "jump2048_0": [
                "tokenContract.mint(loser, token)",
                "tokenContract.mint(loser, token)"
            ],
            "block2801": [
                "msg.sender.transfer(amount)"
            ],
            "jump4386_1": [
                "_to.transfer(_value)",
                "_to.transfer(_value)"
            ],
            "jump4386": [
                "_to.transfer(_value)",
                "_to.transfer(_value)"
            ],
            "block4386": [
                "_to.transfer(_value)"
            ],
            "jump2048": [
                "tokenContract.mint(loser, token)",
                "tokenContract.mint(loser, token)"
            ]
        }
    }
}