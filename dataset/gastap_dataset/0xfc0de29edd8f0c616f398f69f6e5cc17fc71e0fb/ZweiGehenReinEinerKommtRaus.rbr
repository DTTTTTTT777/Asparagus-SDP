block0(g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	lt(s(1), s(0))
	call(block76())

jump0(s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	geq(s(1), s(0))
	call(block13(g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize, timestamp))

block13(g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize, timestamp)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3366413460
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block81(s(0),g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

jump13(s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block65(s(0),g(player1), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(player1), l(l1), l(l0), callvalue)=>
	eq(s(2), s(1))
	call(block91(s(0),g(player1), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(player1), l(l1), l(l0), callvalue)=>
	neq(s(2), s(1))
	call(block76_0(s(0)))

block65(s(0), g(player1), l(l1), l(l0), callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3540555236
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(player1), l(l1), l(l0), callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block81(s(0), g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 89
	nop(PUSH2)
	s(2) = 178
	nop(PUSH2)
	call(block178(s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block89(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block91(s(0), g(player1), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump91(s(2),s(1),s(0),g(player1), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump91(s(2), s(1), s(0), g(player1), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block103(s(1), s(0),g(player1), l(l1), l(l0)))

jump91(s(2), s(1), s(0), g(player1), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block99(s(1), s(0)))

block99(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block103(s(1), s(0), g(player1), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 112
	nop(PUSH2)
	s(2) = 809
	nop(PUSH2)
	call(block809(s(1),s(0),g(player1), l(l1), l(l0)))
	nop(JUMP)

block112(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump178(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block206(s(5), s(4), s(3), s(2), s(1), s(0),g(player1), l(l2), l(l1), l(l0), address, balance, callvalue, returndatasize, timestamp))

jump178(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block202(s(5), s(4), s(3), s(2), s(1), s(0)))

block178(s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = caller
	nop(CALLER)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 1000000000000
	nop(PUSH5)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump178(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block202(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block206(s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 48651686401141635575833393197141098560783546392074520579640839651497942514957
	nop(PUSH32)
	s(7) = s(2)
	nop(DUP5)
	s(8) = callvalue
	nop(CALLVALUE)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(player1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump206(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump206(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block468(s(5), s(4), s(3), s(2), s(1), s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump206(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block400(s(5), s(4), s(3), s(2), s(1), s(0),g(player1)))

block400(s(5), s(4), s(3), s(2), s(1), s(0), g(player1))=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(player1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(player1) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 803
	nop(PUSH2)
	call(block803(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block468(s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(player1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(8)
	nop(DUP2)
	call(jump468(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump468(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(10), 0)
	call(block521(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))

jump468(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(10), 0)
	call(block520(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block520(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block521(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(7) = s(8)*s(7)
	nop(MUL)
	call(jump521(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump521(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(7), s(6))
	call(block533(s(5), s(4), s(3), s(2), s(1), s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))

jump521(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(7), s(6))
	call(block530(s(5), s(4), s(3), s(2), s(1), s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))

block530(s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block533(s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))

jump533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(7), 0)
	call(block694(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump533(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(7), 0)
	call(block685(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block533(s(5), s(4), s(3), s(2), s(1), s(0), g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(player1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(player1) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump533(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(player1), l(l2), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block685(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block694(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = 70621652831454562338404219402937416215308382086357630150138307596068835700256
	nop(PUSH32)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l2) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	call(block803(s(5),s(4),s(3),s(2),s(1),s(0)))

block803(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block89(s(0)))
	nop(JUMP)

block809(s(1), s(0), g(player1), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(player1)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block112(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block76_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

