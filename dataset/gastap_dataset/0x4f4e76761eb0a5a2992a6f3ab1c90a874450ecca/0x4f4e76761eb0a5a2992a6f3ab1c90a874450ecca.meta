{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StarbaseEarlyPurchase": {
        "function_list": [
            "purchasedAmountBy(address)",
            "totalAmountOfEarlyPurchases()",
            "numberOfEarlyPurchases()",
            "appendEarlyPurchase(address,uint256,uint256)",
            "closeEarlyPurchase()",
            "setup(address)",
            "StarbaseEarlyPurchase()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "purchasedAmountBy(address)": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "totalAmountOfEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "numberOfEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "appendEarlyPurchase(address,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "purchasedAt": "uint256"
                },
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "closeEarlyPurchase()": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "setup(address)": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "StarbaseEarlyPurchase()": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "PURCHASE_AMOUNT_RATE_REFERENCE": "string",
                    "PURCHASE_AMOUNT_CAP": "uint256",
                    "earlyPurchases": "StarbaseEarlyPurchase.EarlyPurchase[]",
                    "earlyPurchaseClosedAt": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "totalAmountOfEarlyPurchases()": [
                964,
                295
            ],
            "setup(address)": [
                541,
                185
            ],
            "purchasedAmountBy(address)": [
                411,
                141
            ],
            "appendEarlyPurchase(address,uint256,uint256)": [
                806,
                251
            ],
            "closeEarlyPurchase()": [
                917,
                273
            ],
            "numberOfEarlyPurchases()": [
                368,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump2289": [
                "starbaseCrowdsale.startDate()",
                "starbaseCrowdsale.startDate()"
            ],
            "block2289": [
                "starbaseCrowdsale.startDate()"
            ]
        }
    },
    "StarbaseEarlyPurchaseAmendment": {
        "function_list": [
            "earlyPurchases(uint256)",
            "purchasedAmountBy(address)",
            "totalAmountOfEarlyPurchases()",
            "numberOfEarlyPurchases()",
            "setup(address)",
            "invalidateEarlyPurchase(uint256)",
            "isInvalidEarlyPurchase(uint256)",
            "amendEarlyPurchase(uint256,address,uint256,uint256)",
            "isAmendedEarlyPurchase(uint256)",
            "loadStarbaseEarlyPurchases(address)",
            "StarbaseEarlyPurchaseAmendment()",
            "normalizedEarlyPurchases()",
            "getEarlyPurchase(uint256)",
            "numberOfRawEarlyPurchases()"
        ],
        "initial_state": {
            "earlyPurchases(uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "purchasedAmountBy(address)": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "totalAmountOfEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "numberOfEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "setup(address)": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "invalidateEarlyPurchase(uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "isInvalidEarlyPurchase(uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "amendEarlyPurchase(uint256,address,uint256,uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256",
                    "amount": "uint256",
                    "purchasedAt": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "isAmendedEarlyPurchase(uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "loadStarbaseEarlyPurchases(address)": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "StarbaseEarlyPurchaseAmendment()": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "normalizedEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "getEarlyPurchase(uint256)": {
                "argument": {
                    "earlyPurchaseIndex": "uint256"
                },
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            },
            "numberOfRawEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "invalidEarlyPurchaseIndexes": "uint256[]",
                    "amendedEarlyPurchaseIndexes": "uint256[]"
                }
            }
        },
        "function_block_mapping": {
            "totalAmountOfEarlyPurchases()": [
                1447,
                383
            ],
            "isInvalidEarlyPurchase(uint256)": [
                832,
                229
            ],
            "invalidateEarlyPurchase(uint256)": [
                992,
                273
            ],
            "amendEarlyPurchase(uint256,address,uint256,uint256)": [
                1061,
                295
            ],
            "earlyPurchases(uint256)": [
                6112,
                914
            ],
            "purchasedAmountBy(address)": [
                745,
                207
            ],
            "loadStarbaseEarlyPurchases(address)": [
                1182,
                317
            ],
            "setup(address)": [
                901,
                251
            ],
            "isAmendedEarlyPurchase(uint256)": [
                235,
                75
            ],
            "numberOfEarlyPurchases()": [
                5452,
                886
            ]
        },
        "block_CALL_mapping": {
            "block6112_0": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "block6112": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "block3146": [
                "starbaseCrowdsale.startDate()"
            ],
            "jump5452": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_5": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block3827": [
                "starbaseCrowdsale.startDate()"
            ],
            "jump6112_1": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)",
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "block5452": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block6112_1": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "jump6112_0": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)",
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "block4948": [
                "starbaseEarlyPurchase.earlyPurchaseClosedAt()"
            ],
            "jump3146": [
                "starbaseCrowdsale.startDate()",
                "starbaseCrowdsale.startDate()"
            ],
            "jump4948": [
                "starbaseEarlyPurchase.earlyPurchaseClosedAt()",
                "starbaseEarlyPurchase.earlyPurchaseClosedAt()"
            ],
            "block1911": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "jump5452_9": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_8": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_1": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_0": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_3": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_2": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_5": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_4": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump6112": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)",
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "jump5452_6": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_7": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump3827": [
                "starbaseCrowdsale.startDate()",
                "starbaseCrowdsale.startDate()"
            ],
            "block5452_13": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_12": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_11": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_10": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_9": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_8": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_3": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_2": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_1": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_0": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_7": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block5452_6": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump4576": [
                "starbaseCrowdsale.startDate()",
                "starbaseCrowdsale.startDate()"
            ],
            "block5452_4": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "block4576": [
                "starbaseCrowdsale.startDate()"
            ],
            "jump1911": [
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)",
                "starbaseEarlyPurchase.earlyPurchases(earlyPurchaseIndex)"
            ],
            "jump5452_11": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_10": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_13": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ],
            "jump5452_12": [
                "starbaseEarlyPurchase.numberOfEarlyPurchases()",
                "starbaseEarlyPurchase.numberOfEarlyPurchases()"
            ]
        }
    },
    "StarbaseCrowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "StarbaseCrowdsale(address,address)",
            "fallback()",
            "setup(address,uint256)",
            "withdrawForCompany()",
            "updatePurchaseStartBlock(uint256)",
            "updateCnyEthRate(uint256)",
            "updateCnyBtcRate(uint256)",
            "ownerStartsCrowdsale(uint256)",
            "endCrowdsale(uint256)",
            "endCrowdsale()",
            "withdrawPurchasedTokens()",
            "loadEarlyPurchases()",
            "loadPresalePurchases(address)",
            "setQualifiedPartner(address,uint256,uint256)",
            "unlistQualifiedPartner(address)",
            "updateQualifiedPartnerCapAmount(address,uint256)",
            "isEnded()",
            "numOfPurchases()",
            "totalRaisedAmountInCny()",
            "totalAmountOfEarlyPurchasesWithBonus()",
            "totalAmountOfEarlyPurchasesWithoutBonus()",
            "purchaseAsQualifiedPartner()",
            "purchaseWithEth()",
            "startCrowdsale(uint256)",
            "recordPurchase(address,uint256,uint256)",
            "calculateBonus(StarbaseCrowdsale.BonusMilestones,uint256,uint256,uint256,uint256)",
            "getBonusAmountCalculation(uint256)",
            "sendQualifiedPartnerCommissionFee(address,uint256)",
            "redirectToPurchase()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "StarbaseCrowdsale(address,address)": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "setup(address,uint256)": {
                "argument": {
                    "_purchaseStartBlock": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "withdrawForCompany()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "updatePurchaseStartBlock(uint256)": {
                "argument": {
                    "_purchaseStartBlock": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "updateCnyEthRate(uint256)": {
                "argument": {
                    "rate": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "updateCnyBtcRate(uint256)": {
                "argument": {
                    "rate": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "ownerStartsCrowdsale(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "endCrowdsale(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "endCrowdsale()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "withdrawPurchasedTokens()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "loadEarlyPurchases()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "loadPresalePurchases(address)": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "setQualifiedPartner(address,uint256,uint256)": {
                "argument": {
                    "_amountCap": "uint256",
                    "_commissionFeePercentage": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "unlistQualifiedPartner(address)": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "updateQualifiedPartnerCapAmount(address,uint256)": {
                "argument": {
                    "_amountCap": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "isEnded()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "numOfPurchases()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "totalRaisedAmountInCny()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "totalAmountOfEarlyPurchasesWithBonus()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "totalAmountOfEarlyPurchasesWithoutBonus()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "purchaseAsQualifiedPartner()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "purchaseWithEth()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "startCrowdsale(uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "recordPurchase(address,uint256,uint256)": {
                "argument": {
                    "rawAmount": "uint256",
                    "timestamp": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "calculateBonus(StarbaseCrowdsale.BonusMilestones,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "bonusRange": "uint256",
                    "bonusTier": "uint256",
                    "results": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "getBonusAmountCalculation(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "sendQualifiedPartnerCommissionFee(address,uint256)": {
                "argument": {
                    "amountSent": "uint256"
                },
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "redirectToPurchase()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "crowdsaleTokenAmount": "uint256",
                    "earlyPurchaseTokenAmount": "uint256",
                    "MIN_INVESTMENT": "uint256",
                    "MAX_CAP": "uint256",
                    "PURCHASE_AMOUNT_UNIT": "string",
                    "numOfDeliveredCrowdsalePurchases": "uint256",
                    "numOfDeliveredEarlyPurchases": "uint256",
                    "numOfLoadedEarlyPurchases": "uint256",
                    "earlyPurchasers": "address[]",
                    "totalAmountOfEarlyPurchases": "uint256",
                    "maxCrowdsaleCap": "uint256",
                    "totalAmountOfCrowdsalePurchases": "uint256",
                    "totalAmountOfCrowdsalePurchasesWithoutBonus": "uint256",
                    "purchaseStartBlock": "uint256",
                    "startDate": "uint256",
                    "endedAt": "uint256",
                    "crowdsalePurchases": "StarbaseCrowdsale.CrowdsalePurchase[]",
                    "cnyBtcRate": "uint256",
                    "cnyEthRate": "uint256",
                    "firstBonusEnds": "uint256",
                    "secondBonusEnds": "uint256",
                    "thirdBonusEnds": "uint256",
                    "fourthBonusEnds": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "endCrowdsale(uint256)": [
                1906,
                537
            ],
            "purchaseWithEth()": [
                2168,
                625
            ],
            "totalAmountOfEarlyPurchasesWithoutBonus()": [
                2202,
                647
            ],
            "updatePurchaseStartBlock(uint256)": [
                3980,
                1285
            ],
            "setup(address,uint256)": [
                3647,
                1197
            ],
            "updateCnyBtcRate(uint256)": [
                1064,
                229
            ],
            "unlistQualifiedPartner(address)": [
                1435,
                383
            ],
            "setQualifiedPartner(address,uint256,uint256)": [
                896,
                163
            ],
            "totalRaisedAmountInCny()": [
                1262,
                317
            ],
            "ownerStartsCrowdsale(uint256)": [
                3748,
                1219
            ],
            "isEnded()": [
                2594,
                801
            ],
            "withdrawPurchasedTokens()": [
                2905,
                911
            ],
            "loadEarlyPurchases()": [
                3533,
                1153
            ],
            "numOfPurchases()": [
                10650,
                800
            ],
            "purchaseAsQualifiedPartner()": [
                1030,
                207
            ],
            "updateQualifiedPartnerCapAmount(address,uint256)": [
                1502,
                405
            ],
            "withdrawForCompany()": [
                1709,
                471
            ],
            "updateCnyEthRate(uint256)": [
                2836,
                889
            ],
            "totalAmountOfEarlyPurchasesWithBonus()": [
                3793,
                1241
            ],
            "loadPresalePurchases(address)": [
                3380,
                1087
            ],
            "transferOwnership(address)": [
                3580,
                1175
            ]
        },
        "block_CALL_mapping": {
            "jump12712": [
                "starbaseEpAmendment.amendedEarlyPurchases(i)",
                "starbaseEpAmendment.amendedEarlyPurchases(i)"
            ],
            "jump14959_1": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block8556": [
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "block6896": [
                "company.transfer(this.balance)"
            ],
            "jump14681": [
                "starbaseToken.isFundraiser(msg.sender)",
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "block5483": [
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "jump11650": [
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()",
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()"
            ],
            "block12712": [
                "starbaseEpAmendment.amendedEarlyPurchases(i)"
            ],
            "jump15691": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)",
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "block12275": [
                "starbaseEpAmendment.isAmendedEarlyPurchase(i)"
            ],
            "jump7663_0": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump7663_1": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump6775": [
                "starbaseToken.company()",
                "starbaseToken.company()"
            ],
            "jump6896": [
                "company.transfer(this.balance)",
                "company.transfer(this.balance)"
            ],
            "jump7663": [
                "picopsCertifier.certified(msg.sender)",
                "picopsCertifier.certified(msg.sender)"
            ],
            "block12483": [
                "starbaseEpAmendment.earlyPurchases(i)"
            ],
            "jump8556": [
                "starbaseToken.isFundraiser(msg.sender)",
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "jump12483": [
                "starbaseEpAmendment.earlyPurchases(i)",
                "starbaseEpAmendment.earlyPurchases(i)"
            ],
            "jump15691_1": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)",
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "block10650": [
                "presale.numOfPurchases()"
            ],
            "block7663": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "block10120": [
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, epTokenCount)"
            ],
            "jump14959_4": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block11650": [
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()"
            ],
            "jump14959_0": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "jump10650": [
                "presale.numOfPurchases()",
                "presale.numOfPurchases()"
            ],
            "jump14959_2": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "jump14959_3": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block7995_0": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "block7663_1": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "block7663_0": [
                "picopsCertifier.certified(msg.sender)"
            ],
            "jump15691_0": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)",
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "block6539": [
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "jump12275": [
                "starbaseEpAmendment.isAmendedEarlyPurchase(i)",
                "starbaseEpAmendment.isAmendedEarlyPurchase(i)"
            ],
            "block14259": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "block6775": [
                "starbaseToken.company()"
            ],
            "jump14259": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()",
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "block14959_3": [
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block14959_0": [
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block14959_1": [
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block7995": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "block14959_4": [
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block9401": [
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, tokenCount)"
            ],
            "block15691_1": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "jump7995_0": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()",
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "block11808": [
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()\n            .numberOfEarlyPurchases()"
            ],
            "block10827": [
                "presale.crowdsalePurchases(i)"
            ],
            "jump5483": [
                "starbaseToken.isFundraiser(msg.sender)",
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "jump6539": [
                "starbaseToken.isFundraiser(msg.sender)",
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "block14959_2": [
                "purchaser.transfer(ethValueToReturn)"
            ],
            "block14681": [
                "starbaseToken.isFundraiser(msg.sender)"
            ],
            "block12042": [
                "starbaseEpAmendment.isInvalidEarlyPurchase(i)"
            ],
            "jump11808": [
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()\n            .numberOfEarlyPurchases()",
                "starbaseEpAmendment\n            .starbaseEarlyPurchase()\n            .numberOfEarlyPurchases()"
            ],
            "block15691_0": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "jump7995": [
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()",
                "starbaseEpAmendment.totalAmountOfEarlyPurchases()"
            ],
            "jump14959": [
                "purchaser.transfer(ethValueToReturn)",
                "purchaser.transfer(ethValueToReturn)"
            ],
            "jump12042": [
                "starbaseEpAmendment.isInvalidEarlyPurchase(i)",
                "starbaseEpAmendment.isInvalidEarlyPurchase(i)"
            ],
            "jump10827": [
                "presale.crowdsalePurchases(i)",
                "presale.crowdsalePurchases(i)"
            ],
            "jump10120": [
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, epTokenCount)",
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, epTokenCount)"
            ],
            "jump9401": [
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, tokenCount)",
                "starbaseToken.allocateToCrowdsalePurchaser(msg.sender, tokenCount)"
            ],
            "block15691": [
                "qualifiedPartner.transfer(commissionFeePercentageCalculationAmount)"
            ],
            "block14959": [
                "purchaser.transfer(ethValueToReturn)"
            ]
        }
    }
}