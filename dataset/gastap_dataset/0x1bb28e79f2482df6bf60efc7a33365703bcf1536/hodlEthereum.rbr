block0(l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	lt(s(1), s(0))
	call(block76(l(l2), l(l1), l(l0), caller, callvalue))

jump0(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	geq(s(1), s(0))
	call(block13(l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))

block13(l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 893551858
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block222(s(0), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump13(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block65(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue))

jump65(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue)=>
	eq(s(2), s(1))
	call(block245(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump65(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue)=>
	neq(s(2), s(1))
	call(block76_0(s(0), l(l2), l(l1), l(l0), caller, callvalue))

block65(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1245648871
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(0) = callvalue
	nop(CALLVALUE)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 32
	nop(PUSH1)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(3) = s(1)
	nop(DUP2)
	l(l2) = s(2)
	nop(MSTORE)
	s(2) = 32
	nop(PUSH1)
	s(1) = s(2)+s(1)
	nop(ADD)
	s(2) = 0
	nop(PUSH1)
	s(1) = sha3(s(2), s(1))
	nop(SHA3)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(0)
	nop(DUP3)
	s(4) = s(1)
	nop(DUP3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(0)
	s(0) = s(3)
	s(3) = s(4)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(2) = s(0)
	nop(DUP2)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	gs(1) = s(2)
	gs(2) = s(1)
	nop(SSTORE)
	nop(POP)
	s(0) = callvalue
	nop(CALLVALUE)
	s(1) = caller
	nop(CALLER)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = 7839735580576036366916269989084999793593087722739501688806187503658341380241
	nop(PUSH32)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG3)
	skip
	nop(STOP)

block222(s(0), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump222(s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump222(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block234(s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump222(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block230(s(1), s(0)))

block230(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block234(s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 243
	nop(PUSH2)
	s(2) = 332
	nop(PUSH2)
	call(block332(s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(JUMP)

block243(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block245(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump245(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump245(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block257(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump245(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block253(s(1), s(0)))

block253(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block257(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 310
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 701
	nop(PUSH2)
	call(block701(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block310(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump332(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	eq(s(4), 0)
	call(block415(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump332(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	neq(s(4), 0)
	call(block348(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

block332(s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1596067200
	nop(PUSH4)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(4) = s(3)
	nop(DUP1)
	call(jump332(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block348(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block415(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump415(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block426(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize))

jump415(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block422(s(2), s(1), s(0)))

block415(s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump415(s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block422(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block426(s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump426(s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump426(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block629(s(3), s(2), s(1), s(0), l(l0), caller))

jump426(s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block620(s(3), s(2), s(1), s(0), returndatasize))

block620(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block629(s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 6235121906880953380687714013078967015306579359588622388318168990225839237351
	nop(PUSH32)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	call(block243(s(0)))
	nop(JUMP)

block701(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block310(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block76_0(s(0), l(l2), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = 32
	nop(PUSH1)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH1)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(2)
	nop(DUP3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	gs(1) = s(3)
	gs(2) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 7839735580576036366916269989084999793593087722739501688806187503658341380241
	nop(PUSH32)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG3)
	skip
	nop(STOP)

