{
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                848,
                229
            ],
            "transferFrom(address,address,uint256)": [
                579,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BillPokerPreICO": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "addPromo(bytes32,uint256,address,uint256,uint256)",
            "removePromo(bytes32)",
            "fallback()",
            "buyTokens(address)",
            "sendTokens(address,uint256)",
            "getCountBonus(uint256)",
            "getTimeBonus(uint256)",
            "withdrawal(address)",
            "holdTokenInvestorsCount()",
            "finalSendTokens()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "addPromo(bytes32,uint256,address,uint256,uint256)": {
                "argument": {
                    "promoPublicKey": "bytes32",
                    "userPercentToken": "uint256",
                    "dealerPercentToken": "uint256",
                    "dealerPercentETH": "uint256"
                },
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "removePromo(bytes32)": {
                "argument": {
                    "promoPublicKey": "bytes32"
                },
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "sendTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "getCountBonus(uint256)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "getTimeBonus(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "withdrawal(address)": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "holdTokenInvestorsCount()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "finalSendTokens()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "holdTokenInvestors": "address[]",
                    "minInvest": "uint256",
                    "tokensLimit": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "price": "uint256",
                    "investorCount": "uint256",
                    "etherForCountBonus": "uint256[]",
                    "amountForCountBonus": "uint256[]",
                    "sendInvestorIndex": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawal(address)": [
                1180,
                427
            ],
            "getCountBonus(uint256)": [
                1488,
                515
            ],
            "finalSendTokens()": [
                580,
                163
            ],
            "unpause()": [
                514,
                119
            ],
            "addPromo(bytes32,uint256,address,uint256,uint256)": [
                1290,
                471
            ],
            "holdTokenInvestorsCount()": [
                937,
                317
            ],
            "pause()": [
                1070,
                383
            ],
            "removePromo(bytes32)": [
                845,
                273
            ],
            "transferOwnership(address)": [
                2025,
                669
            ],
            "getTimeBonus(uint256)": [
                1553,
                537
            ],
            "buyTokens(address)": [
                1971,
                647
            ]
        },
        "block_CALL_mapping": {
            "block2605_0": [
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block2605_1": [
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "jump3097_0": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "jump3097_1": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "jump2605": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block5308": [
                "to.transfer(this.balance)"
            ],
            "block3097": [
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block2434_0": [
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "block2434_1": [
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "jump7169_0": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump7169_1": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump7169_2": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump7169_3": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump7169_4": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump5308": [
                "to.transfer(this.balance)",
                "to.transfer(this.balance)"
            ],
            "jump2434": [
                "msg.sender.transfer(msg.value.sub(weiAmount))",
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "block7169": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump4564": [
                "token.transferFrom(tokenWallet, investor, tokenAmount)",
                "token.transferFrom(tokenWallet, investor, tokenAmount)"
            ],
            "block2434": [
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "block4564": [
                "token.transferFrom(tokenWallet, investor, tokenAmount)"
            ],
            "jump2605_0": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "jump2605_1": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block7169_1": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "block2605": [
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block7169_2": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "block7169_3": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "block7169_0": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump7169": [
                "token.transferFrom(tokenWallet, to, tokenAmount)",
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "block7169_4": [
                "token.transferFrom(tokenWallet, to, tokenAmount)"
            ],
            "jump2434_0": [
                "msg.sender.transfer(msg.value.sub(weiAmount))",
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "jump2434_1": [
                "msg.sender.transfer(msg.value.sub(weiAmount))",
                "msg.sender.transfer(msg.value.sub(weiAmount))"
            ],
            "jump3097": [
                "promo.dealer.transfer(dealerEthAmount)",
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block3097_0": [
                "promo.dealer.transfer(dealerEthAmount)"
            ],
            "block3097_1": [
                "promo.dealer.transfer(dealerEthAmount)"
            ]
        }
    }
}