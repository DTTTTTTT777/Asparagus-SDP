{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "totalSupply()": [
                556,
                141
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "LegendsToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "LegendsToken(address,address,uint256,bool)",
            "addTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "LegendsToken(address,address,uint256,bool)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "addTokens(address,uint256)": {
                "argument": {
                    "VIP": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "totalVIP": "uint256",
                    "start": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1678,
                383
            ],
            "approve(address,uint256)": [
                579,
                97
            ],
            "totalSupply()": [
                680,
                119
            ],
            "balanceOf(address)": [
                1256,
                273
            ],
            "transferFrom(address,address,uint256)": [
                723,
                141
            ],
            "addTokens(address,uint256)": [
                1092,
                229
            ],
            "transfer(address,uint256)": [
                1534,
                339
            ]
        },
        "block_CALL_mapping": {
            "block408_0": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)"
            ],
            "jump408_0": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)",
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)"
            ],
            "block408": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)"
            ],
            "jump408": [
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)",
                "LegendsCrowdfund(legendsCrowdfund).purchaseMembership.value(msg.value)(msg.sender)"
            ]
        }
    },
    "LegendsCrowdfund": {
        "function_list": [
            "LegendsCrowdfund(address,uint256,uint256)",
            "setTokenContract(LegendsToken)",
            "purchaseMembership(address)"
        ],
        "initial_state": {
            "LegendsCrowdfund(address,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_limitVIP": "uint256"
                },
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            },
            "setTokenContract(LegendsToken)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            },
            "purchaseMembership(address)": {
                "argument": {},
                "contract": {
                    "start": "uint256",
                    "limitVIP": "uint256",
                    "totalETH": "uint256",
                    "totalVIP": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "purchaseMembership(address)": [
                483,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump1716": [
                "legendsToken.addTokens(recipient, VIP)",
                "legendsToken.addTokens(recipient, VIP)"
            ],
            "block1716": [
                "legendsToken.addTokens(recipient, VIP)"
            ],
            "block1178": [
                "exitAddress.send(msg.value)"
            ],
            "jump1178": [
                "exitAddress.send(msg.value)",
                "exitAddress.send(msg.value)"
            ]
        }
    }
}