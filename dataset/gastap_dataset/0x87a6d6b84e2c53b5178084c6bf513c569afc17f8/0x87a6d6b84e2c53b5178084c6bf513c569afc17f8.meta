{
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ShortOrder": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "ShortOrder()",
            "changeAdmin(address)",
            "tokenFulfillmentDeposit(address[2],uint256,uint256[7],uint8,bytes32[2])",
            "depositCoupon(address[2],uint256[7],uint8,bytes32[2])",
            "placeLong(address[2],uint256[7],uint8,bytes32[2])",
            "buyLong(address[2],uint256[2],uint8,bytes32[3])",
            "exerciseLong(address[2],uint256[7],uint8,bytes32[2])",
            "claimDonations(address[2],uint256[7],uint8,bytes32[2])",
            "nonActivationShortWithdrawal(address[2],uint256[7],uint8,bytes32[2])",
            "nonActivationWithdrawal(address[2],uint256[7],uint8,bytes32[2])",
            "returnBalance(address[2],uint256[7],uint8,bytes32[2])",
            "returnTokenBalance(address[2],uint256[7],uint8,bytes32[2])",
            "returnUserBalance(address,address[2],uint256[7],uint8,bytes32[2])",
            "returnCoupon(address[2],uint256[7],uint8,bytes32[2])",
            "returnTokenDepositState(address[2],uint256[7],uint8,bytes32[2])"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "ShortOrder()": {
                "argument": {},
                "contract": {}
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "tokenFulfillmentDeposit(address[2],uint256,uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "amount": "uint256",
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "depositCoupon(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "placeLong(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "buyLong(address[2],uint256[2],uint8,bytes32[3])": {
                "argument": {
                    "amountNonce": "uint256[2]",
                    "v": "uint8",
                    "hashRS": "bytes32[3]"
                },
                "contract": {}
            },
            "exerciseLong(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "claimDonations(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "nonActivationShortWithdrawal(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "nonActivationWithdrawal(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "returnBalance(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "returnTokenBalance(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "returnUserBalance(address,address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "returnCoupon(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            },
            "returnTokenDepositState(address[2],uint256[7],uint8,bytes32[2])": {
                "argument": {
                    "minMaxDWCPNonce": "uint256[7]",
                    "v": "uint8",
                    "rs": "bytes32[2]"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "returnTokenDepositState(address[2],uint256[7],uint8,bytes32[2])": [
                828,
                229
            ],
            "nonActivationShortWithdrawal(address[2],uint256[7],uint8,bytes32[2])": [
                750,
                207
            ],
            "returnBalance(address[2],uint256[7],uint8,bytes32[2])": [
                1140,
                317
            ],
            "depositCoupon(address[2],uint256[7],uint8,bytes32[2])": [
                1075,
                295
            ],
            "exerciseLong(address[2],uint256[7],uint8,bytes32[2])": [
                997,
                273
            ],
            "nonActivationWithdrawal(address[2],uint256[7],uint8,bytes32[2])": [
                672,
                185
            ],
            "returnUserBalance(address,address[2],uint256[7],uint8,bytes32[2])": [
                444,
                141
            ],
            "buyLong(address[2],uint256[2],uint8,bytes32[3])": [
                1238,
                339
            ],
            "changeAdmin(address)": [
                930,
                251
            ],
            "placeLong(address[2],uint256[7],uint8,bytes32[2])": [
                213,
                75
            ],
            "tokenFulfillmentDeposit(address[2],uint256,uint256[7],uint8,bytes32[2])": [
                356,
                119
            ],
            "returnCoupon(address[2],uint256[7],uint8,bytes32[2])": [
                1303,
                361
            ],
            "claimDonations(address[2],uint256[7],uint8,bytes32[2])": [
                278,
                97
            ],
            "returnTokenBalance(address[2],uint256[7],uint8,bytes32[2])": [
                574,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump18984": [
                "sha256(sellerShort[0],amountNonce)",
                "sha256(sellerShort[0],amountNonce)"
            ],
            "block19456": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",longTransferHash[0]),v,hashRS[1],hashRS[2])"
            ],
            "block12293": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block20925": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block18363": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump7394": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump10404": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block11043": [
                "msg.sender.transfer(orderRecord[msg.sender][orderHash].coupon)"
            ],
            "block8470": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump3768": [
                "admin.transfer(safeAdd(orderRecord[tokenUser[1]][orderHash].coupon,orderRecord[tokenUser[1]][orderHash].balance))",
                "admin.transfer(safeAdd(orderRecord[tokenUser[1]][orderHash].coupon,orderRecord[tokenUser[1]][orderHash].balance))"
            ],
            "block10404": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump13996": [
                "msg.sender.transfer(couponAmount)",
                "msg.sender.transfer(couponAmount)"
            ],
            "block18984": [
                "sha256(sellerShort[0],amountNonce)"
            ],
            "jump12293": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block16269": [
                "msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))"
            ],
            "jump7766": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump1692": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump8470": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump11812": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump19668": [
                "sellerShort[0].transfer(msg.value)",
                "sellerShort[0].transfer(msg.value)"
            ],
            "block11812": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump2950": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block1692": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block10654": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump8761": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block8058": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump16269": [
                "msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))",
                "msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))"
            ],
            "block7102": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block18655": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump8058": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block7766": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block3768": [
                "admin.transfer(safeAdd(orderRecord[tokenUser[1]][orderHash].coupon,orderRecord[tokenUser[1]][orderHash].balance))"
            ],
            "block13996": [
                "msg.sender.transfer(couponAmount)"
            ],
            "jump14273": [
                "Token(tokenUser[0]).transfer(msg.sender,amount)",
                "Token(tokenUser[0]).transfer(msg.sender,amount)"
            ],
            "jump9195": [
                "msg.sender.transfer(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])",
                "msg.sender.transfer(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])"
            ],
            "block9195": [
                "msg.sender.transfer(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])"
            ],
            "block1401": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block12588": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump19456": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",longTransferHash[0]),v,hashRS[1],hashRS[2])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",longTransferHash[0]),v,hashRS[1],hashRS[2])"
            ],
            "jump12588": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump6399": [
                "Token(tokenUser[0]).transferFrom(msg.sender,this,amount)",
                "Token(tokenUser[0]).transferFrom(msg.sender,this,amount)"
            ],
            "block17593": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block14273": [
                "Token(tokenUser[0]).transfer(msg.sender,amount)"
            ],
            "block17843": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block6399": [
                "Token(tokenUser[0]).transferFrom(msg.sender,this,amount)"
            ],
            "jump18363": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block2950": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block4283": [
                "Token(tokenUser[0]).transfer(admin,orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]])"
            ],
            "jump5258": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block5258": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block11520": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump5508": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block5508": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump10654": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump1401": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump18655": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump20925": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block19668": [
                "sellerShort[0].transfer(msg.value)"
            ],
            "jump4283": [
                "Token(tokenUser[0]).transfer(admin,orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]])",
                "Token(tokenUser[0]).transfer(admin,orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]])"
            ],
            "jump20633": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump11043": [
                "msg.sender.transfer(orderRecord[msg.sender][orderHash].coupon)",
                "msg.sender.transfer(orderRecord[msg.sender][orderHash].coupon)"
            ],
            "block8761": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block7394": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump17593": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump7102": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "jump3239": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump11520": [
                "sha256(tokenUser,minMaxDWCPNonce)",
                "sha256(tokenUser,minMaxDWCPNonce)"
            ],
            "block3239": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "jump17843": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\",orderHash),v,rs[0],rs[1])"
            ],
            "block20633": [
                "sha256(tokenUser,minMaxDWCPNonce)"
            ]
        }
    }
}