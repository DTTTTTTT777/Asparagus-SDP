{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "LockableChanges": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "lockChanges()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "lockChanges()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "lockChanges()": [
                103,
                75
            ],
            "transferOwnership(address)": [
                260,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "GENSharesToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "setSaleAgent(address)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "setSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1703,
                427
            ],
            "approve(address,uint256)": [
                448,
                119
            ],
            "increaseApproval(address,uint256)": [
                1602,
                405
            ],
            "mint(address,uint256)": [
                847,
                229
            ],
            "finishMinting()": [
                1136,
                295
            ],
            "balanceOf(address)": [
                1049,
                273
            ],
            "decreaseApproval(address,uint256)": [
                948,
                251
            ],
            "transferFrom(address,address,uint256)": [
                659,
                185
            ],
            "transferOwnership(address)": [
                1822,
                449
            ],
            "setSaleAgent(address)": [
                549,
                141
            ],
            "transfer(address,uint256)": [
                1414,
                361
            ]
        },
        "block_CALL_mapping": {}
    },
    "CommonCrowdsale": {
        "function_list": [
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "lockChanges()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "getBonus()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                885,
                295
            ],
            "retrieveTokens(address)": [
                973,
                339
            ],
            "setStart(uint256)": [
                1516,
                581
            ],
            "createTokens()": [
                1083,
                383
            ],
            "setHardcap(uint256)": [
                1289,
                493
            ],
            "setPrice(uint256)": [
                797,
                251
            ],
            "setWallet(address)": [
                1222,
                471
            ],
            "transferOwnership(address)": [
                1449,
                559
            ]
        },
        "block_CALL_mapping": {
            "block1701": [
                "wallet.transfer(msg.value)"
            ],
            "jump2156_1": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump2156_0": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_1": [
                "token.mint(msg.sender, tokens)"
            ],
            "block2156_0": [
                "token.mint(msg.sender, tokens)"
            ],
            "jump4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "jump3483": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "block1701_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1701_1": [
                "wallet.transfer(msg.value)"
            ],
            "block3483": [
                "token.transferOwnership(owner)"
            ],
            "block4273": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block3201": [
                "token.finishMinting(invested)"
            ],
            "jump3201": [
                "token.finishMinting(invested)",
                "token.finishMinting(invested)"
            ],
            "block2899": [
                "token.mint(to, amount)"
            ],
            "jump2156": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump1701": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2899": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump1701_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1701_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2156": [
                "token.mint(msg.sender, tokens)"
            ],
            "block4081": [
                "alienToken.balanceOf(this)"
            ],
            "jump4081": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ]
        }
    },
    "Presale": {
        "function_list": [
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "setNextSaleAgent(address)",
            "setSoftcap(uint256)",
            "setDevWallet(address)",
            "setDevLimit(uint256)",
            "refund()",
            "createTokens()",
            "widthrawDev()",
            "widthraw()",
            "finishMinting()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "getBonus()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "lockChanges()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setNextSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setSoftcap(uint256)": {
                "argument": {
                    "newSoftcap": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevLimit(uint256)": {
                "argument": {
                    "newDevLimit": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "widthrawDev()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "widthraw()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                2285,
                735
            ],
            "setBountyTokensWallet(address)": [
                3436,
                1241
            ],
            "retrieveTokens(address)": [
                2425,
                801
            ],
            "setEnd(uint256)": [
                1621,
                471
            ],
            "refund()": [
                1375,
                339
            ],
            "setStart(uint256)": [
                3348,
                1197
            ],
            "getBonus()": [
                1713,
                515
            ],
            "setDevLimit(uint256)": [
                2686,
                933
            ],
            "setBountyTokensPercent(uint256)": [
                1398,
                361
            ],
            "widthrawDev()": [
                2774,
                977
            ],
            "setAdvisorsTokensWallet(address)": [
                868,
                141
            ],
            "setHardcap(uint256)": [
                2994,
                1065
            ],
            "addBonus(uint256,uint256)": [
                2492,
                823
            ],
            "setDevWallet(address)": [
                935,
                163
            ],
            "widthraw()": [
                2330,
                757
            ],
            "setPrice(uint256)": [
                1973,
                603
            ],
            "setWallet(address)": [
                2884,
                1021
            ],
            "setToken(address)": [
                714,
                97
            ],
            "finishMinting()": [
                5871,
                21002
            ],
            "setDevTokensPercent(uint256)": [
                3303,
                1175
            ],
            "setSoftcap(uint256)": [
                669,
                75
            ],
            "setAdvisorsTokensPercent(uint256)": [
                1486,
                405
            ],
            "setDevTokensWallet(address)": [
                1531,
                427
            ],
            "bonusesCount()": [
                2951,
                1043
            ],
            "setNextSaleAgent(address)": [
                3039,
                1087
            ],
            "createTokens()": [
                2590,
                867
            ],
            "lockChanges()": [
                1132,
                229
            ],
            "transferOwnership(address)": [
                3236,
                1153
            ]
        },
        "block_CALL_mapping": {
            "jump8408_0": [
                "devWallet.transfer(devLimit)",
                "devWallet.transfer(devLimit)"
            ],
            "block4937": [
                "msg.sender.transfer(value)"
            ],
            "jump6167": [
                "token.setSaleAgent(nextSaleAgent)",
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump4937": [
                "msg.sender.transfer(value)",
                "msg.sender.transfer(value)"
            ],
            "block10832": [
                "token.mint(to, amount)"
            ],
            "jump5871": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump7558": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block7558": [
                "token.balanceOf(this)"
            ],
            "jump10832": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block8408": [
                "devWallet.transfer(devLimit)"
            ],
            "block7029": [
                "wallet.transfer(this.balance)"
            ],
            "block10832_4": [
                "token.mint(to, amount)"
            ],
            "block10832_2": [
                "token.mint(to, amount)"
            ],
            "block10832_3": [
                "token.mint(to, amount)"
            ],
            "block10832_0": [
                "token.mint(to, amount)"
            ],
            "block10832_1": [
                "token.mint(to, amount)"
            ],
            "jump10832_4": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump10832_0": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump10832_1": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump10832_2": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump10832_3": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7750": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block8408_0": [
                "devWallet.transfer(devLimit)"
            ],
            "block6167": [
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump7029": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block7750": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "jump8408": [
                "devWallet.transfer(devLimit)",
                "devWallet.transfer(devLimit)"
            ],
            "block5871": [
                "token.finishMinting()"
            ]
        }
    },
    "ICO": {
        "function_list": [
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "finishMinting()",
            "createTokens()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {}
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {}
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {}
            },
            "setToken(address)": {
                "argument": {},
                "contract": {}
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {}
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {}
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {}
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {}
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {}
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {}
            },
            "getBonus()": {
                "argument": {},
                "contract": {}
            },
            "createTokens()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "lockChanges()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                1627,
                537
            ],
            "setBountyTokensWallet(address)": [
                2490,
                911
            ],
            "retrieveTokens(address)": [
                1744,
                581
            ],
            "setEnd(uint256)": [
                1187,
                361
            ],
            "createTokens()": [
                1909,
                647
            ],
            "setStart(uint256)": [
                2445,
                889
            ],
            "getBonus()": [
                1232,
                383
            ],
            "setBountyTokensPercent(uint256)": [
                964,
                251
            ],
            "setAdvisorsTokensWallet(address)": [
                658,
                119
            ],
            "setHardcap(uint256)": [
                2158,
                779
            ],
            "addBonus(uint256,uint256)": [
                1811,
                603
            ],
            "bonusesCount()": [
                2115,
                757
            ],
            "setPrice(uint256)": [
                1362,
                427
            ],
            "setToken(address)": [
                504,
                75
            ],
            "setWallet(address)": [
                2048,
                735
            ],
            "finishMinting()": [
                4089,
                886
            ],
            "setDevTokensPercent(uint256)": [
                2400,
                867
            ],
            "transferOwnership(address)": [
                2333,
                845
            ],
            "setAdvisorsTokensPercent(uint256)": [
                1052,
                295
            ],
            "setDevTokensWallet(address)": [
                1097,
                317
            ],
            "lockChanges()": [
                768,
                163
            ]
        },
        "block_CALL_mapping": {
            "block5369": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block2711": [
                "wallet.transfer(msg.value)"
            ],
            "jump5369": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block7726": [
                "token.mint(to, amount)"
            ],
            "jump7726": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block2711_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2711_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump2711_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2711_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block7726_4": [
                "token.mint(to, amount)"
            ],
            "jump2711": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block7726_3": [
                "token.mint(to, amount)"
            ],
            "block7726_2": [
                "token.mint(to, amount)"
            ],
            "block7726_1": [
                "token.mint(to, amount)"
            ],
            "block7726_0": [
                "token.mint(to, amount)"
            ],
            "jump5177": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump4089": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block5177": [
                "token.balanceOf(this)"
            ],
            "jump7726_4": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block4089": [
                "token.finishMinting()"
            ],
            "jump7726_1": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_0": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_3": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_2": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ]
        }
    },
    "Deployer": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "deploy()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "deploy()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}