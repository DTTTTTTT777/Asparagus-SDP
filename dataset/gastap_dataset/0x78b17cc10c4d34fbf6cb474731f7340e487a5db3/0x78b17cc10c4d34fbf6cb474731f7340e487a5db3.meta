{
    "UTEMIS": {
        "function_list": [
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "UTEMIS()",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "getInvestors()",
            "getTokensDistributeds()",
            "getBonus(uint256)",
            "escale(uint256)",
            "getTokensToSend(uint256)",
            "setBeneficiary(address)",
            "startIco()",
            "stopIco()",
            "giveBackEthers()",
            "fallback()",
            "extendICO(uint256)",
            "destroyContract()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "UTEMIS()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "getInvestors()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "getTokensDistributeds()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "getBonus(uint256)": {
                "argument": {
                    "_ethers": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "escale(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "getTokensToSend(uint256)": {
                "argument": {
                    "_ethers": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "stopIco()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "giveBackEthers()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "extendICO(uint256)": {
                "argument": {
                    "timetoextend": "uint256"
                },
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "destroyContract()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ICO_DAYS": "uint256",
                    "MIN_ACCEPTED_VALUE": "uint256",
                    "VALUE_OF_UTS": "uint256",
                    "TOKEN_NAME": "string",
                    "TOKEN_SYMBOL": "string",
                    "TOTAL_SUPPLY": "uint256",
                    "ICO_SUPPLY": "uint256",
                    "SOFT_CAP": "uint256",
                    "START_ICO": "uint256",
                    "deadLine": "uint256",
                    "startTime": "uint256",
                    "remaining": "uint256",
                    "bonusTime": "uint256[4]",
                    "bonusBenefit": "uint8[4]",
                    "bonusPerInvestion_5": "uint8[4]",
                    "bonusPerInvestion_10": "uint8[4]",
                    "ethers_collected": "uint256",
                    "ethers_balance": "uint256",
                    "investorsAddress": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "getTokensDistributeds()": [
                2345,
                295
            ],
            "extendICO(uint256)": [
                2836,
                493
            ],
            "destroyContract()": [
                1744,
                97
            ],
            "giveBackEthers()": [
                2322,
                273
            ],
            "startIco()": [
                2541,
                383
            ],
            "getInvestors()": [
                2924,
                537
            ],
            "stopIco()": [
                2518,
                361
            ],
            "balanceOf(address)": [
                2388,
                317
            ],
            "getBonus(uint256)": [
                2208,
                229
            ],
            "setBeneficiary(address)": [
                1954,
                163
            ],
            "getTokensToSend(uint256)": [
                2564,
                405
            ],
            "transfer(address,uint256)": [
                2759,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump1374": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block1374_0": [
                "beneficiary.send(msg.value)"
            ],
            "block1374": [
                "beneficiary.send(msg.value)"
            ],
            "jump1374_0": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block5839": [
                "investorA.transfer(amount)"
            ],
            "jump5839": [
                "investorA.transfer(amount)",
                "investorA.transfer(amount)"
            ]
        }
    }
}