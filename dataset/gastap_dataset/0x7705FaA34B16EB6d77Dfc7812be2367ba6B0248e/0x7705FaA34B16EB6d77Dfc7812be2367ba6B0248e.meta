{
    "PreArtexToken": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {}
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeBtcOracle(address)": [
                147,
                75
            ],
            "changeOracle(address)": [
                301,
                119
            ],
            "confirmOwner()": [
                609,
                207
            ],
            "changeOwner(address)": [
                542,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "Stateful": {
        "function_list": [
            "setState(Stateful.State)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "Crowdsale()",
            "emitTokens(address,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256)",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_usdwei": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "emitTokensFor(address,uint256,uint256)": {
                "argument": {
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "etherPriceUSDWEI": "uint256",
                    "totalLimitUSDWEI": "uint256",
                    "minimalSuccessUSDWEI": "uint256",
                    "collectedUSDWEI": "uint256",
                    "crowdsaleStartTime": "uint256",
                    "crowdsaleFinishTime": "uint256",
                    "tokenPriceUSDWEI": "uint256",
                    "numberOfInvestors": "uint256",
                    "numberOfInvestorsToWithdraw": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block968_1": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "block968_0": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "block1230_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump968_1": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)",
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "jump968_0": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)",
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "jump1230_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1230_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump968": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)",
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "block1230": [
                "wallet.transfer(msg.value)"
            ],
            "block968": [
                "token.transferFrom(tokenStockAddress, msg.sender, tokens)"
            ],
            "jump1230": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1230_0": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Crowdsale()",
            "emitTokens(address,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256)",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "Token()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_usdwei": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "emitTokensFor(address,uint256,uint256)": {
                "argument": {
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8"
                }
            },
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "balanceOf(address)": [
                848,
                229
            ],
            "transferFrom(address,address,uint256)": [
                579,
                163
            ],
            "allowance(address,address)": [
                1357,
                361
            ],
            "transfer(address,uint256)": [
                1189,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "ArtexToken": {
        "function_list": [
            "MigratableToken()",
            "setMigrationHost(address)",
            "migrateStateFromHost()",
            "migrateInvestorsFromHost(uint256)",
            "migrateInvestorFromHost(address)",
            "migrateInvestorsFromHostInternal(address,PreArtexToken)",
            "migrate()",
            "setMigrationAgent(address)",
            "Token()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Crowdsale()",
            "emitTokens(address,uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "fallback()",
            "depositUSD(address,uint256)",
            "depositBTC(address,uint256,uint256,bytes32)",
            "emitTokensFor(address,uint256,uint256)",
            "startPreSale(address,uint256,uint256,uint256)",
            "finishPreSale()",
            "startSale(address,uint256,uint256,uint256,uint256)",
            "failSale(uint256)",
            "completeSale(uint256)",
            "setEtherPriceUSDWEI(uint256)",
            "setBeneficiary(address)",
            "withdrawBack()",
            "returnInvestments(uint256)",
            "returnInvestmentsTo(address)",
            "returnInvestmentsToInternal(address)",
            "withdrawFunds(uint256)",
            "setState(Stateful.State)",
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "changeOracle(address)",
            "changeBtcOracle(address)",
            "ArtexToken()",
            "emitTokens(address,uint256)",
            "getTokensToEmit(uint256)",
            "emitAdditionalTokens()",
            "burnTokens(address,uint256)",
            "addAllowedContract(address)",
            "removeAllowedContract(address)",
            "transferToKnownContract(address,uint256,bytes32[])",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MigratableToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setMigrationHost(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrateStateFromHost()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrateInvestorsFromHost(uint256)": {
                "argument": {
                    "batchSize": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrateInvestorFromHost(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrateInvestorsFromHostInternal(address,PreArtexToken)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_valueUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitAdditionalTokens()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "depositUSD(address,uint256)": {
                "argument": {
                    "_amountUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "depositBTC(address,uint256,uint256,bytes32)": {
                "argument": {
                    "_amountBTCWEI": "uint256",
                    "_btcPriceUSDWEI": "uint256",
                    "_btcTxId": "bytes32"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "emitTokensFor(address,uint256,uint256)": {
                "argument": {
                    "_valueUSDWEI": "uint256",
                    "_valueWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "startPreSale(address,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "finishPreSale()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "startSale(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256",
                    "_totalLimitUSDWEI": "uint256",
                    "_crowdsaleDurationDays": "uint256",
                    "_minimalSuccessUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "failSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "completeSale(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setEtherPriceUSDWEI(uint256)": {
                "argument": {
                    "_etherPriceUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "withdrawBack()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestments(uint256)": {
                "argument": {
                    "_investorsToProcess": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestmentsTo(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "returnInvestmentsToInternal(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "withdrawFunds(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "setState(Stateful.State)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeOracle(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "changeBtcOracle(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "ArtexToken()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "getTokensToEmit(uint256)": {
                "argument": {
                    "_valueUSDWEI": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "addAllowedContract(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "removeAllowedContract(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "transferToKnownContract(address,uint256,bytes32[])": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32[]"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string"
                }
            }
        },
        "function_block_mapping": {
            "startSale(address,uint256,uint256,uint256,uint256)": [
                1037,
                75
            ],
            "withdrawFunds(uint256)": [
                1630,
                251
            ],
            "setMigrationHost(address)": [
                3238,
                757
            ],
            "allowance(address,address)": [
                4863,
                1285
            ],
            "removeAllowedContract(address)": [
                3864,
                955
            ],
            "transferFrom(address,address,uint256)": [
                2025,
                405
            ],
            "failSale(uint256)": [
                1497,
                185
            ],
            "approve(address,uint256)": [
                1397,
                141
            ],
            "changeBtcOracle(address)": [
                1675,
                273
            ],
            "migrateInvestorsFromHost(uint256)": [
                4654,
                1219
            ],
            "migrate()": [
                3611,
                867
            ],
            "changeOracle(address)": [
                2571,
                581
            ],
            "setMigrationAgent(address)": [
                3171,
                735
            ],
            "depositBTC(address,uint256,uint256,bytes32)": [
                2470,
                559
            ],
            "transferToKnownContract(address,uint256,bytes32[])": [
                4982,
                1307
            ],
            "withdrawBack()": [
                1474,
                163
            ],
            "migrateStateFromHost()": [
                4101,
                1021
            ],
            "migrateInvestorFromHost(address)": [
                4124,
                1043
            ],
            "setEtherPriceUSDWEI(uint256)": [
                1542,
                207
            ],
            "changeOwner(address)": [
                4321,
                1109
            ],
            "depositUSD(address,uint256)": [
                4786,
                1263
            ],
            "balanceOf(address)": [
                3039,
                691
            ],
            "returnInvestmentsTo(address)": [
                2201,
                449
            ],
            "confirmOwner()": [
                4574,
                1175
            ],
            "finishPreSale()": [
                2447,
                537
            ],
            "completeSale(uint256)": [
                3126,
                713
            ],
            "returnInvestments(uint256)": [
                3392,
                801
            ],
            "setBeneficiary(address)": [
                1828,
                339
            ],
            "transfer(address,uint256)": [
                4388,
                1131
            ],
            "startPreSale(address,uint256,uint256,uint256)": [
                2638,
                603
            ],
            "addAllowedContract(address)": [
                2134,
                427
            ]
        },
        "block_CALL_mapping": {
            "jump13426": [
                "preArtex.totalLimitUSDWEI()",
                "preArtex.totalLimitUSDWEI()"
            ],
            "jump13756": [
                "preArtex.collectedUSDWEI()",
                "preArtex.collectedUSDWEI()"
            ],
            "block13756": [
                "preArtex.collectedUSDWEI()"
            ],
            "block14086": [
                "preArtex.crowdsaleFinishTime()"
            ],
            "block918": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "block13591": [
                "preArtex.minimalSuccessUSDWEI()"
            ],
            "block13921": [
                "preArtex.crowdsaleStartTime()"
            ],
            "block10699": [
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "jump17603": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ],
            "jump18767_0": [
                "preArtex.investors(_address)",
                "preArtex.investors(_address)"
            ],
            "jump18767": [
                "preArtex.investors(_address)",
                "preArtex.investors(_address)"
            ],
            "block7120": [
                "beneficiary.call.gas(3000000).value(_value)()"
            ],
            "jump16020": [
                "preArtex.investorsIter(index)",
                "preArtex.investorsIter(index)"
            ],
            "jump918_0": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()",
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "jump13203": [
                "preArtex.beneficiary()",
                "preArtex.beneficiary()"
            ],
            "block15803": [
                "preArtex.numberOfInvestors()"
            ],
            "jump15803": [
                "preArtex.numberOfInvestors()",
                "preArtex.numberOfInvestors()"
            ],
            "block18767_0": [
                "preArtex.investors(_address)"
            ],
            "jump918": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()",
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "block17603_1": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block17603_0": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block16020": [
                "preArtex.investorsIter(index)"
            ],
            "jump8983": [
                "beneficiary.call.gas(3000000).value(this.balance)()",
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "jump13921": [
                "preArtex.crowdsaleStartTime()",
                "preArtex.crowdsaleStartTime()"
            ],
            "jump10699": [
                "beneficiary.call.gas(3000000).value(this.balance)()",
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "jump14086": [
                "preArtex.crowdsaleFinishTime()",
                "preArtex.crowdsaleFinishTime()"
            ],
            "jump17603_1": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ],
            "jump17603_0": [
                "_to.call.gas(3000000).value(value)()",
                "_to.call.gas(3000000).value(value)()"
            ],
            "block16916": [
                "knownContract.transfered(msg.sender, _value, _data)"
            ],
            "jump13591": [
                "preArtex.minimalSuccessUSDWEI()",
                "preArtex.minimalSuccessUSDWEI()"
            ],
            "block8983": [
                "beneficiary.call.gas(3000000).value(this.balance)()"
            ],
            "block17603": [
                "_to.call.gas(3000000).value(value)()"
            ],
            "block13426": [
                "preArtex.totalLimitUSDWEI()"
            ],
            "jump12147": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block13038": [
                "preArtex.etherPriceUSDWEI()"
            ],
            "jump16916": [
                "knownContract.transfered(msg.sender, _value, _data)",
                "knownContract.transfered(msg.sender, _value, _data)"
            ],
            "jump13038": [
                "preArtex.etherPriceUSDWEI()",
                "preArtex.etherPriceUSDWEI()"
            ],
            "jump7120": [
                "beneficiary.call.gas(3000000).value(_value)()",
                "beneficiary.call.gas(3000000).value(_value)()"
            ],
            "block918_0": [
                "msg.sender.call.gas(3000000).value(weiToReturn)()"
            ],
            "block18767": [
                "preArtex.investors(_address)"
            ],
            "block13203": [
                "preArtex.beneficiary()"
            ],
            "block12147": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ]
        }
    }
}